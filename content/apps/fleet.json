{
    "id": "fleet",
    "name": "fleet",
    "description": "[{{ project_name|capitalize }}]({{ project_url }}) provides an online web interface which displays a set of maintained images from one or more owned repositories.",
    "icon": "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/fleet.png",
    "links": [
        {
            "type": "docker",
            "url": "https://hub.docker.com/r/linuxserver/fleet"
        },
        {
            "type": "docs",
            "url": "https://docs.linuxserver.io/images/docker-fleet"
        }
    ],
    "containers": [
        {
            "name": "fleet",
            "image": "linuxserver/fleet",
            "env": [
                {
                    "id": "PUID",
                    "key": "PUID",
                    "description": "User ID",
                    "default": "100"
                },
                {
                    "id": "PGID",
                    "key": "PGID",
                    "description": "Group ID",
                    "default": "100"
                },
                {
                    "id": "fleet_admin_authentication_type",
                    "default": "DATABASE",
                    "description": "A switch to define how Fleet manages user logins. If set to DATABASE, see the related optional params. Can be set to either DATABASE or PROPERTIES."
                },
                {
                    "id": "fleet_database_url",
                    "default": "jdbc:mariadb://<url>:3306/fleet",
                    "description": "The full JDBC connection string to the Fleet database"
                },
                {
                    "id": "fleet_database_username",
                    "default": "fleet_user",
                    "description": "The username with the relevant GRANT permissions for the database"
                },
                {
                    "id": "fleet_database_password",
                    "default": "dbuserpassword",
                    "description": "The database user's password."
                },
                {
                    "id": "fleet_admin_secret",
                    "default": "randomstring",
                    "description": "A string used as part of the password key derivation process."
                }
            ],
            "volumes": [
                {
                    "container": "/config",
                    "description": "The primary config file and rolling log files.",
                    "key": "config"
                }
            ],
            "ports": [
                {
                    "container": "8080",
                    "description": "Http port",
                    "protocol": "tcp",
                    "web": false
                }
            ]
        }
    ],
    "meta": {
        "readme-vars": {
            "project_name": "fleet",
            "project_url": "https://github.com/linuxserver/fleet",
            "project_logo": "",
            "project_blurb": "[{{ project_name|capitalize }}]({{ project_url }}) provides an online web interface which displays a set of maintained images from one or more owned repositories.",
            "project_lsio_github_repo_url": "https://github.com/linuxserver/docker-{{ project_name }}",
            "project_blurb_optional_extras_enabled": false,
            "project_blurb_optional_extras": [],
            "available_architectures": [
                {
                    "arch": "{{ arch_x86_64 }}",
                    "tag": "amd64-latest"
                },
                {
                    "arch": "{{ arch_arm64 }}",
                    "tag": "arm64v8-latest"
                },
                {
                    "arch": "{{ arch_armhf }}",
                    "tag": "arm32v7-latest"
                }
            ],
            "development_versions": false,
            "development_versions_items": null,
            "common_param_env_vars_enabled": true,
            "param_container_name": "{{ project_name }}",
            "param_usage_include_net": false,
            "param_usage_include_env": true,
            "param_env_vars": [
                {
                    "env_var": "fleet_admin_authentication_type",
                    "env_value": "DATABASE",
                    "desc": "A switch to define how Fleet manages user logins. If set to DATABASE, see the related optional params. Can be set to either DATABASE or PROPERTIES."
                },
                {
                    "env_var": "fleet_database_url",
                    "env_value": "jdbc:mariadb://<url>:3306/fleet",
                    "desc": "The full JDBC connection string to the Fleet database"
                },
                {
                    "env_var": "fleet_database_username",
                    "env_value": "fleet_user",
                    "desc": "The username with the relevant GRANT permissions for the database"
                },
                {
                    "env_var": "fleet_database_password",
                    "env_value": "dbuserpassword",
                    "desc": "The database user's password."
                }
            ],
            "param_usage_include_vols": true,
            "param_volumes": [
                {
                    "vol_path": "/config",
                    "vol_host_path": "</path/to/appdata/config>",
                    "desc": "The primary config file and rolling log files."
                }
            ],
            "param_usage_include_ports": true,
            "param_ports": [
                {
                    "external_port": "8080",
                    "internal_port": "8080",
                    "port_desc": "Http port"
                }
            ],
            "opt_param_usage_include_env": true,
            "opt_param_env_vars": [
                {
                    "env_var": "fleet_admin_secret",
                    "env_value": "randomstring",
                    "desc": "A string used as part of the password key derivation process."
                }
            ],
            "opt_param_usage_include_vols": false,
            "opt_param_volumes": null,
            "opt_param_usage_include_ports": false,
            "opt_param_ports": null,
            "opt_param_device_map": false,
            "opt_param_devices": null,
            "opt_cap_add_param": false,
            "opt_cap_add_param_vars": null,
            "optional_block_1": false,
            "optional_block_1_items": "",
            "app_setup_block_enabled": true,
            "app_setup_block": "Navigate to `http://your_ip_here:8080` to display the home page. If `DATABASE` is selected as the preferred authentication process, ensure that you set up an\ninitial user via `http://your_ip_here:8080/setup`. Once done, that page will no longer be available. A restart is preferable as it will remove the page altogether.\nOnce complete, you can log into the app via `http://your_ip_here:8080/login` to manage your repositories.\n",
            "changelogs": [
                {
                    "date": "02.05.22:",
                    "desc": "Rebase to Alpine 3.15."
                },
                {
                    "date": "13.12.21:",
                    "desc": "Add mitigations for CVE-2021-44228"
                },
                {
                    "date": "26.04.20:",
                    "desc": "Updated to keep in line with v2.0.0 branch of Fleet"
                },
                {
                    "date": "19.12.19:",
                    "desc": "Rebasing to alpine 3.11."
                },
                {
                    "date": "02.07.19:",
                    "desc": "Rebasing to alpine 3.10."
                },
                {
                    "date": "02.07.19:",
                    "desc": "Stop container if fleet fails."
                },
                {
                    "date": "19.05.19:",
                    "desc": "Use new base images for arm versions."
                },
                {
                    "date": "01.04.19:",
                    "desc": "Initial Release"
                }
            ]
        }
    },
    "setup": "Navigate to `http://your_ip_here:8080` to display the home page. If `DATABASE` is selected as the preferred authentication process, ensure that you set up an\ninitial user via `http://your_ip_here:8080/setup`. Once done, that page will no longer be available. A restart is preferable as it will remove the page altogether.\nOnce complete, you can log into the app via `http://your_ip_here:8080/login` to manage your repositories.\n"
}