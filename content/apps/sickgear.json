{
    "id": "sickgear",
    "name": "sickgear",
    "description": "[SickGear]({{ project_url }}) provides management of TV shows and/or Anime, it detects new episodes, links downloader apps, and more..\n\nFor more information on SickGear visit their website and check it out: https://github.com/SickGear/SickGear\n",
    "icon": "https://raw.githubusercontent.com/wiki/SickGear/SickGear.Wiki/images/SickGearLogo.png",
    "links": [
        {
            "type": "docker",
            "url": "https://hub.docker.com/r/linuxserver/sickgear"
        },
        {
            "type": "docs",
            "url": "https://docs.linuxserver.io/images/docker-sickgear"
        }
    ],
    "containers": [
        {
            "name": "sickgear",
            "image": "linuxserver/sickgear",
            "env": [
                {
                    "id": "PUID",
                    "key": "PUID",
                    "description": "User ID",
                    "default": "100"
                },
                {
                    "id": "PGID",
                    "key": "PGID",
                    "description": "Group ID",
                    "default": "100"
                },
                {
                    "id": "TZ",
                    "default": "Europe/London",
                    "description": "Specify a timezone to use EG Europe/London."
                }
            ],
            "volumes": [
                {
                    "container": "/config",
                    "description": "this will store any uploaded data on the docker host",
                    "key": "config"
                },
                {
                    "container": "/tv",
                    "description": "where you store your tv shows"
                },
                {
                    "container": "/downloads",
                    "description": "your downloads folder for post processing (must not be download in progress)"
                }
            ],
            "ports": [
                {
                    "container": "8081",
                    "description": "will map the container's port 8081 to port 8081 on the host",
                    "protocol": "tcp",
                    "web": false
                }
            ]
        }
    ],
    "meta": {
        "readme-vars": {
            "project_name": "sickgear",
            "project_url": "https://github.com/sickgear/sickgear",
            "project_logo": "https://raw.githubusercontent.com/wiki/SickGear/SickGear.Wiki/images/SickGearLogo.png",
            "project_blurb": "[SickGear]({{ project_url }}) provides management of TV shows and/or Anime, it detects new episodes, links downloader apps, and more..\n\nFor more information on SickGear visit their website and check it out: https://github.com/SickGear/SickGear\n",
            "project_lsio_github_repo_url": "https://github.com/linuxserver/docker-{{ project_name }}",
            "available_architectures": [
                {
                    "arch": "{{ arch_x86_64 }}",
                    "tag": "amd64-latest"
                },
                {
                    "arch": "{{ arch_arm64 }}",
                    "tag": "arm64v8-latest"
                },
                {
                    "arch": "{{ arch_armhf }}",
                    "tag": "arm32v7-latest"
                }
            ],
            "param_container_name": "{{ project_name }}",
            "param_usage_include_vols": true,
            "param_volumes": [
                {
                    "vol_path": "/config",
                    "vol_host_path": "/path/to/data",
                    "desc": "this will store any uploaded data on the docker host"
                },
                {
                    "vol_path": "/tv",
                    "vol_host_path": "/path/to/data",
                    "desc": "where you store your tv shows"
                },
                {
                    "vol_path": "/downloads",
                    "vol_host_path": "/path/to/data",
                    "desc": "your downloads folder for post processing (must not be download in progress)"
                }
            ],
            "param_usage_include_env": true,
            "param_env_vars": [
                {
                    "env_var": "TZ",
                    "env_value": "Europe/London",
                    "desc": "Specify a timezone to use EG Europe/London."
                }
            ],
            "param_usage_include_ports": true,
            "param_ports": [
                {
                    "external_port": "8081",
                    "internal_port": "8081",
                    "port_desc": "will map the container's port 8081 to port 8081 on the host"
                }
            ],
            "app_setup_block_enabled": true,
            "app_setup_block": "## Setting up the application\n\nAccess the webui at `<your-ip>:8081`, for more information check out [SickGear]({{ project_url }}).\n\n## Migration\n\nNon linuxserver.io containers are known to have the following configuration differences and may need SickGear or docker changes to migrate an existing setup\n\n* The post processing directory which is volume mounted as `downloads` within this container may be `incoming` in other versions.\n\n* The permissions environmental variables which are defined as `PGID` and `PUID` within this container may have been `APP_UID` and `APP_UID` in other versions.\n\n* The configuration file directory which is volume mounted as `config` within this container may be set as the environmetal variable `APP_DATA` in other versions.\n\n* The cache directory which is set in `config.ini` may be configured as a fixed path `cache_dir = /data/cache`.\nSymptoms of this issue include port usage problems and a failure to start the web server log entries.\nWhilst the container is stopped alter this directive to `cache_dir = cache` which will allow SickGear to look for the folder relative to the volume mounted `/config` directory.\n\nIt is recommended that a clean install be completed, rather than a migration, however if migration is necessary:\n\n* start a new instance of this image\n\n* compare and align SickGear version numbers bewteen old and new. Ideally they should match but at a minumum the old vesion should be a lower version number to allow SickGear itself to try and migrate\n\n* stop both containers\n\n* notice the configuration difference and migrate copies of the old settings into the new app\n\n* start the new container and test\n",
            "changelogs": [
                {
                    "date": "18.11.22:",
                    "desc": "Update service file from legacy SickBeard.py to sickgear.py."
                },
                {
                    "date": "10.10.22:",
                    "desc": "Rebase to Alpine 3.16, migrate to s6v3."
                },
                {
                    "date": "19.09.22:",
                    "desc": "Rebase to alpine 3.15. Build unrar from source."
                },
                {
                    "date": "31.01.21:",
                    "desc": "Add unrar."
                },
                {
                    "date": "29.01.21:",
                    "desc": "Deprecate `UMASK_SET` in favor of UMASK in baseimage, see above for more information."
                },
                {
                    "date": "23.01.21:",
                    "desc": "Rebasing to alpine 3.13."
                },
                {
                    "date": "03.06.20:",
                    "desc": "Rebasing to alpine 3.12, switch to python3."
                },
                {
                    "date": "19.12.19:",
                    "desc": "Rebasing to alpine 3.11."
                },
                {
                    "date": "28.06.19:",
                    "desc": "Rebasing to alpine 3.10."
                },
                {
                    "date": "23.03.19:",
                    "desc": "Switching to new Base images, shift to arm32v7 tag."
                },
                {
                    "date": "22.02.19:",
                    "desc": "Rebasing to alpine 3.9."
                },
                {
                    "date": "07.11.18:",
                    "desc": "Pipeline prep"
                },
                {
                    "date": "07.07.18:",
                    "desc": "Initial draft release"
                }
            ]
        }
    },
    "setup": "## Setting up the application\n\nAccess the webui at `<your-ip>:8081`, for more information check out [SickGear]({{ project_url }}).\n\n## Migration\n\nNon linuxserver.io containers are known to have the following configuration differences and may need SickGear or docker changes to migrate an existing setup\n\n* The post processing directory which is volume mounted as `downloads` within this container may be `incoming` in other versions.\n\n* The permissions environmental variables which are defined as `PGID` and `PUID` within this container may have been `APP_UID` and `APP_UID` in other versions.\n\n* The configuration file directory which is volume mounted as `config` within this container may be set as the environmetal variable `APP_DATA` in other versions.\n\n* The cache directory which is set in `config.ini` may be configured as a fixed path `cache_dir = /data/cache`.\nSymptoms of this issue include port usage problems and a failure to start the web server log entries.\nWhilst the container is stopped alter this directive to `cache_dir = cache` which will allow SickGear to look for the folder relative to the volume mounted `/config` directory.\n\nIt is recommended that a clean install be completed, rather than a migration, however if migration is necessary:\n\n* start a new instance of this image\n\n* compare and align SickGear version numbers bewteen old and new. Ideally they should match but at a minumum the old vesion should be a lower version number to allow SickGear itself to try and migrate\n\n* stop both containers\n\n* notice the configuration difference and migrate copies of the old settings into the new app\n\n* start the new container and test\n"
}