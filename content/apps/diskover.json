{
    "id": "diskover",
    "name": "diskover",
    "description": "[{{ project_name }}]({{ project_url }}) is an open source file system indexer that uses Elasticsearch to index and manage data across heterogeneous storage systems.",
    "icon": "https://raw.githubusercontent.com/diskoverdata/diskover-community/master/diskover-web/public/images/diskover.png",
    "links": [
        {
            "type": "docker",
            "url": "https://hub.docker.com/r/linuxserver/diskover"
        },
        {
            "type": "docs",
            "url": "https://docs.linuxserver.io/images/docker-diskover"
        }
    ],
    "containers": [
        {
            "name": "diskover",
            "image": "linuxserver/diskover",
            "env": [
                {
                    "id": "PUID",
                    "key": "PUID",
                    "description": "User ID",
                    "default": "100"
                },
                {
                    "id": "PGID",
                    "key": "PGID",
                    "description": "Group ID",
                    "default": "100"
                },
                {
                    "id": "TZ",
                    "default": "America/New_York",
                    "description": "Specify a timezone to use EG America/New_York"
                },
                {
                    "id": "ES_HOST",
                    "default": "elasticsearch",
                    "description": "ElasticSearch host (optional)"
                },
                {
                    "id": "ES_PORT",
                    "default": "9200",
                    "description": "ElasticSearch port (optional)"
                },
                {
                    "id": "ES_USER",
                    "default": "elastic",
                    "description": "ElasticSearch username (optional)"
                },
                {
                    "id": "ES_PASS",
                    "default": "changeme",
                    "description": "ElasticSearch password (optional)"
                }
            ],
            "volumes": [
                {
                    "container": "/config",
                    "description": "Persistent config files",
                    "key": "config"
                },
                {
                    "container": "/data",
                    "description": "Default mount point to crawl"
                }
            ],
            "ports": [
                {
                    "container": "80",
                    "description": "diskover Web UI",
                    "protocol": "tcp",
                    "web": false
                }
            ]
        }
    ],
    "meta": {
        "readme-vars": {
            "project_name": "diskover",
            "project_url": "https://github.com/diskoverdata/diskover-community",
            "project_logo": "https://raw.githubusercontent.com/diskoverdata/diskover-community/master/diskover-web/public/images/diskover.png",
            "project_blurb": "[{{ project_name }}]({{ project_url }}) is an open source file system indexer that uses Elasticsearch to index and manage data across heterogeneous storage systems.",
            "project_lsio_github_repo_url": "https://github.com/linuxserver/docker-{{ project_name }}",
            "available_architectures": [
                {
                    "arch": "{{ arch_x86_64 }}",
                    "tag": "amd64-latest"
                },
                {
                    "arch": "{{ arch_arm64 }}",
                    "tag": "arm64v8-latest"
                },
                {
                    "arch": "{{ arch_armhf }}",
                    "tag": "arm32v7-latest"
                }
            ],
            "common_param_env_vars_enabled": true,
            "param_container_name": "{{ project_name }}",
            "param_usage_include_vols": true,
            "param_volumes": [
                {
                    "vol_path": "/config",
                    "vol_host_path": "/path/to/{{ project_name }}/config",
                    "desc": "Persistent config files"
                },
                {
                    "vol_path": "/data",
                    "vol_host_path": "/path/to/{{ project_name }}/data",
                    "desc": "Default mount point to crawl"
                }
            ],
            "param_usage_include_ports": true,
            "param_ports": [
                {
                    "external_port": "80",
                    "internal_port": "80",
                    "port_desc": "diskover Web UI"
                }
            ],
            "param_usage_include_env": true,
            "param_env_vars": [
                {
                    "env_var": "TZ",
                    "env_value": "America/New_York",
                    "desc": "Specify a timezone to use EG America/New_York"
                },
                {
                    "env_var": "ES_HOST",
                    "env_value": "elasticsearch",
                    "desc": "ElasticSearch host (optional)"
                },
                {
                    "env_var": "ES_PORT",
                    "env_value": "9200",
                    "desc": "ElasticSearch port (optional)"
                },
                {
                    "env_var": "ES_USER",
                    "env_value": "elastic",
                    "desc": "ElasticSearch username (optional)"
                },
                {
                    "env_var": "ES_PASS",
                    "env_value": "changeme",
                    "desc": "ElasticSearch password (optional)"
                }
            ],
            "custom_compose": "version: '2'\nservices:\n  diskover:\n    image: lscr.io/linuxserver/diskover\n    container_name: diskover\n    environment:\n      - PUID=1000\n      - PGID=1000\n      - TZ=America/New_York\n      - ES_HOST=elasticsearch\n      - ES_PORT=9200\n    volumes:\n      - /path/to/diskover/config:/config\n      - /path/to/diskover/data:/data\n    ports:\n      - 80:80\n    mem_limit: 4096m\n    restart: unless-stopped\n    depends_on:\n      - elasticsearch\n  elasticsearch:\n    container_name: elasticsearch\n    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2\n    environment:\n      - discovery.type=single-node\n      - xpack.security.enabled=true\n      - bootstrap.memory_lock=true\n      - \"ES_JAVA_OPTS=-Xms1g -Xmx1g\"\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    volumes:\n      - /path/to/esdata:/usr/share/elasticsearch/data\n    ports:\n      - 9200:9200\n    depends_on:\n      - elasticsearch-helper\n    restart: unless-stopped\n  elasticsearch-helper:\n    image: alpine\n    command: sh -c \"sysctl -w vm.max_map_count=262144\"\n    privileged: true\n",
            "app_setup_block_enabled": true,
            "app_setup_block": "This application is dependent on an ElasticSearch instance. Please see the example compose file for additional information.\n\nThe default username is diskover with the password of **darkdata**, access the container at `http://<host-ip>/`. The UI may be unusable until a valid index has been created.\n\nThe default diskover-web Constants.php file located at `/config/diskover-web.conf.d/Constants.php` will need to be edited to allow diskover-web to communicate with the ElasticSearch container. The following entries will need to be edited:\n* `const ES_HOST = elasticsearch`\n* `const ES_PORT = 9200`\n\nThe application doesn't start an index by default. A crontab is created inside of the `/config` directory and can be set up to run automated indexes of `/data`. Changes to this crontab file require a restart to apply. You can also manually run an index by executing `/app/diskover/diskover.py` either in interactive or detached mode:\n\n* `docker exec -u abc -d diskover python3 /app/diskover/diskover.py -i diskover-my_index_name /data` Will run an index in the background\n* `docker exec -u abc -it diskover python3 /app/diskover/diskover.py -i diskover-my_index_name /data` Will run an index in the foreground\n",
            "changelogs": [
                {
                    "date": "25.02.22:",
                    "desc": "Add php7-sqlite3 to support rc4 release."
                },
                {
                    "date": "03.11.21:",
                    "desc": "Added more support for potential config files."
                },
                {
                    "date": "31.10.21:",
                    "desc": "Added xpack.security variable to ElasticSearch; added instructions to edit Constants.php in diskover; corrected command needed to manually generate an index in diskover"
                },
                {
                    "date": "11.10.21:",
                    "desc": "Updated to diskover-community v2."
                },
                {
                    "date": "19.11.20:",
                    "desc": "Fix pip packages."
                },
                {
                    "date": "19.12.19:",
                    "desc": "Rebasing to alpine 3.11."
                },
                {
                    "date": "28.06.19:",
                    "desc": "Rebasing to alpine 3.10."
                },
                {
                    "date": "12.04.19:",
                    "desc": "Rebase to Alpine 3.9."
                },
                {
                    "date": "23.03.19:",
                    "desc": "Switching to new Base images, shift to arm32v7 tag."
                },
                {
                    "date": "01.11.18:",
                    "desc": "Initial Release."
                }
            ]
        }
    },
    "setup": "This application is dependent on an ElasticSearch instance. Please see the example compose file for additional information.\n\nThe default username is diskover with the password of **darkdata**, access the container at `http://<host-ip>/`. The UI may be unusable until a valid index has been created.\n\nThe default diskover-web Constants.php file located at `/config/diskover-web.conf.d/Constants.php` will need to be edited to allow diskover-web to communicate with the ElasticSearch container. The following entries will need to be edited:\n* `const ES_HOST = elasticsearch`\n* `const ES_PORT = 9200`\n\nThe application doesn't start an index by default. A crontab is created inside of the `/config` directory and can be set up to run automated indexes of `/data`. Changes to this crontab file require a restart to apply. You can also manually run an index by executing `/app/diskover/diskover.py` either in interactive or detached mode:\n\n* `docker exec -u abc -d diskover python3 /app/diskover/diskover.py -i diskover-my_index_name /data` Will run an index in the background\n* `docker exec -u abc -it diskover python3 /app/diskover/diskover.py -i diskover-my_index_name /data` Will run an index in the foreground\n"
}