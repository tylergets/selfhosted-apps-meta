{
    "id": "boinc",
    "name": "boinc",
    "description": "[BOINC]({{ project_url }}) is a platform for high-throughput computing on a large scale (thousands or millions of computers). It can be used for volunteer computing (using consumer devices) or grid computing (using organizational resources). It supports virtualized, parallel, and GPU-based applications.",
    "icon": "https://raw.githubusercontent.com/BOINC/boinc/master/doc/logo/boinc_logo_black.jpg",
    "links": [
        {
            "type": "docker",
            "url": "https://hub.docker.com/r/linuxserver/boinc"
        },
        {
            "type": "docs",
            "url": "https://docs.linuxserver.io/images/docker-boinc"
        }
    ],
    "containers": [
        {
            "name": "boinc",
            "image": "linuxserver/boinc",
            "env": [
                {
                    "id": "PUID",
                    "key": "PUID",
                    "description": "User ID",
                    "default": "100"
                },
                {
                    "id": "PGID",
                    "key": "PGID",
                    "description": "Group ID",
                    "default": "100"
                },
                {
                    "id": "TZ",
                    "default": "Europe/London",
                    "description": "Specify a timezone to use EG Europe/London."
                },
                {
                    "id": "PASSWORD",
                    "default": "",
                    "description": "Optionally set a password for the gui."
                }
            ],
            "volumes": [
                {
                    "container": "/config",
                    "description": "Where BOINC should store its database and config.",
                    "key": "config"
                }
            ],
            "ports": [
                {
                    "container": "8080",
                    "description": "Boinc desktop gui.",
                    "protocol": "tcp",
                    "web": false
                }
            ]
        }
    ],
    "meta": {
        "readme-vars": {
            "project_name": "boinc",
            "project_url": "https://boinc.berkeley.edu/",
            "project_logo": "https://raw.githubusercontent.com/BOINC/boinc/master/doc/logo/boinc_logo_black.jpg",
            "project_blurb": "[BOINC]({{ project_url }}) is a platform for high-throughput computing on a large scale (thousands or millions of computers). It can be used for volunteer computing (using consumer devices) or grid computing (using organizational resources). It supports virtualized, parallel, and GPU-based applications.",
            "project_lsio_github_repo_url": "https://github.com/linuxserver/docker-{{ project_name }}",
            "project_blurb_optional_extras_enabled": false,
            "available_architectures": [
                {
                    "arch": "{{ arch_x86_64 }}",
                    "tag": "latest"
                },
                {
                    "arch": "{{ arch_arm64 }}",
                    "tag": "arm64v8-latest"
                },
                {
                    "arch": "{{ arch_armhf }}",
                    "tag": "arm32v7-latest"
                }
            ],
            "development_versions": false,
            "common_param_env_vars_enabled": true,
            "param_container_name": "{{ project_name }}",
            "param_usage_include_net": false,
            "param_usage_include_env": true,
            "param_env_vars": [
                {
                    "env_var": "TZ",
                    "env_value": "Europe/London",
                    "desc": "Specify a timezone to use EG Europe/London."
                }
            ],
            "param_usage_include_vols": true,
            "param_volumes": [
                {
                    "vol_path": "/config",
                    "vol_host_path": "/path/to/data",
                    "desc": "Where BOINC should store its database and config."
                }
            ],
            "param_usage_include_ports": true,
            "param_ports": [
                {
                    "external_port": "8080",
                    "internal_port": "8080",
                    "port_desc": "Boinc desktop gui."
                }
            ],
            "param_device_map": false,
            "cap_add_param": false,
            "cap_add_param_vars": "",
            "opt_param_usage_include_env": true,
            "opt_param_env_vars": [
                {
                    "env_var": "PASSWORD",
                    "env_value": "",
                    "desc": "Optionally set a password for the gui."
                }
            ],
            "opt_param_usage_include_vols": false,
            "opt_param_usage_include_ports": false,
            "opt_param_device_map": true,
            "opt_param_devices": [
                {
                    "device_path": "/dev/dri",
                    "device_host_path": "/dev/dri",
                    "desc": "Only needed if you want to use your Intel GPU (vaapi)."
                }
            ],
            "opt_cap_add_param": false,
            "optional_block_1": false,
            "opt_security_opt_param": true,
            "opt_security_opt_param_vars": [
                {
                    "run_var": "seccomp=unconfined",
                    "compose_var": "seccomp:unconfined",
                    "desc": "For Docker Engine only, many modern gui apps need this to function as syscalls are unkown to Docker."
                }
            ],
            "app_setup_block_enabled": true,
            "app_setup_block": "This image sets up the BOINC client and manager and makes its interface available via Guacamole server in the browser. The interface is available at `http://your-ip:8080`.\n\nBy default, there is no password set for the main gui. Optional environment variable `PASSWORD` will allow setting a password for the user `abc`.\n\nYou can access advanced features of the Guacamole remote desktop using `ctrl`+`alt`+`shift` enabling you to use remote copy/paste and different languages.\n\nIt is recommended to switch to `Advanced View` in the top menu, because the `Computing Preferences` don't seem to be displayed in `Simple View`.\n\nSometimes, the pop-up windows may open in a tiny box in the upper left corner of the screen. When that happens, you can find the corner and resize them.\n\n## GPU Hardware Acceleration\n\n### Intel\n\nHardware acceleration users for Intel Quicksync will need to mount their /dev/dri video device inside of the container by passing the following command when running or creating the container:\n```--device=/dev/dri:/dev/dri```\nWe will automatically ensure the abc user inside of the container has the proper permissions to access this device.\n\n### Nvidia\n\nHardware acceleration users for Nvidia will need to install the container runtime provided by Nvidia on their host, instructions can be found here:\nhttps://github.com/NVIDIA/nvidia-docker\nWe automatically add the necessary environment variable that will utilise all the features available on a GPU on the host. Once nvidia-docker is installed on your host you will need to re/create the docker container with the nvidia container runtime `--runtime=nvidia` and add an environment variable `-e NVIDIA_VISIBLE_DEVICES=all` (can also be set to a specific gpu's UUID, this can be discovered by running `nvidia-smi --query-gpu=gpu_name,gpu_uuid --format=csv` ). NVIDIA automatically mounts the GPU and drivers from your host into the BOINC docker container.\n",
            "changelogs": [
                {
                    "date": "14.11.22:",
                    "desc": "Fix opencl driver."
                },
                {
                    "date": "18.09.22:",
                    "desc": "Rebase to jammy."
                },
                {
                    "date": "24.02.22:",
                    "desc": "Rebase to focal."
                },
                {
                    "date": "31.01.22:",
                    "desc": "Improve device permissions setting verbosity."
                },
                {
                    "date": "23.03.21:",
                    "desc": "Rebase to rdesktop-web baseimage. Deprecate `GUAC_USER` and `GUAC_PASS` env vars. Existing users can set the new var `PASSWORD` for the user `abc`."
                },
                {
                    "date": "01.04.20:",
                    "desc": "Install boinc from ppa."
                },
                {
                    "date": "17.03.20:",
                    "desc": "Add armhf and aarch64 builds and switch to multi-arch image."
                },
                {
                    "date": "16.03.20:",
                    "desc": "Clean up old pid files."
                },
                {
                    "date": "15.03.20:",
                    "desc": "Initial release."
                }
            ]
        }
    },
    "setup": "This image sets up the BOINC client and manager and makes its interface available via Guacamole server in the browser. The interface is available at `http://your-ip:8080`.\n\nBy default, there is no password set for the main gui. Optional environment variable `PASSWORD` will allow setting a password for the user `abc`.\n\nYou can access advanced features of the Guacamole remote desktop using `ctrl`+`alt`+`shift` enabling you to use remote copy/paste and different languages.\n\nIt is recommended to switch to `Advanced View` in the top menu, because the `Computing Preferences` don't seem to be displayed in `Simple View`.\n\nSometimes, the pop-up windows may open in a tiny box in the upper left corner of the screen. When that happens, you can find the corner and resize them.\n\n## GPU Hardware Acceleration\n\n### Intel\n\nHardware acceleration users for Intel Quicksync will need to mount their /dev/dri video device inside of the container by passing the following command when running or creating the container:\n```--device=/dev/dri:/dev/dri```\nWe will automatically ensure the abc user inside of the container has the proper permissions to access this device.\n\n### Nvidia\n\nHardware acceleration users for Nvidia will need to install the container runtime provided by Nvidia on their host, instructions can be found here:\nhttps://github.com/NVIDIA/nvidia-docker\nWe automatically add the necessary environment variable that will utilise all the features available on a GPU on the host. Once nvidia-docker is installed on your host you will need to re/create the docker container with the nvidia container runtime `--runtime=nvidia` and add an environment variable `-e NVIDIA_VISIBLE_DEVICES=all` (can also be set to a specific gpu's UUID, this can be discovered by running `nvidia-smi --query-gpu=gpu_name,gpu_uuid --format=csv` ). NVIDIA automatically mounts the GPU and drivers from your host into the BOINC docker container.\n"
}