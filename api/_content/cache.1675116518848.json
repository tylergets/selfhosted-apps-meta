{"generatedAt":1675116538183,"generateTime":90,"contents":[{"_path":"/all","_dir":"","_draft":false,"_partial":false,"_locale":"en","total":141,"apps":[{"id":"adguardhome-sync","name":"adguardhome-sync","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a tool to synchronize AdGuardHome config to replica instances.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/adguardhomesync-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/adguardhome-sync"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-adguardhome-sync"}],"containers":[{"name":"adguardhome-sync","image":"linuxserver/adguardhome-sync","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"8080","description":"Port for AdGuardHome Sync's web API."}]}]},{"id":"airsonic-advanced","name":"airsonic-advanced","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a free, web-based media streamer, providing ubiquitious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/airsonic-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/airsonic-advanced"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-airsonic-advanced"}],"containers":[{"name":"airsonic-advanced","image":"linuxserver/airsonic-advanced","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configuration file location.","key":"config"},{"container":"/music","description":"Location of music."},{"container":"/playlists","description":"Location for playlists to be saved to."},{"container":"/podcasts","description":"Location of podcasts."}],"ports":[{"container":"4040","description":"WebUI"}]}]},{"id":"apprise-api","name":"apprise-api","description":"[{{ project_name|capitalize }}]({{ project_url }}) Takes advantage of [Apprise](https://github.com/caronc/apprise) through your network with a user-friendly API.\n\n* Send notifications to more then 65+ services.\n* An incredibly lightweight gateway to Apprise.\n* A production ready micro-service at your disposal.\n\nApprise API was designed to easily fit into existing (and new) eco-systems that are looking for a simple notification solution.\n","icon":"https://raw.githubusercontent.com/caronc/apprise-api/master/apprise_api/static/logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/apprise-api"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-apprise-api"}],"containers":[{"name":"apprise-api","image":"linuxserver/apprise-api","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where config is stored.","key":"config"}],"ports":[{"container":"8000","description":"Port for apprise's interface and API."}]}]},{"id":"audacity","name":"audacity","description":"[Audacity]({{ project_url }}) is an easy-to-use, multi-track audio editor and recorder. Developed by a group of volunteers as open source.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/audacity-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/audacity"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-audacity"}],"containers":[{"name":"audacity","image":"linuxserver/audacity","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores program settings and images","key":"config"}],"ports":[{"container":"3000","description":"Audacity desktop gui."}]}]},{"id":"babybuddy","name":"babybuddy","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a buddy for babies! Helps caregivers track sleep, feedings, diaper changes, tummy time and more to learn about and predict baby's needs without (as much) guess work.","icon":"https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/babybuddy-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/babybuddy"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-babybuddy"}],"containers":[{"name":"babybuddy","image":"linuxserver/babybuddy","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration and data.","key":"config"}],"ports":[{"container":"8000","description":"the port for the web ui"}]}]},{"id":"bazarr","name":"bazarr","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a companion application to Sonarr and Radarr. It can manage and download subtitles based on your requirements. You define your preferences by TV show or movie and Bazarr takes care of everything for you.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/bazarr.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/bazarr"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-bazarr"}],"containers":[{"name":"bazarr","image":"linuxserver/bazarr","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Bazarr data","key":"config"}],"ports":[{"container":"6767","description":"Allows HTTP access to the internal webserver."}]}]},{"id":"beets","name":"beets","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a music library manager and not, for the most part, a music player. It does include a simple player plugin and an experimental Web-based player, but it generally leaves actual sound-reproduction to specialized tools.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/beets-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/beets"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-beets"}],"containers":[{"name":"beets","image":"linuxserver/beets","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configuration files.","key":"config"},{"container":"/music","description":"Music library"},{"container":"/downloads","description":"Non processed music"}],"ports":[{"container":"8337","description":"Application WebUI"}]}]},{"id":"blender","name":"blender","description":"[Blender]({{ project_url }}) is a free and open-source 3D computer graphics software toolset used for creating animated films, visual effects, art, 3D printed models, motion graphics, interactive 3D applications, virtual reality, and computer games. **This image does not support GPU rendering out of the box only accelerated workspace experience**","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/blender-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/blender"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-blender"}],"containers":[{"name":"blender","image":"linuxserver/blender","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores local files and settings","key":"config"}],"ports":[{"container":"3000","description":"Blender desktop gui"}]}]},{"id":"boinc","name":"boinc","description":"[BOINC]({{ project_url }}) is a platform for high-throughput computing on a large scale (thousands or millions of computers). It can be used for volunteer computing (using consumer devices) or grid computing (using organizational resources). It supports virtualized, parallel, and GPU-based applications.","icon":"https://raw.githubusercontent.com/BOINC/boinc/master/doc/logo/boinc_logo_black.jpg","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/boinc"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-boinc"}],"containers":[{"name":"boinc","image":"linuxserver/boinc","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where BOINC should store its database and config.","key":"config"}],"ports":[{"container":"8080","description":"Boinc desktop gui."}]}]},{"id":"booksonic-air","name":"booksonic-air","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a platform for accessing the audiobooks you own wherever you are. At the moment the platform consists of:\n* Booksonic Air - A server for streaming your audiobooks, successor to the original Booksonic server and based on Airsonic.\n* Booksonic App - An DSub based Android app for connection to Booksonic-Air servers.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/booksonic-air.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/booksonic-air"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-booksonic-air"}],"containers":[{"name":"booksonic-air","image":"linuxserver/booksonic-air","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configuration files.","key":"config"},{"container":"/audiobooks","description":"Audiobooks."},{"container":"/podcasts","description":"Podcasts."},{"container":"/othermedia","description":"Other media."}],"ports":[{"container":"4040","description":"Application WebUI"}]}]},{"id":"bookstack","name":"bookstack","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a free and open source Wiki designed for creating beautiful documentation. Featuring a simple, but powerful WYSIWYG editor it allows for teams to create detailed and useful documentation with ease.\n\nPowered by SQL and including a Markdown editor for those who prefer it, BookStack is geared towards making documentation more of a pleasure than a chore.\n\nFor more information on BookStack visit their website and check it out: https://www.bookstackapp.com\n","icon":"https://s3-us-west-2.amazonaws.com/linuxserver-docs/images/bookstack-logo500x500.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/bookstack"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-bookstack"}],"containers":[{"name":"bookstack","image":"linuxserver/bookstack","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"this will store any uploaded data on the docker host","key":"config"}],"ports":[{"container":"80","description":"will map the container's port 80 to port 6875 on the host"}]}]},{"id":"budge","name":"budge","description":"[{{ project_name }}]({{ project_url }}) is an open source 'budgeting with envelopes' personal finance app.","icon":"","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/budge"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-budge"}],"containers":[{"name":"budge","image":"linuxserver/budge","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Persistent config files","key":"config"}],"ports":[{"container":"80","description":"http gui"},{"container":"443","description":"https gui"}]}]},{"id":"calibre","name":"calibre","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a powerful and easy to use e-book manager. Users say it’s outstanding and a must-have. It’ll allow you to do nearly everything and it takes things a step beyond normal e-book software. It’s also completely free and open source and great for both casual users and computer experts.","icon":"https://github.com/kovidgoyal/calibre/raw/master/resources/images/lt.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/calibre"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-calibre"}],"containers":[{"name":"calibre","image":"linuxserver/calibre","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where calibre should store its database and library.","key":"config"}],"ports":[{"container":"8080","description":"Calibre desktop gui."},{"container":"8081","description":"Calibre webserver gui."}]}]},{"id":"calibre-web","name":"calibre-web","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database.   It is also possible to integrate google drive and edit metadata and your calibre library through the app itself.\n\nThis software is a fork of library and licensed under the GPL v3 License.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/calibre-web-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/calibre-web"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-calibre-web"}],"containers":[{"name":"calibre-web","image":"linuxserver/calibre-web","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where calibre-web stores the internal database and config.","key":"config"},{"container":"/books","description":"Where your preexisting calibre database is located."}],"ports":[{"container":"8083","description":"WebUI"}]}]},{"id":"changedetection.io","name":"changedetection.io","description":"[{{ project_name|capitalize }}]({{ project_url }}) provides free, open-source web page monitoring, notification and change detection.","icon":"https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/changedetection-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/changedetection.io"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-changedetection.io"}],"containers":[{"name":"changedetection.io","image":"linuxserver/changedetection.io","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"5000","description":"WebUI"}]}]},{"id":"code-server","name":"code-server","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/code-server"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-code-server"}],"containers":[{"name":"code-server","image":"linuxserver/code-server","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}]}]},{"id":"cops","name":"cops","description":"[{{ project_name|capitalize }}]({{ project_url }}) by Sébastien Lucas, stands for Calibre OPDS (and HTML) Php Server.\n\nCOPS links to your Calibre library database and allows downloading and emailing of books directly from a web browser and provides a OPDS feed to connect to your devices.\n\nChanges in your Calibre library are reflected immediately in your COPS pages.\n\nSee : [COPS's home]({{ project_url }}) for more details.\n\nDon't forget to check the [Wiki](https://github.com/seblucas/cops/wiki).\n\n## Why? (taken from the author's site)\n\nIn my opinion Calibre is a marvelous tool but is too big and has too much\ndependencies to be used for its content server.\n\nThat's the main reason why I coded this OPDS server. I needed a simple\ntool to be installed on a small server (Seagate Dockstar in my case).\n\nI initially thought of Calibre2OPDS but as it generate static file no\nsearch was possible.\n\nLater I added an simple HTML catalog that should be usable on my Kobo.\n\nSo COPS's main advantages are :\n * No need for many dependencies.\n * No need for a lot of CPU or RAM.\n * Not much code.\n * Search is available.\n * With Dropbox / owncloud it's very easy to have an up to date OPDS server.\n * It was fun to code.\n\nIf you want to use the OPDS feed don't forget to specify feed.php at the end of your URL.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/cops-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/cops"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-cops"}],"containers":[{"name":"cops","image":"linuxserver/cops","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"COPS Application Data.","key":"config"},{"container":"/books","description":"Calibre metadata.db location."}],"ports":[{"container":"80","description":"WebUI"}]}]},{"id":"daapd","name":"daapd","description":"[{{ project_name|capitalize }}]({{ project_url }}) (iTunes) media server with support for AirPlay devices, Apple Remote (and compatibles), Chromecast, MPD and internet radio.","icon":"https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/daapd-git.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/daapd"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-daapd"}],"containers":[{"name":"daapd","image":"linuxserver/daapd","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where daapd server stores its config and dbase files.","key":"config"},{"container":"/music","description":"Map to your music folder."}]}]},{"id":"darktable","name":"darktable","description":"[darktable]({{ project_url }}) is an open source photography workflow application and raw developer. A virtual lighttable and darkroom for photographers. It manages your digital negatives in a database, lets you view them through a zoomable lighttable and enables you to develop raw images and enhance them.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/darktable-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/darktable"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-darktable"}],"containers":[{"name":"darktable","image":"linuxserver/darktable","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores program settings and images","key":"config"}],"ports":[{"container":"3000","description":"Darktable desktop gui."}]}]},{"id":"davos","name":"davos","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an FTP automation tool that periodically scans given host locations for new files. It can be configured for various purposes, including listening for specific files to appear in the host location, ready for it to download and then move, if required. It also supports completion notifications as well as downstream API calls, to further the workflow.\n","icon":"https://raw.githubusercontent.com/linuxserver/davos/master/docs/list.PNG","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/davos"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-davos"}],"containers":[{"name":"davos","image":"linuxserver/davos","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"davos's config location. This is where it stores its database file and logs.","key":"config"},{"container":"/download","description":"davos's file download location"}],"ports":[{"container":"8080","description":"This is the default port that davos runs under"}]}]},{"id":"ddclient","name":"ddclient","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a Perl client used to update dynamic DNS entries for accounts on Dynamic DNS Network Service Provider. It was originally written by Paul Burry and is now mostly by wimpunk. It has the capability to update more than just dyndns and it can fetch your WAN-ipaddress in a few different ways.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ddclient-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/ddclient"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-ddclient"}],"containers":[{"name":"ddclient","image":"linuxserver/ddclient","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where ddclient should store its config files.","key":"config"}]}]},{"id":"deluge","name":"deluge","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a lightweight, Free Software, cross-platform BitTorrent client.\n\n* Full Encryption\n* WebUI\n* Plugin System\n* Much more...\n","icon":"https://avatars2.githubusercontent.com/u/6733935?v=3&s=200","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/deluge"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-deluge"}],"containers":[{"name":"deluge","image":"linuxserver/deluge","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"deluge configs","key":"config"},{"container":"/downloads","description":"torrent download directory"}],"ports":[{"container":"8112","description":"Port for webui"},{"container":"6881","description":"Inbound torrent traffic (See App Setup)"},{"container":"6881/udp","description":"Inbound torrent traffic (See App Setup)"}]}]},{"id":"digikam","name":"digikam","description":"[digiKam]({{ project_url }}): Professional Photo Management with the Power of Open Source","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/digikam.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/digikam"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-digikam"}],"containers":[{"name":"digikam","image":"linuxserver/digikam","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores database.","key":"config"}]}]},{"id":"dillinger","name":"dillinger","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dillinger.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/dillinger"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-dillinger"}],"containers":[{"name":"dillinger","image":"linuxserver/dillinger","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Dillinger plugin config files","key":"config"}],"ports":[{"container":"8080","description":"The port for the Dillinger web interface"}]}]},{"id":"diskover","name":"diskover","description":"[{{ project_name }}]({{ project_url }}) is an open source file system indexer that uses Elasticsearch to index and manage data across heterogeneous storage systems.","icon":"https://raw.githubusercontent.com/diskoverdata/diskover-community/master/diskover-web/public/images/diskover.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/diskover"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-diskover"}],"containers":[{"name":"diskover","image":"linuxserver/diskover","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Persistent config files","key":"config"},{"container":"/data","description":"Default mount point to crawl"}],"ports":[{"container":"80","description":"diskover Web UI"}]}]},{"id":"docker-compose","name":"docker-compose","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/docker-compose"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-docker-compose"}],"containers":[{"name":"docker-compose","image":"linuxserver/docker-compose","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}]}]},{"id":"dokuwiki","name":"dokuwiki","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a simple to use and highly versatile Open Source wiki software that doesn't require a database. It is loved by users for its clean and readable syntax. The ease of maintenance, backup and integration makes it an administrator's favorite. Built in access controls and authentication connectors make DokuWiki especially useful in the enterprise context and the large number of plugins contributed by its vibrant community allow for a broad range of use cases beyond a traditional wiki.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dokuwiki-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/dokuwiki"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-dokuwiki"}],"containers":[{"name":"dokuwiki","image":"linuxserver/dokuwiki","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configuration files.","key":"config"}],"ports":[{"container":"80","description":"Application HTTP Port"}]}]},{"id":"domoticz","name":"domoticz","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. Notifications/Alerts can be sent to any mobile device.","icon":"https://github.com/domoticz/domoticz/raw/master/www/images/logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/domoticz"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-domoticz"}],"containers":[{"name":"domoticz","image":"linuxserver/domoticz","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where Domoticz stores config files and data.","key":"config"}],"ports":[{"container":"8080","description":"WebUI"},{"container":"6144","description":"Domoticz communication port."},{"container":"1443","description":"Domoticz communication port."}]}]},{"id":"doplarr","name":"doplarr","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an *arr request bot for Discord.\"\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/doplarr-logo_title.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/doplarr"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-doplarr"}],"containers":[{"name":"doplarr","image":"linuxserver/doplarr","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}]}]},{"id":"doublecommander","name":"doublecommander","description":"[Double Commander]({{ project_url }}) is a free cross platform open source file manager with two panels side by side. It is inspired by Total Commander and features some new ideas.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/doublecommander-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/doublecommander"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-doublecommander"}],"containers":[{"name":"doublecommander","image":"linuxserver/doublecommander","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores program settings.","key":"config"},{"container":"/data","description":"Host data directories, mount as many as needed."}],"ports":[{"container":"3000","description":"Double Commander desktop gui."}]}]},{"id":"duckdns","name":"duckdns","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a free service which will point a DNS (sub domains of duckdns.org) to an IP of your choice. The service is completely free, and doesn't require reactivation or forum posts to maintain its existence.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/duckdns.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/duckdns"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-duckdns"}],"containers":[{"name":"duckdns","image":"linuxserver/duckdns","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}]}]},{"id":"duplicati","name":"duplicati","description":"[{{ project_name|capitalize }}]({{ project_url }}) works with standard protocols like FTP, SSH, WebDAV as well as popular services like Microsoft OneDrive, Amazon Cloud Drive & S3, Google Drive, box.com, Mega, hubiC and many others.","icon":"https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/duplicati-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/duplicati"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-duplicati"}],"containers":[{"name":"duplicati","image":"linuxserver/duplicati","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"},{"container":"/backups","description":"Path to store local backups."},{"container":"/source","description":"Path to source for files to backup."}],"ports":[{"container":"8200","description":"http gui"}]}]},{"id":"emby","name":"emby","description":"[{{ project_name|capitalize }}]({{ project_url }}) organizes video, music, live TV, and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone emby Media Server.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/emby-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/emby"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-emby"}],"containers":[{"name":"emby","image":"linuxserver/emby","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Emby data storage location. *This can grow very large, 50gb+ is likely for a large collection.*","key":"config"},{"container":"/data/tvshows","description":"Media goes here. Add as many as needed e.g. `/data/movies`, `/data/tv`, etc."},{"container":"/data/movies","description":"Media goes here. Add as many as needed e.g. `/data/movies`, `/data/tv`, etc."}],"ports":[{"container":"8096","description":"Http webUI."}]}]},{"id":"embystat","name":"embystat","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a personal web server that can calculate all kinds of statistics from your (local) Emby server. Just install this on your server and let him calculate all kinds of fun stuff.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/embystat-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/embystat"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-embystat"}],"containers":[{"name":"embystat","image":"linuxserver/embystat","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"6555","description":"web gui"}]}]},{"id":"emulatorjs","name":"emulatorjs","description":"[{{ project_name|capitalize }}]({{ project_url }}) - In browser web based emulation portable to nearly any device for many retro consoles. A mix of emulators is used between Libretro and EmulatorJS.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/emulatorjs-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/emulatorjs"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-emulatorjs"}],"containers":[{"name":"emulatorjs","image":"linuxserver/emulatorjs","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Path to store user profiles","key":"config"},{"container":"/data","description":"Path to store roms/artwork"}],"ports":[{"container":"3000","description":"Rom/artwork management interface, used to generate/manage config files and download artwork"},{"container":"80","description":"Emulation frontend containing static web files used to browse and launch games"}]}]},{"id":"endlessh","name":"endlessh","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an SSH tarpit that very slowly sends an endless, random SSH banner. It keeps SSH clients locked up for hours or even days at a time. The purpose is to put your real SSH server on another port and then let the script kiddies get stuck in this tarpit instead of bothering a real server.","icon":"https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/openssh-server-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/endlessh"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-endlessh"}],"containers":[{"name":"endlessh","image":"linuxserver/endlessh","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"ports":[{"container":"2222","description":"ssh port"}]}]},{"id":"fail2ban","name":"fail2ban","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a daemon to ban hosts that cause multiple authentication errors.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/fail2ban-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/fail2ban"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-fail2ban"}],"containers":[{"name":"fail2ban","image":"linuxserver/fail2ban","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"},{"container":"/var/log:ro","description":"Host logs. Mounted as Read Only."}]}]},{"id":"feed2toot","name":"feed2toot","description":"[{{ project_name|capitalize }}]({{ project_url }}) automatically parses rss feeds, identifies new posts and posts them on the Mastodon social network.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/feed2toot-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/feed2toot"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-feed2toot"}],"containers":[{"name":"feed2toot","image":"linuxserver/feed2toot","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Local path for feed2toot config files.","key":"config"}]}]},{"id":"ffmpeg","name":"ffmpeg","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/ffmpeg"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-ffmpeg"}],"containers":[{"name":"ffmpeg","image":"linuxserver/ffmpeg","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}]}]},{"id":"filezilla","name":"filezilla","description":"[FIleZilla]({{ project_url }}) Client is a fast and reliable cross-platform FTP, FTPS and SFTP client with lots of useful features and an intuitive graphical user interface.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/filezilla-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/filezilla"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-filezilla"}],"containers":[{"name":"filezilla","image":"linuxserver/filezilla","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores local files and settings","key":"config"}],"ports":[{"container":"3000","description":"FileZilla desktop gui."}]}]},{"id":"firefox","name":"firefox","description":"[Firefox]({{ project_url }}) Browser, also known as Mozilla Firefox or simply Firefox, is a free and open-source web browser developed by the Mozilla Foundation and its subsidiary, the Mozilla Corporation. Firefox uses the Gecko layout engine to render web pages, which implements current and anticipated web standards.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/firefox-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/firefox"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-firefox"}],"containers":[{"name":"firefox","image":"linuxserver/firefox","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores local files and settings","key":"config"}],"ports":[{"container":"3000","description":"Firefox desktop gui."}]}]},{"id":"fleet","name":"fleet","description":"[{{ project_name|capitalize }}]({{ project_url }}) provides an online web interface which displays a set of maintained images from one or more owned repositories.","icon":"","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/fleet"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-fleet"}],"containers":[{"name":"fleet","image":"linuxserver/fleet","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"The primary config file and rolling log files.","key":"config"}],"ports":[{"container":"8080","description":"Http port"}]}]},{"id":"foldingathome","name":"foldingathome","description":"[Folding@home]({{ project_url }}) is a distributed computing project for simulating protein dynamics, including the process of protein folding and the movements of proteins implicated in a variety of diseases. It brings together citizen scientists who volunteer to run simulations of protein dynamics on their personal computers. Insights from this data are helping scientists to better understand biology, and providing new opportunities for developing therapeutics.","icon":"https://foldingathome.org/wp-content/uploads/2016/09/folding-at-home-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/foldingathome"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-foldingathome"}],"containers":[{"name":"foldingathome","image":"linuxserver/foldingathome","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where Folding@home should store its database and config.","key":"config"}],"ports":[{"container":"7396","description":"Folding@home web gui."}]}]},{"id":"freshrss","name":"freshrss","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a free, self-hostable aggregator for rss feeds.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/freshrss-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/freshrss"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-freshrss"}],"containers":[{"name":"freshrss","image":"linuxserver/freshrss","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Local storage for freshrss site files.","key":"config"}],"ports":[{"container":"80","description":"WebUI"}]}]},{"id":"grav","name":"grav","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a Fast, Simple, and Flexible, file-based Web-platform.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/grav-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/grav"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-grav"}],"containers":[{"name":"grav","image":"linuxserver/grav","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"80","description":"Port for web frontend"}]}]},{"id":"grocy","name":"grocy","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an ERP system for your kitchen! Cut down on food waste, and manage your chores with this brilliant utility.\n\nKeep track of your purchases, how much food you are wasting, what chores need doing and what batteries need charging with this proudly Open Source tool\n\nFor more information on grocy visit their website and check it out: https://grocy.info\n","icon":"https://grocy.info/img/grocy_logo.svg","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/grocy"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-grocy"}],"containers":[{"name":"grocy","image":"linuxserver/grocy","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"this will store any uploaded data on the docker host","key":"config"}],"ports":[{"container":"80","description":"will map the container's port 80 to port 9283 on the host"}]}]},{"id":"guacd","name":"guacd","description":"[{{ project_name|capitalize }}]({{ project_url }}) - Apache Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC, RDP, and SSH. This container is only the backend server component needed to use The official or 3rd party HTML5 frontends.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/guacd.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/guacd"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-guacd"}],"containers":[{"name":"guacd","image":"linuxserver/guacd","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"ports":[{"container":"4822","description":"Port Guacamole server listens on"}]}]},{"id":"habridge","name":"habridge","description":"[{{ project_name|capitalize }}]({{ project_url }}) emulates Philips Hue API to other home automation gateways such as an Amazon Echo/Dot Gen 1 (gen 2 has issues discovering ha-bridge) or other systems that support Philips Hue. The Bridge handles basic commands such as \"On\", \"Off\" and \"brightness\" commands of the hue protocol. This bridge can control most devices that have a distinct API.\n\nIn the cases of systems that require authorization and/or have APIs that cannot be handled in the current method, a module may need to be built. The Harmony Hub is such a module and so is the Nest module. The Bridge has helpers to build devices for the gateway for the Logitech Harmony Hub, Vera, Vera Lite or Vera Edge, Nest, Somfy Tahoma, Home Assistant, Domoticz, MQTT, HAL, Fibaro, HomeWizard, LIFX, OpenHAB, FHEM, Broadlink and the ability to proxy all of your real Hue bridges behind this bridge.\n\nThis bridge was built to help put the Internet of Things together.\n\nFor more information about how to use this software have a look at their Wiki [https://github.com/bwssytems/ha-bridge/wiki](https://github.com/bwssytems/ha-bridge/wiki)\n","icon":"https://raw.githubusercontent.com/bwssytems/ha-bridge/master/src/main/resources/public/img/favicon.ico","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/habridge"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-habridge"}],"containers":[{"name":"habridge","image":"linuxserver/habridge","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where HABridge stores config files and data.","key":"config"}],"ports":[{"container":"8080","description":"WebUI"},{"container":"50000","description":"HABridge communication port."}]}]},{"id":"headphones","name":"headphones","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an automated music downloader for NZB and Torrent, written in Python. It supports SABnzbd, NZBget, Transmission, µTorrent and Blackhole.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/headphones-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/headphones"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-headphones"}],"containers":[{"name":"headphones","image":"linuxserver/headphones","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configuration files.","key":"config"},{"container":"/downloads","description":"ISOs."},{"container":"/music","description":"Your music directory."}],"ports":[{"container":"8181","description":"Application WebUI"}]}]},{"id":"healthchecks","name":"healthchecks","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a watchdog for your cron jobs. It's a web server that listens for pings from your cron jobs, plus a web interface.\n","icon":"https://raw.githubusercontent.com/healthchecks/healthchecks/master/static/img/welcome.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/healthchecks"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-healthchecks"}],"containers":[{"name":"healthchecks","image":"linuxserver/healthchecks","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Database and healthchecks config directory","key":"config"}],"ports":[{"container":"8000","description":"Healthchecks Web UI"}]}]},{"id":"hedgedoc","name":"hedgedoc","description":"[HedgeDoc]({{ project_url }}) gives you access to all your files wherever you are.\n\nHedgeDoc is a real-time, multi-platform collaborative markdown note editor.  This means that you can write notes with other people on your desktop, tablet or even on the phone.  You can sign-in via multiple auth providers like Facebook, Twitter, GitHub and many more on the homepage.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hedgedoc-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/hedgedoc"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-hedgedoc"}],"containers":[{"name":"hedgedoc","image":"linuxserver/hedgedoc","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"HedgeDoc config and configurable files","key":"config"}],"ports":[{"container":"3000","description":"Web gui port (internal port also needs to be changed if accessing at port other than 80, 443 and 3000)."}]}]},{"id":"heimdall","name":"heimdall","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a way to organise all those links to your most used web sites and web applications in a simple way.\n\nSimplicity is the key to Heimdall.\n\nWhy not use it as your browser start page? It even has the ability to include a search bar using either Google, Bing or DuckDuckGo.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/heimdall-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/heimdall"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-heimdall"}],"containers":[{"name":"heimdall","image":"linuxserver/heimdall","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"80","description":"http gui"},{"container":"443","description":"https gui"}]}]},{"id":"homeassistant","name":"homeassistant","description":"[Home Assistant Core]({{ project_url }}) - Open source home automation that puts local control and privacy first. Powered by a worldwide community of tinkerers and DIY enthusiasts. Perfect to run on a Raspberry Pi or a local server. \n","icon":"https://github.com/home-assistant/home-assistant.io/raw/next/source/images/favicon-192x192-full.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/homeassistant"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-homeassistant"}],"containers":[{"name":"homeassistant","image":"linuxserver/homeassistant","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Home Assistant config storage path.","key":"config"}]}]},{"id":"htpcmanager","name":"htpcmanager","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a front end for many htpc related applications.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/htpcmanager-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/htpcmanager"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-htpcmanager"}],"containers":[{"name":"htpcmanager","image":"linuxserver/htpcmanager","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configuration files.","key":"config"}],"ports":[{"container":"8085","description":"Application WebUI"}]}]},{"id":"ipfs","name":"ipfs","description":"[{{ project_name|capitalize }}]({{ project_url }}) - A peer-to-peer hypermedia protocol designed to make the web faster, safer, and more open.\n","icon":"https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Ipfs-logo-1024-ice-text.png/480px-Ipfs-logo-1024-ice-text.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/ipfs"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-ipfs"}],"containers":[{"name":"ipfs","image":"linuxserver/ipfs","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"IPFS storage and config files/logs","key":"config"}],"ports":[{"container":"80","description":"The port for the IPFS web UI"},{"container":"4001","description":"Peering port, this is the only port you should expose to the internet"},{"container":"5001","description":"API port, the clientside webUI needs to be able to talk to this from whatever machine your web browser is on"},{"container":"8080","description":"Gateway Port, actually serves IPFS content"}]}]},{"id":"jackett","name":"jackett","description":"[{{ project_name|capitalize }}]({{ project_url }}) works as a proxy server: it translates queries from apps (Sonarr, SickRage, CouchPotato, Mylar, etc) into tracker-site-specific http queries, parses the html response, then sends results back to the requesting software. This allows for getting recent uploads (like RSS) and performing searches. Jackett is a single repository of maintained indexer scraping & translation logic - removing the burden from other apps.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/jackett-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/jackett"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-jackett"}],"containers":[{"name":"jackett","image":"linuxserver/jackett","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where Jackett should store its config file.","key":"config"},{"container":"/downloads","description":"Path to torrent blackhole."}],"ports":[{"container":"9117","description":"WebUI"}]}]},{"id":"jellyfin","name":"jellyfin","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps. Jellyfin is descended from Emby's 3.5.2 release and ported to the .NET Core framework to enable full cross-platform support. There are no strings attached, no premium licenses or features, and no hidden agendas: just a team who want to build something better and work together to achieve it.","icon":"https://raw.githubusercontent.com/jellyfin/jellyfin-ux/master/branding/SVG/banner-logo-solid.svg?sanitize=true","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/jellyfin"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-jellyfin"}],"containers":[{"name":"jellyfin","image":"linuxserver/jellyfin","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Jellyfin data storage location. *This can grow very large, 50gb+ is likely for a large collection.*","key":"config"},{"container":"/data/tvshows","description":"Media goes here. Add as many as needed e.g. `/data/movies`, `/data/tv`, etc."},{"container":"/data/movies","description":"Media goes here. Add as many as needed e.g. `/data/movies`, `/data/tv`, etc."}],"ports":[{"container":"8096","description":"Http webUI."}]}]},{"id":"jenkins-builder","name":"jenkins-builder","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/jenkins-builder"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-jenkins-builder"}],"containers":[{"name":"jenkins-builder","image":"linuxserver/jenkins-builder","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}]}]},{"id":"kasm","name":"kasm","description":"[{{ project_name|capitalize }}]({{ project_url }}) Workspaces is a docker container streaming platform for delivering browser-based access to desktops, applications, and web services. Kasm uses devops-enabled Containerized Desktop Infrastructure (CDI) to create on-demand, disposable, docker containers that are accessible via web browser. Example use-cases include Remote Browser Isolation (RBI), Data Loss Prevention (DLP), Desktop as a Service (DaaS), Secure Remote Access Services (RAS), and Open Source Intelligence (OSINT) collections.\n\nThe rendering of the graphical-based containers is powered by the open-source project [KasmVNC](https://www.kasmweb.com/kasmvnc.html?utm_campaign=LinuxServer&utm_source=kasmvnc).\n","icon":"https://kasm-ci.s3.amazonaws.com/kasm_wide.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/kasm"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-kasm"}],"containers":[{"name":"kasm","image":"linuxserver/kasm","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/opt","description":"Docker and installation storage."}],"ports":[{"container":"3000","description":"Kasm Installation wizard. (https)"},{"container":"443","description":"Kasm Workspaces interface. (https)"}]}]},{"id":"kdenlive","name":"kdenlive","description":"[Kdenlive]({{ project_url }}) is a powerful free and open source cross-platform video editing program made by the KDE community. Feature rich and production ready.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kdenlive-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/kdenlive"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-kdenlive"}],"containers":[{"name":"kdenlive","image":"linuxserver/kdenlive","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores local files and settings","key":"config"}],"ports":[{"container":"3000","description":"Kdenlive desktop gui"}]}]},{"id":"lazylibrarian","name":"lazylibrarian","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a program to follow authors and grab metadata for all your digital reading needs. It uses a combination of Goodreads Librarything and optionally GoogleBooks as sources for author info and book info.  This container is based on the DobyTang fork.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lazylibrarian-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/lazylibrarian"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-lazylibrarian"}],"containers":[{"name":"lazylibrarian","image":"linuxserver/lazylibrarian","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"LazyLibrarian config","key":"config"},{"container":"/downloads","description":"Download location"}],"ports":[{"container":"5299","description":"The port for the LazyLibrarian webinterface"}]}]},{"id":"ldap-auth","name":"ldap-auth","description":"[{{ project_name|capitalize }}]({{ project_url }}) software is for authenticating users who request protected resources from servers proxied by nginx. It includes a daemon (ldap-auth) that communicates with an authentication server, and a webserver daemon that generates an authentication cookie based on the user’s credentials. The daemons are written in Python for use with a Lightweight Directory Access Protocol (LDAP) authentication server (OpenLDAP or Microsoft Windows Active Directory 2003 and 2012).","icon":"https://jumpcloud.com/wp-content/uploads/2016/12/LDAP_Logo-1420591101.jpg","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/ldap-auth"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-ldap-auth"}],"containers":[{"name":"ldap-auth","image":"linuxserver/ldap-auth","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"ports":[{"container":"8888","description":"the port for ldap auth daemon"},{"container":"9000","description":"the port for ldap login page"}]}]},{"id":"libreoffice","name":"libreoffice","description":"[LibreOffice]({{ project_url }}) is a free and powerful office suite, and a successor to OpenOffice.org (commonly known as OpenOffice). Its clean interface and feature-rich tools help you unleash your creativity and enhance your productivity.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/libreoffice-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/libreoffice"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-libreoffice"}],"containers":[{"name":"libreoffice","image":"linuxserver/libreoffice","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores program settings and documents","key":"config"}],"ports":[{"container":"3000","description":"LibreOffice desktop gui."}]}]},{"id":"librespeed","name":"librespeed","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a very lightweight Speedtest implemented in Javascript, using XMLHttpRequest and Web Workers.\n\nNo Flash, No Java, No Websocket, No Bullshit.\n","icon":"https://raw.githubusercontent.com/librespeed/speedtest/master/.logo/logo3.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/librespeed"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-librespeed"}],"containers":[{"name":"librespeed","image":"linuxserver/librespeed","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"80","description":"web gui"}]}]},{"id":"lidarr","name":"lidarr","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a music collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new tracks from your favorite artists and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.","icon":"https://github.com/lidarr/Lidarr/raw/develop/Logo/400.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/lidarr"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-lidarr"}],"containers":[{"name":"lidarr","image":"linuxserver/lidarr","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configuration files for Lidarr.","key":"config"}],"ports":[{"container":"8686","description":"Application WebUI"}]}]},{"id":"limnoria","name":"limnoria","description":"[{{ project_name|capitalize }}]({{ project_url }}) A robust, full-featured, and user/programmer-friendly Python IRC bot, with many existing plugins. Successor of the well-known Supybot.","icon":"https://raw.githubusercontent.com/linuxserver/docker-limnoria/master/logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/limnoria"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-limnoria"}],"containers":[{"name":"limnoria","image":"linuxserver/limnoria","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where Limnoria config is stored.","key":"config"}],"ports":[{"container":"8080","description":"Port for Limnoria's web interface."}]}]},{"id":"lychee","name":"lychee","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a free photo-management tool, which runs on your server or web-space. Installing is a matter of seconds. Upload, manage and share photos like from a native application. Lychee comes with everything you need and all your photos are stored securely.\"\n\n### UPGRADE WARNING\n\nPlease note that the v4 upgrade process resets ALL password-protected albums. Any albums that were made public with a password will need to be re-secured.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lychee-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/lychee"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-lychee"}],"containers":[{"name":"lychee","image":"linuxserver/lychee","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"},{"container":"/pictures","description":"Where lychee will store uploaded data."}],"ports":[{"container":"80","description":"http gui"}]}]},{"id":"mariadb","name":"mariadb","description":"[{{ project_name|capitalize }}]({{ project_url }}) is one of the most popular database servers. Made by the original developers of MySQL.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mariadb-git.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/mariadb"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-mariadb"}],"containers":[{"name":"mariadb","image":"linuxserver/mariadb","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains the db itself and all assorted settings.","key":"config"}],"ports":[{"container":"3306","description":"Mariadb listens on this port."}]}]},{"id":"mastodon","name":"mastodon","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a free, open-source social network server based on ActivityPub where users can follow friends and discover new ones..\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mastodon-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/mastodon"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-mastodon"}],"containers":[{"name":"mastodon","image":"linuxserver/mastodon","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"80","description":"Port for web frontend"},{"container":"443","description":"Port for web frontend"}]}]},{"id":"medusa","name":"medusa","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/medusa-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/medusa"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-medusa"}],"containers":[{"name":"medusa","image":"linuxserver/medusa","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Medusa config","key":"config"},{"container":"/downloads","description":"Download location"},{"container":"/tv","description":"TV Shows location"}],"ports":[{"container":"8081","description":"The port for the Medusa webui"}]}]},{"id":"minetest","name":"minetest","description":"[{{ project_name|capitalize }}]({{ project_url }}) (server) is a near-infinite-world block sandbox game and a game engine, inspired by InfiniMiner, Minecraft, and the like.","icon":"https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/minetest-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/minetest"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-minetest"}],"containers":[{"name":"minetest","image":"linuxserver/minetest","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config/.minetest","description":"Where minetest stores config files and maps etc."}],"ports":[{"container":"30000/udp","description":"Port Minetest listens on."}]}]},{"id":"minisatip","name":"minisatip","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a multi-threaded satip server version 1.2 that runs under Linux and it was tested with DVB-S, DVB-S2, DVB-T, DVB-T2, DVB-C, DVB-C2, ATSC and ISDB-T cards.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/minisatip-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/minisatip"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-minisatip"}],"containers":[{"name":"minisatip","image":"linuxserver/minisatip","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configuration files and minisatip data","key":"config"}],"ports":[{"container":"8875","description":"Status Page WebUI"},{"container":"554","description":"RTSP Port"},{"container":"1900/udp","description":"App Discovery"}]}]},{"id":"mods","name":"mods","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/mods"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-mods"}],"containers":[{"name":"mods","image":"linuxserver/mods","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}]}]},{"id":"mstream","name":"mstream","description":"[{{ project_name }}]({{ project_url }}) is a personal music streaming server. You can use mStream to stream your music from your home computer to any device, anywhere.  There are mobile apps available for both Android and iPhone.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mstream-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/mstream"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-mstream"}],"containers":[{"name":"mstream","image":"linuxserver/mstream","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"mStream config","key":"config"},{"container":"/music","description":"Music location"}],"ports":[{"container":"3000","description":"The port for the mStream webinterface"}]}]},{"id":"mylar3","name":"mylar3","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an automated Comic Book downloader (cbr/cbz) for use with NZB and torrents written in python. It supports SABnzbd, NZBGET, and many torrent clients in addition to DDL.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mylar-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/mylar3"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-mylar3"}],"containers":[{"name":"mylar3","image":"linuxserver/mylar3","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where mylar should store config files.","key":"config"},{"container":"/comics","description":"Map to your comics folder."},{"container":"/downloads","description":"Map to your downloads folder."}],"ports":[{"container":"8090","description":"WebUI"}]}]},{"id":"mysql-workbench","name":"mysql-workbench","description":"[MySQL Workbench]({{ project_url }}) is a unified visual tool for database architects, developers, and DBAs. MySQL Workbench provides data modeling, SQL development, and comprehensive administration tools for server configuration, user administration, backup, and much more.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mysql-workbench-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/mysql-workbench"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-mysql-workbench"}],"containers":[{"name":"mysql-workbench","image":"linuxserver/mysql-workbench","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores program settings.","key":"config"}],"ports":[{"container":"3000","description":"Mysql Workbench desktop gui."}]}]},{"id":"nano","name":"nano","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a digital payment protocol designed to be accessible and lightweight, with a focus on removing inefficiencies present in other cryptocurrencies. With ultrafast transactions and zero fees on a secure, green and decentralized network, this makes Nano ideal for everyday transactions.\n","icon":"https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Nano_logo.png/640px-Nano_logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/nano"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-nano"}],"containers":[{"name":"nano","image":"linuxserver/nano","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Main storage for config and blockchain","key":"config"}],"ports":[{"container":"8075","description":"Nano communication port"},{"container":"3000","description":"RPC interface filtered through a proxy"},{"container":"3001","description":"Https RPC interface filtered through a proxy"}]}]},{"id":"nano-wallet","name":"nano-wallet","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a digital payment protocol designed to be accessible and lightweight, with a focus on removing inefficiencies present in other cryptocurrencies. With ultrafast transactions and zero fees on a secure, green and decentralized network, this makes Nano ideal for everyday transactions.\n\nThis container is a simple nginx wrapper for the light wallet located [here](https://github.com/linuxserver/nano-wallet). You will need to pass a valid RPC host when accessing this container.\n","icon":"https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Nano_logo.png/640px-Nano_logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/nano-wallet"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-nano-wallet"}],"containers":[{"name":"nano-wallet","image":"linuxserver/nano-wallet","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"ports":[{"container":"80","description":"Webserver port"}]}]},{"id":"netbootxyz","name":"netbootxyz","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a way to PXE boot various operating system installers or utilities from one place within the BIOS without the need of having to go retrieve the media to run the tool. iPXE is used to provide a user friendly menu from within the BIOS that lets you easily choose the operating system you want along with any specific types of versions or bootable flags.","icon":"https://netboot.xyz/images/netboot.xyz.gif","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/netbootxyz"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-netbootxyz"}],"containers":[{"name":"netbootxyz","image":"linuxserver/netbootxyz","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Storage for boot menu files and web application config","key":"config"}],"ports":[{"container":"3000","description":"Web configuration interface."},{"container":"69/udp","description":"TFTP Port."}]}]},{"id":"netbox","name":"netbox","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an IP address management (IPAM) and data center infrastructure management (DCIM) tool. Initially conceived by the network engineering team at DigitalOcean, NetBox was developed specifically to address the needs of network and infrastructure engineers. It is intended to function as a domain-specific source of truth for network operations.\n","icon":"https://raw.githubusercontent.com/netbox-community/netbox/develop/docs/netbox_logo.svg","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/netbox"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-netbox"}],"containers":[{"name":"netbox","image":"linuxserver/netbox","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"config directory volume mapping","key":"config"}],"ports":[{"container":"8000","description":"will map the container's port 8000 to port 8000 on the host"}]}]},{"id":"nextcloud","name":"nextcloud","description":"[{{ project_name|capitalize }}]({{ project_url }}) gives you access to all your files wherever you are.\n\nWhere are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices. Through Nextcloud you also access, sync and share your existing data on that FTP drive at the office, a Dropbox or a NAS you have at home.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nextcloud-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/nextcloud"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-nextcloud"}],"containers":[{"name":"nextcloud","image":"linuxserver/nextcloud","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Nextcloud configs.","key":"config"},{"container":"/data","description":"Your personal data."}],"ports":[{"container":"443","description":"WebUI"}]}]},{"id":"nginx","name":"nginx","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a simple webserver with php support. The config files reside in `/config` for easy user customization.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nginx-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/nginx"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-nginx"}],"containers":[{"name":"nginx","image":"linuxserver/nginx","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains your www content and all relevant configuration files.","key":"config"}],"ports":[{"container":"80","description":"http"},{"container":"443","description":"https"}]}]},{"id":"ngircd","name":"ngircd","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a free, portable and lightweight Internet Relay Chat server for small or private networks, developed under the GNU General Public License (GPL). It is easy to configure, can cope with dynamic IP addresses, and supports IPv6, SSL-protected connections as well as PAM for authentication. It is written from scratch and not based on the original IRCd.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ngircd-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/ngircd"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-ngircd"}],"containers":[{"name":"ngircd","image":"linuxserver/ngircd","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where `ngircd.conf` is stored","key":"config"}],"ports":[{"container":"6667","description":"ngircd port"}]}]},{"id":"nntp2nntp","name":"nntp2nntp","description":"[{{ project_name|capitalize }}]({{ project_url }}) proxy allow you to use your NNTP Account from multiple systems, each with own user name and password. It fully supports SSL and you can also limit the access to proxy with SSL certificates. nntp2nntp proxy is very simple and pretty fast.\n## Warning\n\nWhilst we know of no nntp2nntp security issues the [upstream code](https://github.com/linuxserver/nntp2nntp) for this project has received no changes since 06.08.15 and is likely abandoned permanently.  For this reason we strongly recommend you do not make this application public facing and if you must do so other layers of security and SSL should be considered an absolute bare minimum requirement.  We see this proxy being used primarily on a LAN so that all the users NNTP applications can share a common set of internal credentials allowing for central managment of the upstream account e.g change provider, server, thread limits for all applications with one global config change.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nntp2nntp.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/nntp2nntp"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-nntp2nntp"}],"containers":[{"name":"nntp2nntp","image":"linuxserver/nntp2nntp","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"this will store config on the docker host","key":"config"}],"ports":[{"container":"1563","description":"will map the container's port 1563 to port 1563 on the host"}]}]},{"id":"nzbget","name":"nzbget","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a usenet downloader, written in C++ and designed with performance in mind to achieve maximum download speed by using very little system resources.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nzbget-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/nzbget"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-nzbget"}],"containers":[{"name":"nzbget","image":"linuxserver/nzbget","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"NZBGet App data.","key":"config"}],"ports":[{"container":"6789","description":"WebUI"}]}]},{"id":"nzbhydra2","name":"nzbhydra2","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a meta search application for NZB indexers, the \"spiritual successor\" to NZBmegasearcH, and an evolution of the original application [NZBHydra](https://github.com/theotherp/nzbhydra).\n\nIt provides easy access to a number of raw and newznab based indexers. The application NZBHydra 2 is replacing NZBHydra 1 and supports migrating from V1. Be wary that there may be some compatibility issues for those migrating from V1 to V2, so ensure you back up your old configuration before moving over to the new version. **NOTE:** The last version that supports migration is `linuxserver/nzbhydra2:v2.10.2-ls49`\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hydra-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/nzbhydra2"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-nzbhydra2"}],"containers":[{"name":"nzbhydra2","image":"linuxserver/nzbhydra2","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where nzbhydra2 should store config files.","key":"config"},{"container":"/downloads","description":"NZB download folder."}],"ports":[{"container":"5076","description":"WebUI"}]}]},{"id":"ombi","name":"ombi","description":"[{{ project_name|capitalize }}]({{ project_url }}) allows you to host your own Plex Request and user management system.\nIf you are sharing your Plex server with other users, allow them to request new content using an easy to manage interface!\nManage all your requests for Movies and TV with ease, leave notes for the user and get notification when a user requests something.\nAllow your users to post issues against their requests so you know there is a problem with the audio etc.\nEven automatically send them weekly newsletters of new content that has been added to your Plex server!","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ombi.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/ombi"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-ombi"}],"containers":[{"name":"ombi","image":"linuxserver/ombi","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"3579","description":"web gui"}]}]},{"id":"openssh-server","name":"openssh-server","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a sandboxed environment that allows ssh access without giving keys to the entire server.\nGiving ssh access via private key often means giving full access to the server. This container creates a limited and sandboxed environment that others can ssh into.\nThe users only have access to the folders mapped and the processes running inside this container.","icon":"https://upload.wikimedia.org/wikipedia/en/6/65/OpenSSH_logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/openssh-server"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-openssh-server"}],"containers":[{"name":"openssh-server","image":"linuxserver/openssh-server","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"2222","description":"ssh port"}]}]},{"id":"openvscode-server","name":"openvscode-server","description":"[{{ project_name|capitalize }}]({{ project_url }}) provides a version of VS Code that runs a server on a remote machine and allows access through a modern web browser.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/openvscode-server-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/openvscode-server"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-openvscode-server"}],"containers":[{"name":"openvscode-server","image":"linuxserver/openvscode-server","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"3000","description":"Web UI port."}]}]},{"id":"oscam","name":"oscam","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an Open Source Conditional Access Module software used for descrambling DVB transmissions using smart cards. It's both a server and a client.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/oscam-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/oscam"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-oscam"}],"containers":[{"name":"oscam","image":"linuxserver/oscam","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where oscam should store config files and logs.","key":"config"}],"ports":[{"container":"8888","description":"WebUI"}]}]},{"id":"overseerr","name":"overseerr","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a request management and media discovery tool built to work with your existing Plex ecosystem.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/overseerr.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/overseerr"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-overseerr"}],"containers":[{"name":"overseerr","image":"linuxserver/overseerr","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"5055","description":"Port for Overseerr's web interface."}]}]},{"id":"papermerge","name":"papermerge","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an open source document management system (DMS) primarily designed for archiving and retrieving your digital documents. Instead of having piles of paper documents all over your desk, office or drawers - you can quickly scan them and configure your scanner to directly upload to Papermerge DMS.\"\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/papermerge-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/papermerge"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-papermerge"}],"containers":[{"name":"papermerge","image":"linuxserver/papermerge","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"},{"container":"/data","description":"Storage location for all papermerge data files."}],"ports":[{"container":"8000","description":"http gui"}]}]},{"id":"phpmyadmin","name":"phpmyadmin","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a free software tool written in PHP, intended to handle the administration of MySQL over the Web. phpMyAdmin supports a wide range of operations on MySQL and MariaDB.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/phpmyadmin-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/phpmyadmin"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-phpmyadmin"}],"containers":[{"name":"phpmyadmin","image":"linuxserver/phpmyadmin","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"80","description":"Port for web frontend"}]}]},{"id":"pidgin","name":"pidgin","description":"[Pidgin]({{ project_url }}) is a chat program which lets you log into accounts on multiple chat networks simultaneously. This means that you can be chatting with friends on XMPP and sitting in an IRC channel at the same time.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pidgin-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/pidgin"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-pidgin"}],"containers":[{"name":"pidgin","image":"linuxserver/pidgin","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores local files and settings","key":"config"}],"ports":[{"container":"3000","description":"Pidgin desktop gui."}]}]},{"id":"piwigo","name":"piwigo","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a photo gallery software for the web that comes with powerful features to publish and manage your collection of pictures.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/piwigo-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/piwigo"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-piwigo"}],"containers":[{"name":"piwigo","image":"linuxserver/piwigo","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configuration files.","key":"config"},{"container":"/gallery","description":"Image storage for Piwigo"}],"ports":[{"container":"80","description":"Application WebUI"}]}]},{"id":"plex","name":"plex","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/plex"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-plex"}],"containers":[{"name":"plex","image":"linuxserver/plex","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}]}]},{"id":"plex-meta-manager","name":"plex-meta-manager","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a Python 3 script that can be continuously run using YAML configuration files to update on a schedule the metadata of the movies, shows, and collections in your libraries as well as automatically build collections based on various methods all detailed in the wiki.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/plex-meta-manager-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/plex-meta-manager"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-plex-meta-manager"}],"containers":[{"name":"plex-meta-manager","image":"linuxserver/plex-meta-manager","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Local path for plex-meta-manager config files.","key":"config"}]}]},{"id":"projectsend","name":"projectsend","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a self-hosted application that lets you upload files and assign them to specific clients that you create yourself. Secure, private and easy. No more depending on external services or e-mail to send those files.","icon":"http://www.projectsend.org/wp-content/themes/projectsend/img/screenshots.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/projectsend"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-projectsend"}],"containers":[{"name":"projectsend","image":"linuxserver/projectsend","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where to store projectsend config files.","key":"config"},{"container":"/data","description":"Where to store files to share."}],"ports":[{"container":"80","description":"WebUI"}]}]},{"id":"prowlarr","name":"prowlarr","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a indexer manager/proxy built on the popular arr .net/reactjs base stack to integrate with your various PVR apps. Prowlarr supports both Torrent Trackers and Usenet Indexers. It integrates seamlessly with Sonarr, Radarr, Lidarr, and Readarr offering complete management of your indexers with no per app Indexer setup required (we do it all).\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/prowlarr-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/prowlarr"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-prowlarr"}],"containers":[{"name":"prowlarr","image":"linuxserver/prowlarr","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Database and Prowlarr configs","key":"config"}],"ports":[{"container":"9696","description":"The port for the Prowlarr webinterface"}]}]},{"id":"pwndrop","name":"pwndrop","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a self-deployable file hosting service for sending out red teaming payloads or securely sharing your private files over HTTP and WebDAV.","icon":"https://raw.githubusercontent.com/kgretzky/pwndrop/master/media/pwndrop-logo-512.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/pwndrop"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-pwndrop"}],"containers":[{"name":"pwndrop","image":"linuxserver/pwndrop","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration and data.","key":"config"}],"ports":[{"container":"8080","description":"web gui"}]}]},{"id":"pydio-cells","name":"pydio-cells","description":"[{{ project_name|capitalize }}]({{ project_url }}) is the nextgen file sharing platform for organizations. It is a full rewrite of the Pydio project using the Go language following a micro-service architecture.","icon":"https://raw.githubusercontent.com/wiki/pydio/cells/images/PydioCellsColor.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/pydio-cells"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-pydio-cells"}],"containers":[{"name":"pydio-cells","image":"linuxserver/pydio-cells","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"All the config files reside here.","key":"config"}],"ports":[{"container":"8080","description":"Http port"}]}]},{"id":"pyload-ng","name":"pyload-ng","description":"[pyLoad]({{ project_url }}) is a Free and Open Source download manager written in Python and designed to be extremely lightweight, easily extensible and fully manageable via web.","icon":"https://pyload.net/img/banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/pyload-ng"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-pyload-ng"}],"containers":[{"name":"pyload-ng","image":"linuxserver/pyload-ng","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"pyLoad Configuration and files database","key":"config"},{"container":"/downloads","description":"Destination of pyLoad downloads"}],"ports":[{"container":"8000","description":"Allows HTTP access to the application"}]}]},{"id":"pylon","name":"pylon","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a web based integrated development environment built with Node.js as a backend and with a supercharged JavaScript/HTML5 frontend, licensed under GPL version 3. This project originates from Cloud9 v2 project.\n","icon":"https://raw.githubusercontent.com/pylonide/pylon/master/doc/screenshot02.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/pylon"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-pylon"}],"containers":[{"name":"pylon","image":"linuxserver/pylon","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"ports":[{"container":"3131","description":"The port for the Pylon web interface"}]}]},{"id":"qbittorrent","name":"qbittorrent","description":"The [{{ project_name|capitalize }}]({{ project_url }}) project aims to provide an open-source software alternative to µTorrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.","icon":"https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/qbittorrent-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/qbittorrent"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-qbittorrent"}],"containers":[{"name":"qbittorrent","image":"linuxserver/qbittorrent","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"},{"container":"/downloads","description":"Location of downloads on disk."}],"ports":[{"container":"8080","description":"WebUI"},{"container":"6881","description":"tcp connection port"},{"container":"6881/udp","description":"udp connection port"}]}]},{"id":"qdirstat","name":"qdirstat","description":"[QDirStat]({{ project_url }}) Qt-based directory statistics: KDirStat without any KDE -- from the author of the original KDirStat.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/qdirstat-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/qdirstat"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-qdirstat"}],"containers":[{"name":"qdirstat","image":"linuxserver/qdirstat","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores qdirstat settings and scans.","key":"config"},{"container":"/data","description":"Data you want to analyze disk usage information of."}],"ports":[{"container":"3000","description":"QdirStat desktop gui."}]}]},{"id":"quassel-core","name":"quassel-core","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a modern, cross-platform, distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core.\n\nThis container handles the IRC connection (quasselcore) and requires a desktop client (quasselclient) to be used and configured. It is designed to be always on and will keep your identity present in IRC even when your clients cannot be online. Backlog (history) is downloaded by your client upon reconnection allowing infinite scrollback through time.\n","icon":"http://icons.iconarchive.com/icons/oxygen-icons.org/oxygen/256/Apps-quassel-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/quassel-core"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-quassel-core"}],"containers":[{"name":"quassel-core","image":"linuxserver/quassel-core","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Database and quassel-core configuration storage.","key":"config"}],"ports":[{"container":"4242","description":"The port quassel-core listens for connections on."}]}]},{"id":"quassel-web","name":"quassel-web","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a web client for Quassel.  Note that a Quassel-Core instance is required, we have a container available [here.](https://hub.docker.com/r/linuxserver/quassel-core/) \n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/quassel-web-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/quassel-web"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-quassel-web"}],"containers":[{"name":"quassel-web","image":"linuxserver/quassel-web","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"this will store config on the docker host","key":"config"}],"ports":[{"container":"64443","description":"Quassel-web https webui"}]}]},{"id":"radarr","name":"radarr","description":"[{{ project_name|capitalize }}]({{ project_url }}) - A fork of Sonarr to work with movies à la Couchpotato.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/radarr.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/radarr"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-radarr"}],"containers":[{"name":"radarr","image":"linuxserver/radarr","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Database and Radarr configs","key":"config"}],"ports":[{"container":"7878","description":"The port for the Radarr webinterface"}]}]},{"id":"raneto","name":"raneto","description":"[{{ project_name|capitalize }}]({{ project_url }}) - is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase.","icon":"https://raw.githubusercontent.com/gilbitron/Raneto/master/logo/logo_readme.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/raneto"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-raneto"}],"containers":[{"name":"raneto","image":"linuxserver/raneto","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Raneto config and Markdown files","key":"config"}],"ports":[{"container":"3000","description":"The port for the Raneto web interface"}]}]},{"id":"rdesktop","name":"rdesktop","description":"[{{ project_name|capitalize }}]({{ project_url }}) - Containers containing full desktop environments in many popular flavors for Alpine, Ubuntu, Arch, and Fedora accessible via RDP.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rdesktop.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/rdesktop"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-rdesktop"}],"containers":[{"name":"rdesktop","image":"linuxserver/rdesktop","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"ports":[{"container":"3389","description":"RDP access port"}]}]},{"id":"readarr","name":"readarr","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/readarr"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-readarr"}],"containers":[{"name":"readarr","image":"linuxserver/readarr","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}]}]},{"id":"remmina","name":"remmina","description":"[Remmina]({{ project_url }}) is a remote desktop client written in GTK, aiming to be useful for system administrators and travellers, who need to work with lots of remote computers in front of either large or tiny screens. Remmina supports multiple network protocols, in an integrated and consistent user interface. Currently RDP, VNC, SPICE, NX, XDMCP, SSH and EXEC are supported.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/remmina-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/remmina"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-remmina"}],"containers":[{"name":"remmina","image":"linuxserver/remmina","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores program settings.","key":"config"}],"ports":[{"container":"3000","description":"Remmina desktop gui."}]}]},{"id":"requestrr","name":"requestrr","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a chatbot used to simplify using services like Sonarr/Radarr/Ombi via the use of chat.","icon":"https://github.com/darkalfx/requestrr/raw/master/Logos/requestrr_discord_Icon_512.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/requestrr"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-requestrr"}],"containers":[{"name":"requestrr","image":"linuxserver/requestrr","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"4545","description":"web gui"}]}]},{"id":"resilio-sync","name":"resilio-sync","description":"[{{ project_name|capitalize }}]({{ project_url }}) (formerly BitTorrent Sync) uses the BitTorrent protocol to sync files and folders between all of your devices. There are both free and paid versions, this container supports both. There is an official sync image but we created this one as it supports user mapping to simplify permissions for volumes.","icon":"https://www.resilio.com/img/individual/freeproduct.jpg","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/resilio-sync"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-resilio-sync"}],"containers":[{"name":"resilio-sync","image":"linuxserver/resilio-sync","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where resilio-sync should store its config file.","key":"config"},{"container":"/downloads","description":"Folder for downloads/cache."},{"container":"/sync","description":"Sync folders root."}],"ports":[{"container":"8888","description":"WebUI"},{"container":"55555","description":"Sync Port."}]}]},{"id":"rsnapshot","name":"rsnapshot","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a filesystem snapshot utility based on rsync. rsnapshot makes it easy to make periodic snapshots of local machines, and remote machines over ssh. The code makes extensive use of hard links whenever possible, to greatly reduce the disk space required.\"\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rsnapshot.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/rsnapshot"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-rsnapshot"}],"containers":[{"name":"rsnapshot","image":"linuxserver/rsnapshot","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}]}]},{"id":"sabnzbd","name":"sabnzbd","description":"[{{ project_name|capitalize }}]({{ project_url }}) makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sabnzbd-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/sabnzbd"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-sabnzbd"}],"containers":[{"name":"sabnzbd","image":"linuxserver/sabnzbd","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Local path for sabnzbd config files.","key":"config"}],"ports":[{"container":"8080","description":"HTTP port for the WebUI."}]}]},{"id":"sickchill","name":"sickchill","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic. \n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sickchill-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/sickchill"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-sickchill"}],"containers":[{"name":"sickchill","image":"linuxserver/sickchill","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"this will store config on the docker host","key":"config"},{"container":"/downloads","description":"this will store any downloaded data on the docker host"},{"container":"/tv","description":"this will allow sickchill to view what you already have"}],"ports":[{"container":"8081","description":"will map the container's port 8081 to port 8081 on the host"}]}]},{"id":"sickgear","name":"sickgear","description":"[SickGear]({{ project_url }}) provides management of TV shows and/or Anime, it detects new episodes, links downloader apps, and more..\n\nFor more information on SickGear visit their website and check it out: https://github.com/SickGear/SickGear\n","icon":"https://raw.githubusercontent.com/wiki/SickGear/SickGear.Wiki/images/SickGearLogo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/sickgear"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-sickgear"}],"containers":[{"name":"sickgear","image":"linuxserver/sickgear","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"this will store any uploaded data on the docker host","key":"config"},{"container":"/tv","description":"where you store your tv shows"},{"container":"/downloads","description":"your downloads folder for post processing (must not be download in progress)"}],"ports":[{"container":"8081","description":"will map the container's port 8081 to port 8081 on the host"}]}]},{"id":"smokeping","name":"smokeping","description":"[{{ project_name|capitalize }}]({{ project_url }}) keeps track of your network latency. For a full example of what this application is capable of visit [UCDavis](http://smokeping.ucdavis.edu/cgi-bin/smokeping.fcgi).","icon":"https://camo.githubusercontent.com/e0694ef783e3fd1d74e6776b28822ced01c7cc17/687474703a2f2f6f73732e6f6574696b65722e63682f736d6f6b6570696e672f696e632f736d6f6b6570696e672d6c6f676f2e706e67","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/smokeping"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-smokeping"}],"containers":[{"name":"smokeping","image":"linuxserver/smokeping","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configure the `Targets` file here","key":"config"},{"container":"/data","description":"Storage location for db and application data (graphs etc)"}],"ports":[{"container":"80","description":"Allows HTTP access to the internal webserver."}]}]},{"id":"snapdrop","name":"snapdrop","description":"[{{ project_name|capitalize }}]({{ project_url }}) A local file sharing in your browser. Inspired by Apple's Airdrop.","icon":"https://raw.githubusercontent.com/RobinLinus/snapdrop/master/client/images/logo_transparent_512x512.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/snapdrop"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-snapdrop"}],"containers":[{"name":"snapdrop","image":"linuxserver/snapdrop","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Persistent configs and logs.","key":"config"}],"ports":[{"container":"80","description":"http gui"},{"container":"443","description":"https gui"}]}]},{"id":"snipe-it","name":"snipe-it","description":"[{{ project_name|capitalize }}]({{ project_url }}) makes asset management easy. It was built by people solving real-world IT and asset management problems, and a solid UX has always been a top priority. Straightforward design and bulk actions mean getting things done faster.","icon":"https://s3-us-west-2.amazonaws.com/linuxserver-docs/images/snipe-it-logo500x500.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/snipe-it"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-snipe-it"}],"containers":[{"name":"snipe-it","image":"linuxserver/snipe-it","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains your config files and data storage for Snipe-IT","key":"config"}],"ports":[{"container":"80","description":"Snipe-IT Web UI"}]}]},{"id":"sonarr","name":"sonarr","description":"[{{ project_name|capitalize }}]({{ project_url }}) (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sonarr-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/sonarr"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-sonarr"}],"containers":[{"name":"sonarr","image":"linuxserver/sonarr","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Database and sonarr configs","key":"config"}],"ports":[{"container":"8989","description":"The port for the Sonarr webinterface"}]}]},{"id":"sqlitebrowser","name":"sqlitebrowser","description":"[DB Browser for SQLite]({{ project_url }}) is a high quality, visual, open source tool to create, design, and edit database files compatible with SQLite.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sqlitebrowser-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/sqlitebrowser"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-sqlitebrowser"}],"containers":[{"name":"sqlitebrowser","image":"linuxserver/sqlitebrowser","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores program settings and potentially dump files.","key":"config"}],"ports":[{"container":"3000","description":"Sqlitebrowser desktop gui."}]}]},{"id":"swag","name":"swag","description":"SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt™) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.","icon":"https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/swag.gif","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/swag"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-swag"}],"containers":[{"name":"swag","image":"linuxserver/swag","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"All the config files including the webroot reside here.","key":"config"}],"ports":[{"container":"443","description":"Https port"}]}]},{"id":"synclounge","name":"synclounge","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a third party tool that allows you to watch Plex in sync with your friends/family, wherever you are.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/synclounge-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/synclounge"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-synclounge"}],"containers":[{"name":"synclounge","image":"linuxserver/synclounge","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"ports":[{"container":"8088","description":"Web app and server port"}]}]},{"id":"syncthing","name":"syncthing","description":"[{{ project_name|capitalize }}]({{ project_url }}) replaces proprietary sync and cloud services with something open, trustworthy and decentralized. Your data is your data alone and you deserve to choose where it is stored, if it is shared with some third party and how it's transmitted over the Internet.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/syncthing-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/syncthing"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-syncthing"}],"containers":[{"name":"syncthing","image":"linuxserver/syncthing","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configuration files.","key":"config"},{"container":"/data1","description":"Data1"},{"container":"/data2","description":"Data2"}],"ports":[{"container":"8384","description":"Application WebUI"},{"container":"22000/tcp","description":"Listening port (TCP)"},{"container":"22000/udp","description":"Listening port (UDP)"},{"container":"21027/udp","description":"Protocol discovery"}]}]},{"id":"syslog-ng","name":"syslog-ng","description":"[syslog-ng]({{ project_url }}) allows you to flexibly collect, parse, classify, rewrite and correlate logs from across your infrastructure and store or route them to log analysis tools.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/syslog-ng-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/syslog-ng"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-syslog-ng"}],"containers":[{"name":"syslog-ng","image":"linuxserver/syslog-ng","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Stores config and application files","key":"config"}],"ports":[{"container":"5514/udp","description":"Syslog UDP"},{"container":"6601/tcp","description":"Syslog TCP"},{"container":"6514/tcp","description":"Syslog TLS"}]}]},{"id":"tautulli","name":"tautulli","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a python based web application for monitoring, analytics and notifications for Plex Media Server.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/tautulli-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/tautulli"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-tautulli"}],"containers":[{"name":"tautulli","image":"linuxserver/tautulli","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains tautulli config and database.","key":"config"}],"ports":[{"container":"8181","description":"WebUI"}]}]},{"id":"thelounge","name":"thelounge","description":"[{{ project_name|capitalize }}]({{ project_url }}) (a fork of shoutIRC) is a web IRC client that you host on your own server.","icon":"https://raw.githubusercontent.com/thelounge/thelounge/master/client/img/logo-vertical-transparent-bg.svg?sanitize=true","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/thelounge"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-thelounge"}],"containers":[{"name":"thelounge","image":"linuxserver/thelounge","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configuration files.","key":"config"}],"ports":[{"container":"9000","description":"Application WebUI"}]}]},{"id":"transmission","name":"transmission","description":"[{{ project_name|capitalize }}]({{ project_url }}) is designed for easy, powerful use. Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, µTP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/transmission.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/transmission"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-transmission"}],"containers":[{"name":"transmission","image":"linuxserver/transmission","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where transmission should store config files and logs.","key":"config"},{"container":"/downloads","description":"Local path for downloads."},{"container":"/watch","description":"Watch folder for torrent files."}],"ports":[{"container":"9091","description":"WebUI"},{"container":"51413","description":"Torrent Port TCP"},{"container":"51413/udp","description":"Torrent Port UDP"}]}]},{"id":"tvheadend","name":"tvheadend","description":"[{{ project_name|capitalize }}]({{ project_url }}) works as a proxy server: is a TV streaming server and recorder for Linux, FreeBSD and Android supporting DVB-S, DVB-S2, DVB-C, DVB-T, ATSC, ISDB-T, IPTV, SAT>IP and HDHomeRun as input sources.\nTvheadend offers the HTTP (VLC, MPlayer), HTSP (Kodi, Movian) and SAT>IP streaming.\nMultiple EPG sources are supported (over-the-air DVB and ATSC including OpenTV DVB extensions, XMLTV, PyXML).\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/tvheadend-big.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/tvheadend"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-tvheadend"}],"containers":[{"name":"tvheadend","image":"linuxserver/tvheadend","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where TVHeadend show store it's config files.","key":"config"},{"container":"/recordings","description":"Where you want the PVR to store recordings."}],"ports":[{"container":"9981","description":"WebUI"},{"container":"9982","description":"HTSP server port."}]}]},{"id":"ubooquity","name":"ubooquity","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a free, lightweight and easy-to-use home server for your comics and ebooks. Use it to access your files from anywhere, with a tablet, an e-reader, a phone or a computer.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ubooquity-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/ubooquity"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-ubooquity"}],"containers":[{"name":"ubooquity","image":"linuxserver/ubooquity","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Config files and database for ubooquity.","key":"config"},{"container":"/books","description":"Location of books."},{"container":"/comics","description":"Location of comics."},{"container":"/files","description":"Location of raw files."}],"ports":[{"container":"2202","description":"The library port."},{"container":"2203","description":"The admin port."}]}]},{"id":"unifi-controller","name":"unifi-controller","description":"The [{{ project_name|capitalize }}]({{ project_url }}) software is a powerful, enterprise wireless software engine ideal for high-density client deployments requiring low latency and high uptime performance.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/unifi-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/unifi-controller"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-unifi-controller"}],"containers":[{"name":"unifi-controller","image":"linuxserver/unifi-controller","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"All Unifi data stored here","key":"config"}],"ports":[{"container":"8443","description":"Unifi web admin port"},{"container":"3478/udp","description":"Unifi STUN port"},{"container":"10001/udp","description":"Required for AP discovery"},{"container":"8080","description":"Required for device communication"}]}]},{"id":"webgrabplus","name":"webgrabplus","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a multi-site incremental xmltv epg grabber. It collects tv-program guide data from selected tvguide sites for your favourite channels.","icon":"http://www.webgrabplus.com/sites/default/themes/WgTheme/images/slideshows/EPG_fading.jpg","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/webgrabplus"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-webgrabplus"}],"containers":[{"name":"webgrabplus","image":"linuxserver/webgrabplus","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where webgrabplus should store it's config files.","key":"config"},{"container":"/data","description":"Where webgrabplus should store it's data files."}]}]},{"id":"webtop","name":"webtop","description":"[{{ project_name|capitalize }}]({{ project_url }}) - Alpine, Ubuntu, Fedora, and Arch based containers containing full desktop environments in officially supported flavors accessible via any modern web browser.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/webtop-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/webtop"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-webtop"}],"containers":[{"name":"webtop","image":"linuxserver/webtop","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"abc users home directory","key":"config"}],"ports":[{"container":"3000","description":"Web Desktop GUI"}]}]},{"id":"wikijs","name":"wikijs","description":"[{{ project_name|capitalize }}]({{ project_url }}) A modern, lightweight and powerful wiki app built on NodeJS.","icon":"https://static.requarks.io/logo/wikijs-full.svg","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/wikijs"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-wikijs"}],"containers":[{"name":"wikijs","image":"linuxserver/wikijs","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where Wiki.js config is stored.","key":"config"},{"container":"/data","description":"Where Wiki.js data is stored."}],"ports":[{"container":"3000","description":"Port for Wiki.js's web interface."}]}]},{"id":"wireguard","name":"wireguard","description":"[WireGuard®]({{ project_url }}) is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPsec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. WireGuard is designed as a general purpose VPN for running on embedded interfaces and super computers alike, fit for many different circumstances. Initially released for the Linux kernel, it is now cross-platform (Windows, macOS, BSD, iOS, Android) and widely deployable. It is currently under heavy development, but already it might be regarded as the most secure, easiest to use, and simplest VPN solution in the industry.","icon":"https://www.wireguard.com/img/wireguard.svg","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/wireguard"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-wireguard"}],"containers":[{"name":"wireguard","image":"linuxserver/wireguard","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"51820/udp","description":"wireguard port"}]}]},{"id":"wireshark","name":"wireshark","description":"[Wireshark]({{ project_url }}) is the world’s foremost and widely-used network protocol analyzer. It lets you see what’s happening on your network at a microscopic level and is the de facto (and often de jure) standard across many commercial and non-profit enterprises, government agencies, and educational institutions. Wireshark development thrives thanks to the volunteer contributions of networking experts around the globe and is the continuation of a project started by Gerald Combs in 1998. ","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/wireshark-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/wireshark"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-wireshark"}],"containers":[{"name":"wireshark","image":"linuxserver/wireshark","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores program settings and potentially dump files.","key":"config"}]}]},{"id":"xbackbone","name":"xbackbone","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a simple, self-hosted, lightweight PHP file manager that support the instant sharing tool ShareX and *NIX systems. It supports uploading and displaying images, GIF, video, code, formatted text, and file downloading and uploading. Also have a web UI with multi user management, past uploads history and search support.\n","icon":"https://raw.githubusercontent.com/SergiX44/XBackBone/master/docs/img/xbackbone.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/xbackbone"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-xbackbone"}],"containers":[{"name":"xbackbone","image":"linuxserver/xbackbone","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"config directory volume mapping","key":"config"}],"ports":[{"container":"80","description":"http gui"},{"container":"443","description":"https gui"}]}]},{"id":"yq","name":"yq","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/yq"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-yq"}],"containers":[{"name":"yq","image":"linuxserver/yq","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}]}]},{"id":"znc","name":"znc","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an IRC network bouncer or BNC. It can detach the client from the actual IRC server, and also from selected channels. Multiple clients from different locations can connect to a single ZNC account simultaneously and therefore appear under the same nickname on IRC.","icon":"http://wiki.znc.in/resources/assets/wiki.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/znc"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-znc"}],"containers":[{"name":"znc","image":"linuxserver/znc","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where local ZNC data is stored.","key":"config"}],"ports":[{"container":"6501","description":"Port ZNC listens on."}]}]}],"_id":"content:all.json","_type":"json","title":"All","_source":"content","_file":"all.json","_extension":"json"},{"_path":"/apps/adguardhome-sync","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"adguardhome-sync","name":"adguardhome-sync","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a tool to synchronize AdGuardHome config to replica instances.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/adguardhomesync-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/adguardhome-sync"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-adguardhome-sync"}],"containers":[{"name":"adguardhome-sync","image":"linuxserver/adguardhome-sync","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"8080","description":"Port for AdGuardHome Sync's web API."}]}],"_id":"content:apps:adguardhome-sync.json","_type":"json","title":"Adguardhome Sync","_source":"content","_file":"apps/adguardhome-sync.json","_extension":"json"},{"_path":"/apps/airsonic-advanced","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"airsonic-advanced","name":"airsonic-advanced","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a free, web-based media streamer, providing ubiquitious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/airsonic-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/airsonic-advanced"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-airsonic-advanced"}],"containers":[{"name":"airsonic-advanced","image":"linuxserver/airsonic-advanced","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configuration file location.","key":"config"},{"container":"/music","description":"Location of music."},{"container":"/playlists","description":"Location for playlists to be saved to."},{"container":"/podcasts","description":"Location of podcasts."}],"ports":[{"container":"4040","description":"WebUI"}]}],"_id":"content:apps:airsonic-advanced.json","_type":"json","title":"Airsonic Advanced","_source":"content","_file":"apps/airsonic-advanced.json","_extension":"json"},{"_path":"/apps/apprise-api","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"apprise-api","name":"apprise-api","description":"[{{ project_name|capitalize }}]({{ project_url }}) Takes advantage of [Apprise](https://github.com/caronc/apprise) through your network with a user-friendly API.\n\n* Send notifications to more then 65+ services.\n* An incredibly lightweight gateway to Apprise.\n* A production ready micro-service at your disposal.\n\nApprise API was designed to easily fit into existing (and new) eco-systems that are looking for a simple notification solution.\n","icon":"https://raw.githubusercontent.com/caronc/apprise-api/master/apprise_api/static/logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/apprise-api"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-apprise-api"}],"containers":[{"name":"apprise-api","image":"linuxserver/apprise-api","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where config is stored.","key":"config"}],"ports":[{"container":"8000","description":"Port for apprise's interface and API."}]}],"_id":"content:apps:apprise-api.json","_type":"json","title":"Apprise Api","_source":"content","_file":"apps/apprise-api.json","_extension":"json"},{"_path":"/apps/audacity","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"audacity","name":"audacity","description":"[Audacity]({{ project_url }}) is an easy-to-use, multi-track audio editor and recorder. Developed by a group of volunteers as open source.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/audacity-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/audacity"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-audacity"}],"containers":[{"name":"audacity","image":"linuxserver/audacity","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores program settings and images","key":"config"}],"ports":[{"container":"3000","description":"Audacity desktop gui."}]}],"_id":"content:apps:audacity.json","_type":"json","title":"Audacity","_source":"content","_file":"apps/audacity.json","_extension":"json"},{"_path":"/apps/audiobookshelf","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"audiobookshelf","name":"Audio Book Shelf","icon":"https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/adguardhome-sync.png","links":[{"type":"docker","url":"https://hub.docker.com/r/advplyr/audiobookshelf"},{"type":"docs","url":"https://audiobookshelf.org/docs"}],"containers":[{"name":"audiobookshelf","image":"advplyr/audiobookshelf","env":[{"id":"AUDIOBOOKSHELF_UID","key":"PUID","description":"User ID","default":"99"},{"id":"AUDIOBOOKSHELF_GID","key":"PGID","description":"Group ID","default":"100"}],"volumes":[{"container":"/audiobooks","description":"Path to your Audiobooks","key":"audiobooks"},{"container":"/podcasts","description":"Path to your Podcasts","key":"podcasts"},{"container":"/metadata","description":"Path to your Metadata"},{"container":"/config","description":"Path to your Config","key":"config"}],"ports":[{"key":"webui","container":80,"description":"Web Interface","protocol":"tcp","web":true}]}],"_id":"content:apps:audiobookshelf.json","_type":"json","title":"Audiobookshelf","_source":"content","_file":"apps/audiobookshelf.json","_extension":"json"},{"_path":"/apps/babybuddy","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"babybuddy","name":"babybuddy","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a buddy for babies! Helps caregivers track sleep, feedings, diaper changes, tummy time and more to learn about and predict baby's needs without (as much) guess work.","icon":"https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/babybuddy-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/babybuddy"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-babybuddy"}],"containers":[{"name":"babybuddy","image":"linuxserver/babybuddy","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration and data.","key":"config"}],"ports":[{"container":"8000","description":"the port for the web ui"}]}],"_id":"content:apps:babybuddy.json","_type":"json","title":"Babybuddy","_source":"content","_file":"apps/babybuddy.json","_extension":"json"},{"_path":"/apps/bazarr","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"bazarr","name":"bazarr","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a companion application to Sonarr and Radarr. It can manage and download subtitles based on your requirements. You define your preferences by TV show or movie and Bazarr takes care of everything for you.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/bazarr.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/bazarr"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-bazarr"}],"containers":[{"name":"bazarr","image":"linuxserver/bazarr","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Bazarr data","key":"config"}],"ports":[{"container":"6767","description":"Allows HTTP access to the internal webserver."}]}],"_id":"content:apps:bazarr.json","_type":"json","title":"Bazarr","_source":"content","_file":"apps/bazarr.json","_extension":"json"},{"_path":"/apps/beets","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"beets","name":"beets","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a music library manager and not, for the most part, a music player. It does include a simple player plugin and an experimental Web-based player, but it generally leaves actual sound-reproduction to specialized tools.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/beets-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/beets"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-beets"}],"containers":[{"name":"beets","image":"linuxserver/beets","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configuration files.","key":"config"},{"container":"/music","description":"Music library"},{"container":"/downloads","description":"Non processed music"}],"ports":[{"container":"8337","description":"Application WebUI"}]}],"_id":"content:apps:beets.json","_type":"json","title":"Beets","_source":"content","_file":"apps/beets.json","_extension":"json"},{"_path":"/apps/blender","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"blender","name":"blender","description":"[Blender]({{ project_url }}) is a free and open-source 3D computer graphics software toolset used for creating animated films, visual effects, art, 3D printed models, motion graphics, interactive 3D applications, virtual reality, and computer games. **This image does not support GPU rendering out of the box only accelerated workspace experience**","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/blender-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/blender"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-blender"}],"containers":[{"name":"blender","image":"linuxserver/blender","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores local files and settings","key":"config"}],"ports":[{"container":"3000","description":"Blender desktop gui"}]}],"_id":"content:apps:blender.json","_type":"json","title":"Blender","_source":"content","_file":"apps/blender.json","_extension":"json"},{"_path":"/apps/boinc","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"boinc","name":"boinc","description":"[BOINC]({{ project_url }}) is a platform for high-throughput computing on a large scale (thousands or millions of computers). It can be used for volunteer computing (using consumer devices) or grid computing (using organizational resources). It supports virtualized, parallel, and GPU-based applications.","icon":"https://raw.githubusercontent.com/BOINC/boinc/master/doc/logo/boinc_logo_black.jpg","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/boinc"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-boinc"}],"containers":[{"name":"boinc","image":"linuxserver/boinc","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where BOINC should store its database and config.","key":"config"}],"ports":[{"container":"8080","description":"Boinc desktop gui."}]}],"_id":"content:apps:boinc.json","_type":"json","title":"Boinc","_source":"content","_file":"apps/boinc.json","_extension":"json"},{"_path":"/apps/booksonic-air","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"booksonic-air","name":"booksonic-air","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a platform for accessing the audiobooks you own wherever you are. At the moment the platform consists of:\n* Booksonic Air - A server for streaming your audiobooks, successor to the original Booksonic server and based on Airsonic.\n* Booksonic App - An DSub based Android app for connection to Booksonic-Air servers.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/booksonic-air.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/booksonic-air"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-booksonic-air"}],"containers":[{"name":"booksonic-air","image":"linuxserver/booksonic-air","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configuration files.","key":"config"},{"container":"/audiobooks","description":"Audiobooks."},{"container":"/podcasts","description":"Podcasts."},{"container":"/othermedia","description":"Other media."}],"ports":[{"container":"4040","description":"Application WebUI"}]}],"_id":"content:apps:booksonic-air.json","_type":"json","title":"Booksonic Air","_source":"content","_file":"apps/booksonic-air.json","_extension":"json"},{"_path":"/apps/bookstack","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"bookstack","name":"bookstack","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a free and open source Wiki designed for creating beautiful documentation. Featuring a simple, but powerful WYSIWYG editor it allows for teams to create detailed and useful documentation with ease.\n\nPowered by SQL and including a Markdown editor for those who prefer it, BookStack is geared towards making documentation more of a pleasure than a chore.\n\nFor more information on BookStack visit their website and check it out: https://www.bookstackapp.com\n","icon":"https://s3-us-west-2.amazonaws.com/linuxserver-docs/images/bookstack-logo500x500.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/bookstack"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-bookstack"}],"containers":[{"name":"bookstack","image":"linuxserver/bookstack","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"this will store any uploaded data on the docker host","key":"config"}],"ports":[{"container":"80","description":"will map the container's port 80 to port 6875 on the host"}]}],"_id":"content:apps:bookstack.json","_type":"json","title":"Bookstack","_source":"content","_file":"apps/bookstack.json","_extension":"json"},{"_path":"/apps/budge","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"budge","name":"budge","description":"[{{ project_name }}]({{ project_url }}) is an open source 'budgeting with envelopes' personal finance app.","icon":"","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/budge"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-budge"}],"containers":[{"name":"budge","image":"linuxserver/budge","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Persistent config files","key":"config"}],"ports":[{"container":"80","description":"http gui"},{"container":"443","description":"https gui"}]}],"_id":"content:apps:budge.json","_type":"json","title":"Budge","_source":"content","_file":"apps/budge.json","_extension":"json"},{"_path":"/apps/calibre-web","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"calibre-web","name":"calibre-web","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database.   It is also possible to integrate google drive and edit metadata and your calibre library through the app itself.\n\nThis software is a fork of library and licensed under the GPL v3 License.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/calibre-web-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/calibre-web"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-calibre-web"}],"containers":[{"name":"calibre-web","image":"linuxserver/calibre-web","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where calibre-web stores the internal database and config.","key":"config"},{"container":"/books","description":"Where your preexisting calibre database is located."}],"ports":[{"container":"8083","description":"WebUI"}]}],"_id":"content:apps:calibre-web.json","_type":"json","title":"Calibre Web","_source":"content","_file":"apps/calibre-web.json","_extension":"json"},{"_path":"/apps/calibre","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"calibre","name":"calibre","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a powerful and easy to use e-book manager. Users say it’s outstanding and a must-have. It’ll allow you to do nearly everything and it takes things a step beyond normal e-book software. It’s also completely free and open source and great for both casual users and computer experts.","icon":"https://github.com/kovidgoyal/calibre/raw/master/resources/images/lt.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/calibre"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-calibre"}],"containers":[{"name":"calibre","image":"linuxserver/calibre","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where calibre should store its database and library.","key":"config"}],"ports":[{"container":"8080","description":"Calibre desktop gui."},{"container":"8081","description":"Calibre webserver gui."}]}],"_id":"content:apps:calibre.json","_type":"json","title":"Calibre","_source":"content","_file":"apps/calibre.json","_extension":"json"},{"_path":"/apps/changedetection.io","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"changedetection.io","name":"changedetection.io","description":"[{{ project_name|capitalize }}]({{ project_url }}) provides free, open-source web page monitoring, notification and change detection.","icon":"https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/changedetection-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/changedetection.io"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-changedetection.io"}],"containers":[{"name":"changedetection.io","image":"linuxserver/changedetection.io","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"5000","description":"WebUI"}]}],"_id":"content:apps:changedetection.io.json","_type":"json","title":"ChangedetectionIo","_source":"content","_file":"apps/changedetection.io.json","_extension":"json"},{"_path":"/apps/code-server","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"code-server","name":"code-server","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/code-server"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-code-server"}],"containers":[{"name":"code-server","image":"linuxserver/code-server","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}]}],"_id":"content:apps:code-server.json","_type":"json","title":"Code Server","_source":"content","_file":"apps/code-server.json","_extension":"json"},{"_path":"/apps/cops","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"cops","name":"cops","description":"[{{ project_name|capitalize }}]({{ project_url }}) by Sébastien Lucas, stands for Calibre OPDS (and HTML) Php Server.\n\nCOPS links to your Calibre library database and allows downloading and emailing of books directly from a web browser and provides a OPDS feed to connect to your devices.\n\nChanges in your Calibre library are reflected immediately in your COPS pages.\n\nSee : [COPS's home]({{ project_url }}) for more details.\n\nDon't forget to check the [Wiki](https://github.com/seblucas/cops/wiki).\n\n## Why? (taken from the author's site)\n\nIn my opinion Calibre is a marvelous tool but is too big and has too much\ndependencies to be used for its content server.\n\nThat's the main reason why I coded this OPDS server. I needed a simple\ntool to be installed on a small server (Seagate Dockstar in my case).\n\nI initially thought of Calibre2OPDS but as it generate static file no\nsearch was possible.\n\nLater I added an simple HTML catalog that should be usable on my Kobo.\n\nSo COPS's main advantages are :\n * No need for many dependencies.\n * No need for a lot of CPU or RAM.\n * Not much code.\n * Search is available.\n * With Dropbox / owncloud it's very easy to have an up to date OPDS server.\n * It was fun to code.\n\nIf you want to use the OPDS feed don't forget to specify feed.php at the end of your URL.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/cops-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/cops"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-cops"}],"containers":[{"name":"cops","image":"linuxserver/cops","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"COPS Application Data.","key":"config"},{"container":"/books","description":"Calibre metadata.db location."}],"ports":[{"container":"80","description":"WebUI"}]}],"_id":"content:apps:cops.json","_type":"json","title":"Cops","_source":"content","_file":"apps/cops.json","_extension":"json"},{"_path":"/apps/daapd","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"daapd","name":"daapd","description":"[{{ project_name|capitalize }}]({{ project_url }}) (iTunes) media server with support for AirPlay devices, Apple Remote (and compatibles), Chromecast, MPD and internet radio.","icon":"https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/daapd-git.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/daapd"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-daapd"}],"containers":[{"name":"daapd","image":"linuxserver/daapd","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where daapd server stores its config and dbase files.","key":"config"},{"container":"/music","description":"Map to your music folder."}]}],"_id":"content:apps:daapd.json","_type":"json","title":"Daapd","_source":"content","_file":"apps/daapd.json","_extension":"json"},{"_path":"/apps/darktable","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"darktable","name":"darktable","description":"[darktable]({{ project_url }}) is an open source photography workflow application and raw developer. A virtual lighttable and darkroom for photographers. It manages your digital negatives in a database, lets you view them through a zoomable lighttable and enables you to develop raw images and enhance them.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/darktable-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/darktable"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-darktable"}],"containers":[{"name":"darktable","image":"linuxserver/darktable","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores program settings and images","key":"config"}],"ports":[{"container":"3000","description":"Darktable desktop gui."}]}],"_id":"content:apps:darktable.json","_type":"json","title":"Darktable","_source":"content","_file":"apps/darktable.json","_extension":"json"},{"_path":"/apps/davos","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"davos","name":"davos","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an FTP automation tool that periodically scans given host locations for new files. It can be configured for various purposes, including listening for specific files to appear in the host location, ready for it to download and then move, if required. It also supports completion notifications as well as downstream API calls, to further the workflow.\n","icon":"https://raw.githubusercontent.com/linuxserver/davos/master/docs/list.PNG","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/davos"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-davos"}],"containers":[{"name":"davos","image":"linuxserver/davos","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"davos's config location. This is where it stores its database file and logs.","key":"config"},{"container":"/download","description":"davos's file download location"}],"ports":[{"container":"8080","description":"This is the default port that davos runs under"}]}],"_id":"content:apps:davos.json","_type":"json","title":"Davos","_source":"content","_file":"apps/davos.json","_extension":"json"},{"_path":"/apps/ddclient","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"ddclient","name":"ddclient","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a Perl client used to update dynamic DNS entries for accounts on Dynamic DNS Network Service Provider. It was originally written by Paul Burry and is now mostly by wimpunk. It has the capability to update more than just dyndns and it can fetch your WAN-ipaddress in a few different ways.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ddclient-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/ddclient"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-ddclient"}],"containers":[{"name":"ddclient","image":"linuxserver/ddclient","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where ddclient should store its config files.","key":"config"}]}],"_id":"content:apps:ddclient.json","_type":"json","title":"Ddclient","_source":"content","_file":"apps/ddclient.json","_extension":"json"},{"_path":"/apps/deluge","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"deluge","name":"deluge","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a lightweight, Free Software, cross-platform BitTorrent client.\n\n* Full Encryption\n* WebUI\n* Plugin System\n* Much more...\n","icon":"https://avatars2.githubusercontent.com/u/6733935?v=3&s=200","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/deluge"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-deluge"}],"containers":[{"name":"deluge","image":"linuxserver/deluge","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"deluge configs","key":"config"},{"container":"/downloads","description":"torrent download directory"}],"ports":[{"container":"8112","description":"Port for webui"},{"container":"6881","description":"Inbound torrent traffic (See App Setup)"},{"container":"6881/udp","description":"Inbound torrent traffic (See App Setup)"}]}],"_id":"content:apps:deluge.json","_type":"json","title":"Deluge","_source":"content","_file":"apps/deluge.json","_extension":"json"},{"_path":"/apps/digikam","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"digikam","name":"digikam","description":"[digiKam]({{ project_url }}): Professional Photo Management with the Power of Open Source","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/digikam.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/digikam"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-digikam"}],"containers":[{"name":"digikam","image":"linuxserver/digikam","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores database.","key":"config"}]}],"_id":"content:apps:digikam.json","_type":"json","title":"Digikam","_source":"content","_file":"apps/digikam.json","_extension":"json"},{"_path":"/apps/dillinger","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"dillinger","name":"dillinger","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dillinger.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/dillinger"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-dillinger"}],"containers":[{"name":"dillinger","image":"linuxserver/dillinger","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Dillinger plugin config files","key":"config"}],"ports":[{"container":"8080","description":"The port for the Dillinger web interface"}]}],"_id":"content:apps:dillinger.json","_type":"json","title":"Dillinger","_source":"content","_file":"apps/dillinger.json","_extension":"json"},{"_path":"/apps/diskover","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"diskover","name":"diskover","description":"[{{ project_name }}]({{ project_url }}) is an open source file system indexer that uses Elasticsearch to index and manage data across heterogeneous storage systems.","icon":"https://raw.githubusercontent.com/diskoverdata/diskover-community/master/diskover-web/public/images/diskover.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/diskover"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-diskover"}],"containers":[{"name":"diskover","image":"linuxserver/diskover","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Persistent config files","key":"config"},{"container":"/data","description":"Default mount point to crawl"}],"ports":[{"container":"80","description":"diskover Web UI"}]}],"_id":"content:apps:diskover.json","_type":"json","title":"Diskover","_source":"content","_file":"apps/diskover.json","_extension":"json"},{"_path":"/apps/docker-compose","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"docker-compose","name":"docker-compose","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/docker-compose"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-docker-compose"}],"containers":[{"name":"docker-compose","image":"linuxserver/docker-compose","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}]}],"_id":"content:apps:docker-compose.json","_type":"json","title":"Docker Compose","_source":"content","_file":"apps/docker-compose.json","_extension":"json"},{"_path":"/apps/dokuwiki","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"dokuwiki","name":"dokuwiki","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a simple to use and highly versatile Open Source wiki software that doesn't require a database. It is loved by users for its clean and readable syntax. The ease of maintenance, backup and integration makes it an administrator's favorite. Built in access controls and authentication connectors make DokuWiki especially useful in the enterprise context and the large number of plugins contributed by its vibrant community allow for a broad range of use cases beyond a traditional wiki.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dokuwiki-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/dokuwiki"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-dokuwiki"}],"containers":[{"name":"dokuwiki","image":"linuxserver/dokuwiki","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configuration files.","key":"config"}],"ports":[{"container":"80","description":"Application HTTP Port"}]}],"_id":"content:apps:dokuwiki.json","_type":"json","title":"Dokuwiki","_source":"content","_file":"apps/dokuwiki.json","_extension":"json"},{"_path":"/apps/domoticz","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"domoticz","name":"domoticz","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. Notifications/Alerts can be sent to any mobile device.","icon":"https://github.com/domoticz/domoticz/raw/master/www/images/logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/domoticz"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-domoticz"}],"containers":[{"name":"domoticz","image":"linuxserver/domoticz","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where Domoticz stores config files and data.","key":"config"}],"ports":[{"container":"8080","description":"WebUI"},{"container":"6144","description":"Domoticz communication port."},{"container":"1443","description":"Domoticz communication port."}]}],"_id":"content:apps:domoticz.json","_type":"json","title":"Domoticz","_source":"content","_file":"apps/domoticz.json","_extension":"json"},{"_path":"/apps/doplarr","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"doplarr","name":"doplarr","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an *arr request bot for Discord.\"\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/doplarr-logo_title.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/doplarr"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-doplarr"}],"containers":[{"name":"doplarr","image":"linuxserver/doplarr","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}]}],"_id":"content:apps:doplarr.json","_type":"json","title":"Doplarr","_source":"content","_file":"apps/doplarr.json","_extension":"json"},{"_path":"/apps/doublecommander","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"doublecommander","name":"doublecommander","description":"[Double Commander]({{ project_url }}) is a free cross platform open source file manager with two panels side by side. It is inspired by Total Commander and features some new ideas.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/doublecommander-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/doublecommander"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-doublecommander"}],"containers":[{"name":"doublecommander","image":"linuxserver/doublecommander","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores program settings.","key":"config"},{"container":"/data","description":"Host data directories, mount as many as needed."}],"ports":[{"container":"3000","description":"Double Commander desktop gui."}]}],"_id":"content:apps:doublecommander.json","_type":"json","title":"Doublecommander","_source":"content","_file":"apps/doublecommander.json","_extension":"json"},{"_path":"/apps/duckdns","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"duckdns","name":"duckdns","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a free service which will point a DNS (sub domains of duckdns.org) to an IP of your choice. The service is completely free, and doesn't require reactivation or forum posts to maintain its existence.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/duckdns.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/duckdns"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-duckdns"}],"containers":[{"name":"duckdns","image":"linuxserver/duckdns","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}]}],"_id":"content:apps:duckdns.json","_type":"json","title":"Duckdns","_source":"content","_file":"apps/duckdns.json","_extension":"json"},{"_path":"/apps/duplicati","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"duplicati","name":"duplicati","description":"[{{ project_name|capitalize }}]({{ project_url }}) works with standard protocols like FTP, SSH, WebDAV as well as popular services like Microsoft OneDrive, Amazon Cloud Drive & S3, Google Drive, box.com, Mega, hubiC and many others.","icon":"https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/duplicati-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/duplicati"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-duplicati"}],"containers":[{"name":"duplicati","image":"linuxserver/duplicati","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"},{"container":"/backups","description":"Path to store local backups."},{"container":"/source","description":"Path to source for files to backup."}],"ports":[{"container":"8200","description":"http gui"}]}],"_id":"content:apps:duplicati.json","_type":"json","title":"Duplicati","_source":"content","_file":"apps/duplicati.json","_extension":"json"},{"_path":"/apps/emby","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"emby","name":"emby","description":"[{{ project_name|capitalize }}]({{ project_url }}) organizes video, music, live TV, and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone emby Media Server.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/emby-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/emby"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-emby"}],"containers":[{"name":"emby","image":"linuxserver/emby","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Emby data storage location. *This can grow very large, 50gb+ is likely for a large collection.*","key":"config"},{"container":"/data/tvshows","description":"Media goes here. Add as many as needed e.g. `/data/movies`, `/data/tv`, etc."},{"container":"/data/movies","description":"Media goes here. Add as many as needed e.g. `/data/movies`, `/data/tv`, etc."}],"ports":[{"container":"8096","description":"Http webUI."}]}],"_id":"content:apps:emby.json","_type":"json","title":"Emby","_source":"content","_file":"apps/emby.json","_extension":"json"},{"_path":"/apps/embystat","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"embystat","name":"embystat","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a personal web server that can calculate all kinds of statistics from your (local) Emby server. Just install this on your server and let him calculate all kinds of fun stuff.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/embystat-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/embystat"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-embystat"}],"containers":[{"name":"embystat","image":"linuxserver/embystat","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"6555","description":"web gui"}]}],"_id":"content:apps:embystat.json","_type":"json","title":"Embystat","_source":"content","_file":"apps/embystat.json","_extension":"json"},{"_path":"/apps/emulatorjs","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"emulatorjs","name":"emulatorjs","description":"[{{ project_name|capitalize }}]({{ project_url }}) - In browser web based emulation portable to nearly any device for many retro consoles. A mix of emulators is used between Libretro and EmulatorJS.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/emulatorjs-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/emulatorjs"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-emulatorjs"}],"containers":[{"name":"emulatorjs","image":"linuxserver/emulatorjs","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Path to store user profiles","key":"config"},{"container":"/data","description":"Path to store roms/artwork"}],"ports":[{"container":"3000","description":"Rom/artwork management interface, used to generate/manage config files and download artwork"},{"container":"80","description":"Emulation frontend containing static web files used to browse and launch games"}]}],"_id":"content:apps:emulatorjs.json","_type":"json","title":"Emulatorjs","_source":"content","_file":"apps/emulatorjs.json","_extension":"json"},{"_path":"/apps/endlessh","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"endlessh","name":"endlessh","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an SSH tarpit that very slowly sends an endless, random SSH banner. It keeps SSH clients locked up for hours or even days at a time. The purpose is to put your real SSH server on another port and then let the script kiddies get stuck in this tarpit instead of bothering a real server.","icon":"https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/openssh-server-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/endlessh"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-endlessh"}],"containers":[{"name":"endlessh","image":"linuxserver/endlessh","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"ports":[{"container":"2222","description":"ssh port"}]}],"_id":"content:apps:endlessh.json","_type":"json","title":"Endlessh","_source":"content","_file":"apps/endlessh.json","_extension":"json"},{"_path":"/apps/fail2ban","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"fail2ban","name":"fail2ban","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a daemon to ban hosts that cause multiple authentication errors.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/fail2ban-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/fail2ban"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-fail2ban"}],"containers":[{"name":"fail2ban","image":"linuxserver/fail2ban","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"},{"container":"/var/log:ro","description":"Host logs. Mounted as Read Only."}]}],"_id":"content:apps:fail2ban.json","_type":"json","title":"Fail2ban","_source":"content","_file":"apps/fail2ban.json","_extension":"json"},{"_path":"/apps/feed2toot","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"feed2toot","name":"feed2toot","description":"[{{ project_name|capitalize }}]({{ project_url }}) automatically parses rss feeds, identifies new posts and posts them on the Mastodon social network.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/feed2toot-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/feed2toot"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-feed2toot"}],"containers":[{"name":"feed2toot","image":"linuxserver/feed2toot","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Local path for feed2toot config files.","key":"config"}]}],"_id":"content:apps:feed2toot.json","_type":"json","title":"Feed2toot","_source":"content","_file":"apps/feed2toot.json","_extension":"json"},{"_path":"/apps/ffmpeg","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"ffmpeg","name":"ffmpeg","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/ffmpeg"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-ffmpeg"}],"containers":[{"name":"ffmpeg","image":"linuxserver/ffmpeg","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}]}],"_id":"content:apps:ffmpeg.json","_type":"json","title":"Ffmpeg","_source":"content","_file":"apps/ffmpeg.json","_extension":"json"},{"_path":"/apps/filezilla","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"filezilla","name":"filezilla","description":"[FIleZilla]({{ project_url }}) Client is a fast and reliable cross-platform FTP, FTPS and SFTP client with lots of useful features and an intuitive graphical user interface.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/filezilla-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/filezilla"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-filezilla"}],"containers":[{"name":"filezilla","image":"linuxserver/filezilla","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores local files and settings","key":"config"}],"ports":[{"container":"3000","description":"FileZilla desktop gui."}]}],"_id":"content:apps:filezilla.json","_type":"json","title":"Filezilla","_source":"content","_file":"apps/filezilla.json","_extension":"json"},{"_path":"/apps/firefox","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"firefox","name":"firefox","description":"[Firefox]({{ project_url }}) Browser, also known as Mozilla Firefox or simply Firefox, is a free and open-source web browser developed by the Mozilla Foundation and its subsidiary, the Mozilla Corporation. Firefox uses the Gecko layout engine to render web pages, which implements current and anticipated web standards.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/firefox-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/firefox"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-firefox"}],"containers":[{"name":"firefox","image":"linuxserver/firefox","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores local files and settings","key":"config"}],"ports":[{"container":"3000","description":"Firefox desktop gui."}]}],"_id":"content:apps:firefox.json","_type":"json","title":"Firefox","_source":"content","_file":"apps/firefox.json","_extension":"json"},{"_path":"/apps/fleet","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"fleet","name":"fleet","description":"[{{ project_name|capitalize }}]({{ project_url }}) provides an online web interface which displays a set of maintained images from one or more owned repositories.","icon":"","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/fleet"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-fleet"}],"containers":[{"name":"fleet","image":"linuxserver/fleet","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"The primary config file and rolling log files.","key":"config"}],"ports":[{"container":"8080","description":"Http port"}]}],"_id":"content:apps:fleet.json","_type":"json","title":"Fleet","_source":"content","_file":"apps/fleet.json","_extension":"json"},{"_path":"/apps/foldingathome","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"foldingathome","name":"foldingathome","description":"[Folding@home]({{ project_url }}) is a distributed computing project for simulating protein dynamics, including the process of protein folding and the movements of proteins implicated in a variety of diseases. It brings together citizen scientists who volunteer to run simulations of protein dynamics on their personal computers. Insights from this data are helping scientists to better understand biology, and providing new opportunities for developing therapeutics.","icon":"https://foldingathome.org/wp-content/uploads/2016/09/folding-at-home-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/foldingathome"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-foldingathome"}],"containers":[{"name":"foldingathome","image":"linuxserver/foldingathome","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where Folding@home should store its database and config.","key":"config"}],"ports":[{"container":"7396","description":"Folding@home web gui."}]}],"_id":"content:apps:foldingathome.json","_type":"json","title":"Foldingathome","_source":"content","_file":"apps/foldingathome.json","_extension":"json"},{"_path":"/apps/freshrss","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"freshrss","name":"freshrss","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a free, self-hostable aggregator for rss feeds.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/freshrss-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/freshrss"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-freshrss"}],"containers":[{"name":"freshrss","image":"linuxserver/freshrss","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Local storage for freshrss site files.","key":"config"}],"ports":[{"container":"80","description":"WebUI"}]}],"_id":"content:apps:freshrss.json","_type":"json","title":"Freshrss","_source":"content","_file":"apps/freshrss.json","_extension":"json"},{"_path":"/apps/grav","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"grav","name":"grav","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a Fast, Simple, and Flexible, file-based Web-platform.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/grav-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/grav"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-grav"}],"containers":[{"name":"grav","image":"linuxserver/grav","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"80","description":"Port for web frontend"}]}],"_id":"content:apps:grav.json","_type":"json","title":"Grav","_source":"content","_file":"apps/grav.json","_extension":"json"},{"_path":"/apps/grocy","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"grocy","name":"grocy","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an ERP system for your kitchen! Cut down on food waste, and manage your chores with this brilliant utility.\n\nKeep track of your purchases, how much food you are wasting, what chores need doing and what batteries need charging with this proudly Open Source tool\n\nFor more information on grocy visit their website and check it out: https://grocy.info\n","icon":"https://grocy.info/img/grocy_logo.svg","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/grocy"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-grocy"}],"containers":[{"name":"grocy","image":"linuxserver/grocy","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"this will store any uploaded data on the docker host","key":"config"}],"ports":[{"container":"80","description":"will map the container's port 80 to port 9283 on the host"}]}],"_id":"content:apps:grocy.json","_type":"json","title":"Grocy","_source":"content","_file":"apps/grocy.json","_extension":"json"},{"_path":"/apps/guacd","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"guacd","name":"guacd","description":"[{{ project_name|capitalize }}]({{ project_url }}) - Apache Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC, RDP, and SSH. This container is only the backend server component needed to use The official or 3rd party HTML5 frontends.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/guacd.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/guacd"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-guacd"}],"containers":[{"name":"guacd","image":"linuxserver/guacd","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"ports":[{"container":"4822","description":"Port Guacamole server listens on"}]}],"_id":"content:apps:guacd.json","_type":"json","title":"Guacd","_source":"content","_file":"apps/guacd.json","_extension":"json"},{"_path":"/apps/habridge","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"habridge","name":"habridge","description":"[{{ project_name|capitalize }}]({{ project_url }}) emulates Philips Hue API to other home automation gateways such as an Amazon Echo/Dot Gen 1 (gen 2 has issues discovering ha-bridge) or other systems that support Philips Hue. The Bridge handles basic commands such as \"On\", \"Off\" and \"brightness\" commands of the hue protocol. This bridge can control most devices that have a distinct API.\n\nIn the cases of systems that require authorization and/or have APIs that cannot be handled in the current method, a module may need to be built. The Harmony Hub is such a module and so is the Nest module. The Bridge has helpers to build devices for the gateway for the Logitech Harmony Hub, Vera, Vera Lite or Vera Edge, Nest, Somfy Tahoma, Home Assistant, Domoticz, MQTT, HAL, Fibaro, HomeWizard, LIFX, OpenHAB, FHEM, Broadlink and the ability to proxy all of your real Hue bridges behind this bridge.\n\nThis bridge was built to help put the Internet of Things together.\n\nFor more information about how to use this software have a look at their Wiki [https://github.com/bwssytems/ha-bridge/wiki](https://github.com/bwssytems/ha-bridge/wiki)\n","icon":"https://raw.githubusercontent.com/bwssytems/ha-bridge/master/src/main/resources/public/img/favicon.ico","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/habridge"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-habridge"}],"containers":[{"name":"habridge","image":"linuxserver/habridge","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where HABridge stores config files and data.","key":"config"}],"ports":[{"container":"8080","description":"WebUI"},{"container":"50000","description":"HABridge communication port."}]}],"_id":"content:apps:habridge.json","_type":"json","title":"Habridge","_source":"content","_file":"apps/habridge.json","_extension":"json"},{"_path":"/apps/headphones","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"headphones","name":"headphones","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an automated music downloader for NZB and Torrent, written in Python. It supports SABnzbd, NZBget, Transmission, µTorrent and Blackhole.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/headphones-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/headphones"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-headphones"}],"containers":[{"name":"headphones","image":"linuxserver/headphones","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configuration files.","key":"config"},{"container":"/downloads","description":"ISOs."},{"container":"/music","description":"Your music directory."}],"ports":[{"container":"8181","description":"Application WebUI"}]}],"_id":"content:apps:headphones.json","_type":"json","title":"Headphones","_source":"content","_file":"apps/headphones.json","_extension":"json"},{"_path":"/apps/healthchecks","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"healthchecks","name":"healthchecks","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a watchdog for your cron jobs. It's a web server that listens for pings from your cron jobs, plus a web interface.\n","icon":"https://raw.githubusercontent.com/healthchecks/healthchecks/master/static/img/welcome.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/healthchecks"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-healthchecks"}],"containers":[{"name":"healthchecks","image":"linuxserver/healthchecks","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Database and healthchecks config directory","key":"config"}],"ports":[{"container":"8000","description":"Healthchecks Web UI"}]}],"_id":"content:apps:healthchecks.json","_type":"json","title":"Healthchecks","_source":"content","_file":"apps/healthchecks.json","_extension":"json"},{"_path":"/apps/hedgedoc","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"hedgedoc","name":"hedgedoc","description":"[HedgeDoc]({{ project_url }}) gives you access to all your files wherever you are.\n\nHedgeDoc is a real-time, multi-platform collaborative markdown note editor.  This means that you can write notes with other people on your desktop, tablet or even on the phone.  You can sign-in via multiple auth providers like Facebook, Twitter, GitHub and many more on the homepage.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hedgedoc-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/hedgedoc"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-hedgedoc"}],"containers":[{"name":"hedgedoc","image":"linuxserver/hedgedoc","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"HedgeDoc config and configurable files","key":"config"}],"ports":[{"container":"3000","description":"Web gui port (internal port also needs to be changed if accessing at port other than 80, 443 and 3000)."}]}],"_id":"content:apps:hedgedoc.json","_type":"json","title":"Hedgedoc","_source":"content","_file":"apps/hedgedoc.json","_extension":"json"},{"_path":"/apps/heimdall","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"heimdall","name":"heimdall","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a way to organise all those links to your most used web sites and web applications in a simple way.\n\nSimplicity is the key to Heimdall.\n\nWhy not use it as your browser start page? It even has the ability to include a search bar using either Google, Bing or DuckDuckGo.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/heimdall-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/heimdall"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-heimdall"}],"containers":[{"name":"heimdall","image":"linuxserver/heimdall","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"80","description":"http gui"},{"container":"443","description":"https gui"}]}],"_id":"content:apps:heimdall.json","_type":"json","title":"Heimdall","_source":"content","_file":"apps/heimdall.json","_extension":"json"},{"_path":"/apps/homeassistant","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"homeassistant","name":"homeassistant","description":"[Home Assistant Core]({{ project_url }}) - Open source home automation that puts local control and privacy first. Powered by a worldwide community of tinkerers and DIY enthusiasts. Perfect to run on a Raspberry Pi or a local server. \n","icon":"https://github.com/home-assistant/home-assistant.io/raw/next/source/images/favicon-192x192-full.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/homeassistant"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-homeassistant"}],"containers":[{"name":"homeassistant","image":"linuxserver/homeassistant","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Home Assistant config storage path.","key":"config"}]}],"_id":"content:apps:homeassistant.json","_type":"json","title":"Homeassistant","_source":"content","_file":"apps/homeassistant.json","_extension":"json"},{"_path":"/apps/homer","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"homer","name":"Homer","icon":"https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/homer.png","links":[{"type":"docker","url":"https://hub.docker.com/r/b4bz/homer"},{"type":"github","url":"https://github.com/bastienwirtz/homer"}],"containers":[{"name":"budge","image":"b4bz/homer","env":[{"id":"INIT_ASSETS","description":"Generate default assets","default":"1"}],"volumes":[{"container":"/www/assets","description":"Assets folder","key":"config"}],"ports":[{"key":"webui","container":8080,"description":"WebUI port","protocol":"tcp","web":true}]}],"_id":"content:apps:homer.json","_type":"json","title":"Homer","_source":"content","_file":"apps/homer.json","_extension":"json"},{"_path":"/apps/htpcmanager","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"htpcmanager","name":"htpcmanager","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a front end for many htpc related applications.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/htpcmanager-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/htpcmanager"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-htpcmanager"}],"containers":[{"name":"htpcmanager","image":"linuxserver/htpcmanager","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configuration files.","key":"config"}],"ports":[{"container":"8085","description":"Application WebUI"}]}],"_id":"content:apps:htpcmanager.json","_type":"json","title":"Htpcmanager","_source":"content","_file":"apps/htpcmanager.json","_extension":"json"},{"_path":"/apps/ipfs","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"ipfs","name":"ipfs","description":"[{{ project_name|capitalize }}]({{ project_url }}) - A peer-to-peer hypermedia protocol designed to make the web faster, safer, and more open.\n","icon":"https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Ipfs-logo-1024-ice-text.png/480px-Ipfs-logo-1024-ice-text.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/ipfs"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-ipfs"}],"containers":[{"name":"ipfs","image":"linuxserver/ipfs","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"IPFS storage and config files/logs","key":"config"}],"ports":[{"container":"80","description":"The port for the IPFS web UI"},{"container":"4001","description":"Peering port, this is the only port you should expose to the internet"},{"container":"5001","description":"API port, the clientside webUI needs to be able to talk to this from whatever machine your web browser is on"},{"container":"8080","description":"Gateway Port, actually serves IPFS content"}]}],"_id":"content:apps:ipfs.json","_type":"json","title":"Ipfs","_source":"content","_file":"apps/ipfs.json","_extension":"json"},{"_path":"/apps/jackett","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"jackett","name":"jackett","description":"[{{ project_name|capitalize }}]({{ project_url }}) works as a proxy server: it translates queries from apps (Sonarr, SickRage, CouchPotato, Mylar, etc) into tracker-site-specific http queries, parses the html response, then sends results back to the requesting software. This allows for getting recent uploads (like RSS) and performing searches. Jackett is a single repository of maintained indexer scraping & translation logic - removing the burden from other apps.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/jackett-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/jackett"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-jackett"}],"containers":[{"name":"jackett","image":"linuxserver/jackett","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where Jackett should store its config file.","key":"config"},{"container":"/downloads","description":"Path to torrent blackhole."}],"ports":[{"container":"9117","description":"WebUI"}]}],"_id":"content:apps:jackett.json","_type":"json","title":"Jackett","_source":"content","_file":"apps/jackett.json","_extension":"json"},{"_path":"/apps/jellyfin","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"jellyfin","name":"jellyfin","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps. Jellyfin is descended from Emby's 3.5.2 release and ported to the .NET Core framework to enable full cross-platform support. There are no strings attached, no premium licenses or features, and no hidden agendas: just a team who want to build something better and work together to achieve it.","icon":"https://raw.githubusercontent.com/jellyfin/jellyfin-ux/master/branding/SVG/banner-logo-solid.svg?sanitize=true","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/jellyfin"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-jellyfin"}],"containers":[{"name":"jellyfin","image":"linuxserver/jellyfin","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Jellyfin data storage location. *This can grow very large, 50gb+ is likely for a large collection.*","key":"config"},{"container":"/data/tvshows","description":"Media goes here. Add as many as needed e.g. `/data/movies`, `/data/tv`, etc."},{"container":"/data/movies","description":"Media goes here. Add as many as needed e.g. `/data/movies`, `/data/tv`, etc."}],"ports":[{"container":"8096","description":"Http webUI."}]}],"_id":"content:apps:jellyfin.json","_type":"json","title":"Jellyfin","_source":"content","_file":"apps/jellyfin.json","_extension":"json"},{"_path":"/apps/jenkins-builder","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"jenkins-builder","name":"jenkins-builder","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/jenkins-builder"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-jenkins-builder"}],"containers":[{"name":"jenkins-builder","image":"linuxserver/jenkins-builder","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}]}],"_id":"content:apps:jenkins-builder.json","_type":"json","title":"Jenkins Builder","_source":"content","_file":"apps/jenkins-builder.json","_extension":"json"},{"_path":"/apps/kasm","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"kasm","name":"kasm","description":"[{{ project_name|capitalize }}]({{ project_url }}) Workspaces is a docker container streaming platform for delivering browser-based access to desktops, applications, and web services. Kasm uses devops-enabled Containerized Desktop Infrastructure (CDI) to create on-demand, disposable, docker containers that are accessible via web browser. Example use-cases include Remote Browser Isolation (RBI), Data Loss Prevention (DLP), Desktop as a Service (DaaS), Secure Remote Access Services (RAS), and Open Source Intelligence (OSINT) collections.\n\nThe rendering of the graphical-based containers is powered by the open-source project [KasmVNC](https://www.kasmweb.com/kasmvnc.html?utm_campaign=LinuxServer&utm_source=kasmvnc).\n","icon":"https://kasm-ci.s3.amazonaws.com/kasm_wide.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/kasm"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-kasm"}],"containers":[{"name":"kasm","image":"linuxserver/kasm","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/opt","description":"Docker and installation storage."}],"ports":[{"container":"3000","description":"Kasm Installation wizard. (https)"},{"container":"443","description":"Kasm Workspaces interface. (https)"}]}],"_id":"content:apps:kasm.json","_type":"json","title":"Kasm","_source":"content","_file":"apps/kasm.json","_extension":"json"},{"_path":"/apps/kdenlive","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"kdenlive","name":"kdenlive","description":"[Kdenlive]({{ project_url }}) is a powerful free and open source cross-platform video editing program made by the KDE community. Feature rich and production ready.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kdenlive-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/kdenlive"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-kdenlive"}],"containers":[{"name":"kdenlive","image":"linuxserver/kdenlive","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores local files and settings","key":"config"}],"ports":[{"container":"3000","description":"Kdenlive desktop gui"}]}],"_id":"content:apps:kdenlive.json","_type":"json","title":"Kdenlive","_source":"content","_file":"apps/kdenlive.json","_extension":"json"},{"_path":"/apps/lazylibrarian","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"lazylibrarian","name":"lazylibrarian","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a program to follow authors and grab metadata for all your digital reading needs. It uses a combination of Goodreads Librarything and optionally GoogleBooks as sources for author info and book info.  This container is based on the DobyTang fork.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lazylibrarian-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/lazylibrarian"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-lazylibrarian"}],"containers":[{"name":"lazylibrarian","image":"linuxserver/lazylibrarian","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"LazyLibrarian config","key":"config"},{"container":"/downloads","description":"Download location"}],"ports":[{"container":"5299","description":"The port for the LazyLibrarian webinterface"}]}],"_id":"content:apps:lazylibrarian.json","_type":"json","title":"Lazylibrarian","_source":"content","_file":"apps/lazylibrarian.json","_extension":"json"},{"_path":"/apps/ldap-auth","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"ldap-auth","name":"ldap-auth","description":"[{{ project_name|capitalize }}]({{ project_url }}) software is for authenticating users who request protected resources from servers proxied by nginx. It includes a daemon (ldap-auth) that communicates with an authentication server, and a webserver daemon that generates an authentication cookie based on the user’s credentials. The daemons are written in Python for use with a Lightweight Directory Access Protocol (LDAP) authentication server (OpenLDAP or Microsoft Windows Active Directory 2003 and 2012).","icon":"https://jumpcloud.com/wp-content/uploads/2016/12/LDAP_Logo-1420591101.jpg","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/ldap-auth"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-ldap-auth"}],"containers":[{"name":"ldap-auth","image":"linuxserver/ldap-auth","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"ports":[{"container":"8888","description":"the port for ldap auth daemon"},{"container":"9000","description":"the port for ldap login page"}]}],"_id":"content:apps:ldap-auth.json","_type":"json","title":"Ldap Auth","_source":"content","_file":"apps/ldap-auth.json","_extension":"json"},{"_path":"/apps/libreoffice","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"libreoffice","name":"libreoffice","description":"[LibreOffice]({{ project_url }}) is a free and powerful office suite, and a successor to OpenOffice.org (commonly known as OpenOffice). Its clean interface and feature-rich tools help you unleash your creativity and enhance your productivity.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/libreoffice-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/libreoffice"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-libreoffice"}],"containers":[{"name":"libreoffice","image":"linuxserver/libreoffice","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores program settings and documents","key":"config"}],"ports":[{"container":"3000","description":"LibreOffice desktop gui."}]}],"_id":"content:apps:libreoffice.json","_type":"json","title":"Libreoffice","_source":"content","_file":"apps/libreoffice.json","_extension":"json"},{"_path":"/apps/librespeed","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"librespeed","name":"librespeed","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a very lightweight Speedtest implemented in Javascript, using XMLHttpRequest and Web Workers.\n\nNo Flash, No Java, No Websocket, No Bullshit.\n","icon":"https://raw.githubusercontent.com/librespeed/speedtest/master/.logo/logo3.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/librespeed"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-librespeed"}],"containers":[{"name":"librespeed","image":"linuxserver/librespeed","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"80","description":"web gui"}]}],"_id":"content:apps:librespeed.json","_type":"json","title":"Librespeed","_source":"content","_file":"apps/librespeed.json","_extension":"json"},{"_path":"/apps/lidarr","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"lidarr","name":"lidarr","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a music collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new tracks from your favorite artists and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.","icon":"https://github.com/lidarr/Lidarr/raw/develop/Logo/400.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/lidarr"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-lidarr"}],"containers":[{"name":"lidarr","image":"linuxserver/lidarr","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configuration files for Lidarr.","key":"config"}],"ports":[{"container":"8686","description":"Application WebUI"}]}],"_id":"content:apps:lidarr.json","_type":"json","title":"Lidarr","_source":"content","_file":"apps/lidarr.json","_extension":"json"},{"_path":"/apps/limnoria","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"limnoria","name":"limnoria","description":"[{{ project_name|capitalize }}]({{ project_url }}) A robust, full-featured, and user/programmer-friendly Python IRC bot, with many existing plugins. Successor of the well-known Supybot.","icon":"https://raw.githubusercontent.com/linuxserver/docker-limnoria/master/logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/limnoria"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-limnoria"}],"containers":[{"name":"limnoria","image":"linuxserver/limnoria","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where Limnoria config is stored.","key":"config"}],"ports":[{"container":"8080","description":"Port for Limnoria's web interface."}]}],"_id":"content:apps:limnoria.json","_type":"json","title":"Limnoria","_source":"content","_file":"apps/limnoria.json","_extension":"json"},{"_path":"/apps/lychee","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"lychee","name":"lychee","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a free photo-management tool, which runs on your server or web-space. Installing is a matter of seconds. Upload, manage and share photos like from a native application. Lychee comes with everything you need and all your photos are stored securely.\"\n\n### UPGRADE WARNING\n\nPlease note that the v4 upgrade process resets ALL password-protected albums. Any albums that were made public with a password will need to be re-secured.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lychee-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/lychee"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-lychee"}],"containers":[{"name":"lychee","image":"linuxserver/lychee","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"},{"container":"/pictures","description":"Where lychee will store uploaded data."}],"ports":[{"container":"80","description":"http gui"}]}],"_id":"content:apps:lychee.json","_type":"json","title":"Lychee","_source":"content","_file":"apps/lychee.json","_extension":"json"},{"_path":"/apps/mariadb","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"mariadb","name":"mariadb","description":"[{{ project_name|capitalize }}]({{ project_url }}) is one of the most popular database servers. Made by the original developers of MySQL.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mariadb-git.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/mariadb"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-mariadb"}],"containers":[{"name":"mariadb","image":"linuxserver/mariadb","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains the db itself and all assorted settings.","key":"config"}],"ports":[{"container":"3306","description":"Mariadb listens on this port."}]}],"_id":"content:apps:mariadb.json","_type":"json","title":"Mariadb","_source":"content","_file":"apps/mariadb.json","_extension":"json"},{"_path":"/apps/mastodon","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"mastodon","name":"mastodon","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a free, open-source social network server based on ActivityPub where users can follow friends and discover new ones..\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mastodon-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/mastodon"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-mastodon"}],"containers":[{"name":"mastodon","image":"linuxserver/mastodon","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"80","description":"Port for web frontend"},{"container":"443","description":"Port for web frontend"}]}],"_id":"content:apps:mastodon.json","_type":"json","title":"Mastodon","_source":"content","_file":"apps/mastodon.json","_extension":"json"},{"_path":"/apps/medusa","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"medusa","name":"medusa","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/medusa-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/medusa"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-medusa"}],"containers":[{"name":"medusa","image":"linuxserver/medusa","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Medusa config","key":"config"},{"container":"/downloads","description":"Download location"},{"container":"/tv","description":"TV Shows location"}],"ports":[{"container":"8081","description":"The port for the Medusa webui"}]}],"_id":"content:apps:medusa.json","_type":"json","title":"Medusa","_source":"content","_file":"apps/medusa.json","_extension":"json"},{"_path":"/apps/minetest","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"minetest","name":"minetest","description":"[{{ project_name|capitalize }}]({{ project_url }}) (server) is a near-infinite-world block sandbox game and a game engine, inspired by InfiniMiner, Minecraft, and the like.","icon":"https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/minetest-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/minetest"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-minetest"}],"containers":[{"name":"minetest","image":"linuxserver/minetest","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config/.minetest","description":"Where minetest stores config files and maps etc."}],"ports":[{"container":"30000/udp","description":"Port Minetest listens on."}]}],"_id":"content:apps:minetest.json","_type":"json","title":"Minetest","_source":"content","_file":"apps/minetest.json","_extension":"json"},{"_path":"/apps/minisatip","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"minisatip","name":"minisatip","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a multi-threaded satip server version 1.2 that runs under Linux and it was tested with DVB-S, DVB-S2, DVB-T, DVB-T2, DVB-C, DVB-C2, ATSC and ISDB-T cards.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/minisatip-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/minisatip"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-minisatip"}],"containers":[{"name":"minisatip","image":"linuxserver/minisatip","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configuration files and minisatip data","key":"config"}],"ports":[{"container":"8875","description":"Status Page WebUI"},{"container":"554","description":"RTSP Port"},{"container":"1900/udp","description":"App Discovery"}]}],"_id":"content:apps:minisatip.json","_type":"json","title":"Minisatip","_source":"content","_file":"apps/minisatip.json","_extension":"json"},{"_path":"/apps/mods","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"mods","name":"mods","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/mods"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-mods"}],"containers":[{"name":"mods","image":"linuxserver/mods","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}]}],"_id":"content:apps:mods.json","_type":"json","title":"Mods","_source":"content","_file":"apps/mods.json","_extension":"json"},{"_path":"/apps/mstream","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"mstream","name":"mstream","description":"[{{ project_name }}]({{ project_url }}) is a personal music streaming server. You can use mStream to stream your music from your home computer to any device, anywhere.  There are mobile apps available for both Android and iPhone.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mstream-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/mstream"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-mstream"}],"containers":[{"name":"mstream","image":"linuxserver/mstream","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"mStream config","key":"config"},{"container":"/music","description":"Music location"}],"ports":[{"container":"3000","description":"The port for the mStream webinterface"}]}],"_id":"content:apps:mstream.json","_type":"json","title":"Mstream","_source":"content","_file":"apps/mstream.json","_extension":"json"},{"_path":"/apps/mylar3","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"mylar3","name":"mylar3","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an automated Comic Book downloader (cbr/cbz) for use with NZB and torrents written in python. It supports SABnzbd, NZBGET, and many torrent clients in addition to DDL.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mylar-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/mylar3"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-mylar3"}],"containers":[{"name":"mylar3","image":"linuxserver/mylar3","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where mylar should store config files.","key":"config"},{"container":"/comics","description":"Map to your comics folder."},{"container":"/downloads","description":"Map to your downloads folder."}],"ports":[{"container":"8090","description":"WebUI"}]}],"_id":"content:apps:mylar3.json","_type":"json","title":"Mylar3","_source":"content","_file":"apps/mylar3.json","_extension":"json"},{"_path":"/apps/mysql-workbench","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"mysql-workbench","name":"mysql-workbench","description":"[MySQL Workbench]({{ project_url }}) is a unified visual tool for database architects, developers, and DBAs. MySQL Workbench provides data modeling, SQL development, and comprehensive administration tools for server configuration, user administration, backup, and much more.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mysql-workbench-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/mysql-workbench"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-mysql-workbench"}],"containers":[{"name":"mysql-workbench","image":"linuxserver/mysql-workbench","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores program settings.","key":"config"}],"ports":[{"container":"3000","description":"Mysql Workbench desktop gui."}]}],"_id":"content:apps:mysql-workbench.json","_type":"json","title":"Mysql Workbench","_source":"content","_file":"apps/mysql-workbench.json","_extension":"json"},{"_path":"/apps/nano-wallet","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"nano-wallet","name":"nano-wallet","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a digital payment protocol designed to be accessible and lightweight, with a focus on removing inefficiencies present in other cryptocurrencies. With ultrafast transactions and zero fees on a secure, green and decentralized network, this makes Nano ideal for everyday transactions.\n\nThis container is a simple nginx wrapper for the light wallet located [here](https://github.com/linuxserver/nano-wallet). You will need to pass a valid RPC host when accessing this container.\n","icon":"https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Nano_logo.png/640px-Nano_logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/nano-wallet"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-nano-wallet"}],"containers":[{"name":"nano-wallet","image":"linuxserver/nano-wallet","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"ports":[{"container":"80","description":"Webserver port"}]}],"_id":"content:apps:nano-wallet.json","_type":"json","title":"Nano Wallet","_source":"content","_file":"apps/nano-wallet.json","_extension":"json"},{"_path":"/apps/nano","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"nano","name":"nano","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a digital payment protocol designed to be accessible and lightweight, with a focus on removing inefficiencies present in other cryptocurrencies. With ultrafast transactions and zero fees on a secure, green and decentralized network, this makes Nano ideal for everyday transactions.\n","icon":"https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Nano_logo.png/640px-Nano_logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/nano"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-nano"}],"containers":[{"name":"nano","image":"linuxserver/nano","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Main storage for config and blockchain","key":"config"}],"ports":[{"container":"8075","description":"Nano communication port"},{"container":"3000","description":"RPC interface filtered through a proxy"},{"container":"3001","description":"Https RPC interface filtered through a proxy"}]}],"_id":"content:apps:nano.json","_type":"json","title":"Nano","_source":"content","_file":"apps/nano.json","_extension":"json"},{"_path":"/apps/netbootxyz","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"netbootxyz","name":"netbootxyz","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a way to PXE boot various operating system installers or utilities from one place within the BIOS without the need of having to go retrieve the media to run the tool. iPXE is used to provide a user friendly menu from within the BIOS that lets you easily choose the operating system you want along with any specific types of versions or bootable flags.","icon":"https://netboot.xyz/images/netboot.xyz.gif","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/netbootxyz"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-netbootxyz"}],"containers":[{"name":"netbootxyz","image":"linuxserver/netbootxyz","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Storage for boot menu files and web application config","key":"config"}],"ports":[{"container":"3000","description":"Web configuration interface."},{"container":"69/udp","description":"TFTP Port."}]}],"_id":"content:apps:netbootxyz.json","_type":"json","title":"Netbootxyz","_source":"content","_file":"apps/netbootxyz.json","_extension":"json"},{"_path":"/apps/netbox","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"netbox","name":"netbox","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an IP address management (IPAM) and data center infrastructure management (DCIM) tool. Initially conceived by the network engineering team at DigitalOcean, NetBox was developed specifically to address the needs of network and infrastructure engineers. It is intended to function as a domain-specific source of truth for network operations.\n","icon":"https://raw.githubusercontent.com/netbox-community/netbox/develop/docs/netbox_logo.svg","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/netbox"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-netbox"}],"containers":[{"name":"netbox","image":"linuxserver/netbox","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"config directory volume mapping","key":"config"}],"ports":[{"container":"8000","description":"will map the container's port 8000 to port 8000 on the host"}]}],"_id":"content:apps:netbox.json","_type":"json","title":"Netbox","_source":"content","_file":"apps/netbox.json","_extension":"json"},{"_path":"/apps/nextcloud","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"nextcloud","name":"nextcloud","description":"[{{ project_name|capitalize }}]({{ project_url }}) gives you access to all your files wherever you are.\n\nWhere are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices. Through Nextcloud you also access, sync and share your existing data on that FTP drive at the office, a Dropbox or a NAS you have at home.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nextcloud-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/nextcloud"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-nextcloud"}],"containers":[{"name":"nextcloud","image":"linuxserver/nextcloud","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Nextcloud configs.","key":"config"},{"container":"/data","description":"Your personal data."}],"ports":[{"container":"443","description":"WebUI"}]}],"_id":"content:apps:nextcloud.json","_type":"json","title":"Nextcloud","_source":"content","_file":"apps/nextcloud.json","_extension":"json"},{"_path":"/apps/nginx","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"nginx","name":"nginx","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a simple webserver with php support. The config files reside in `/config` for easy user customization.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nginx-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/nginx"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-nginx"}],"containers":[{"name":"nginx","image":"linuxserver/nginx","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains your www content and all relevant configuration files.","key":"config"}],"ports":[{"container":"80","description":"http"},{"container":"443","description":"https"}]}],"_id":"content:apps:nginx.json","_type":"json","title":"Nginx","_source":"content","_file":"apps/nginx.json","_extension":"json"},{"_path":"/apps/ngircd","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"ngircd","name":"ngircd","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a free, portable and lightweight Internet Relay Chat server for small or private networks, developed under the GNU General Public License (GPL). It is easy to configure, can cope with dynamic IP addresses, and supports IPv6, SSL-protected connections as well as PAM for authentication. It is written from scratch and not based on the original IRCd.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ngircd-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/ngircd"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-ngircd"}],"containers":[{"name":"ngircd","image":"linuxserver/ngircd","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where `ngircd.conf` is stored","key":"config"}],"ports":[{"container":"6667","description":"ngircd port"}]}],"_id":"content:apps:ngircd.json","_type":"json","title":"Ngircd","_source":"content","_file":"apps/ngircd.json","_extension":"json"},{"_path":"/apps/nntp2nntp","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"nntp2nntp","name":"nntp2nntp","description":"[{{ project_name|capitalize }}]({{ project_url }}) proxy allow you to use your NNTP Account from multiple systems, each with own user name and password. It fully supports SSL and you can also limit the access to proxy with SSL certificates. nntp2nntp proxy is very simple and pretty fast.\n## Warning\n\nWhilst we know of no nntp2nntp security issues the [upstream code](https://github.com/linuxserver/nntp2nntp) for this project has received no changes since 06.08.15 and is likely abandoned permanently.  For this reason we strongly recommend you do not make this application public facing and if you must do so other layers of security and SSL should be considered an absolute bare minimum requirement.  We see this proxy being used primarily on a LAN so that all the users NNTP applications can share a common set of internal credentials allowing for central managment of the upstream account e.g change provider, server, thread limits for all applications with one global config change.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nntp2nntp.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/nntp2nntp"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-nntp2nntp"}],"containers":[{"name":"nntp2nntp","image":"linuxserver/nntp2nntp","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"this will store config on the docker host","key":"config"}],"ports":[{"container":"1563","description":"will map the container's port 1563 to port 1563 on the host"}]}],"_id":"content:apps:nntp2nntp.json","_type":"json","title":"Nntp2nntp","_source":"content","_file":"apps/nntp2nntp.json","_extension":"json"},{"_path":"/apps/nzbget","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"nzbget","name":"nzbget","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a usenet downloader, written in C++ and designed with performance in mind to achieve maximum download speed by using very little system resources.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nzbget-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/nzbget"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-nzbget"}],"containers":[{"name":"nzbget","image":"linuxserver/nzbget","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"NZBGet App data.","key":"config"}],"ports":[{"container":"6789","description":"WebUI"}]}],"_id":"content:apps:nzbget.json","_type":"json","title":"Nzbget","_source":"content","_file":"apps/nzbget.json","_extension":"json"},{"_path":"/apps/nzbhydra2","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"nzbhydra2","name":"nzbhydra2","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a meta search application for NZB indexers, the \"spiritual successor\" to NZBmegasearcH, and an evolution of the original application [NZBHydra](https://github.com/theotherp/nzbhydra).\n\nIt provides easy access to a number of raw and newznab based indexers. The application NZBHydra 2 is replacing NZBHydra 1 and supports migrating from V1. Be wary that there may be some compatibility issues for those migrating from V1 to V2, so ensure you back up your old configuration before moving over to the new version. **NOTE:** The last version that supports migration is `linuxserver/nzbhydra2:v2.10.2-ls49`\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hydra-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/nzbhydra2"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-nzbhydra2"}],"containers":[{"name":"nzbhydra2","image":"linuxserver/nzbhydra2","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where nzbhydra2 should store config files.","key":"config"},{"container":"/downloads","description":"NZB download folder."}],"ports":[{"container":"5076","description":"WebUI"}]}],"_id":"content:apps:nzbhydra2.json","_type":"json","title":"Nzbhydra2","_source":"content","_file":"apps/nzbhydra2.json","_extension":"json"},{"_path":"/apps/ombi","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"ombi","name":"ombi","description":"[{{ project_name|capitalize }}]({{ project_url }}) allows you to host your own Plex Request and user management system.\nIf you are sharing your Plex server with other users, allow them to request new content using an easy to manage interface!\nManage all your requests for Movies and TV with ease, leave notes for the user and get notification when a user requests something.\nAllow your users to post issues against their requests so you know there is a problem with the audio etc.\nEven automatically send them weekly newsletters of new content that has been added to your Plex server!","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ombi.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/ombi"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-ombi"}],"containers":[{"name":"ombi","image":"linuxserver/ombi","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"3579","description":"web gui"}]}],"_id":"content:apps:ombi.json","_type":"json","title":"Ombi","_source":"content","_file":"apps/ombi.json","_extension":"json"},{"_path":"/apps/openssh-server","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"openssh-server","name":"openssh-server","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a sandboxed environment that allows ssh access without giving keys to the entire server.\nGiving ssh access via private key often means giving full access to the server. This container creates a limited and sandboxed environment that others can ssh into.\nThe users only have access to the folders mapped and the processes running inside this container.","icon":"https://upload.wikimedia.org/wikipedia/en/6/65/OpenSSH_logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/openssh-server"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-openssh-server"}],"containers":[{"name":"openssh-server","image":"linuxserver/openssh-server","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"2222","description":"ssh port"}]}],"_id":"content:apps:openssh-server.json","_type":"json","title":"Openssh Server","_source":"content","_file":"apps/openssh-server.json","_extension":"json"},{"_path":"/apps/openvscode-server","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"openvscode-server","name":"openvscode-server","description":"[{{ project_name|capitalize }}]({{ project_url }}) provides a version of VS Code that runs a server on a remote machine and allows access through a modern web browser.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/openvscode-server-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/openvscode-server"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-openvscode-server"}],"containers":[{"name":"openvscode-server","image":"linuxserver/openvscode-server","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"3000","description":"Web UI port."}]}],"_id":"content:apps:openvscode-server.json","_type":"json","title":"Openvscode Server","_source":"content","_file":"apps/openvscode-server.json","_extension":"json"},{"_path":"/apps/oscam","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"oscam","name":"oscam","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an Open Source Conditional Access Module software used for descrambling DVB transmissions using smart cards. It's both a server and a client.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/oscam-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/oscam"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-oscam"}],"containers":[{"name":"oscam","image":"linuxserver/oscam","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where oscam should store config files and logs.","key":"config"}],"ports":[{"container":"8888","description":"WebUI"}]}],"_id":"content:apps:oscam.json","_type":"json","title":"Oscam","_source":"content","_file":"apps/oscam.json","_extension":"json"},{"_path":"/apps/overseerr","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"overseerr","name":"overseerr","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a request management and media discovery tool built to work with your existing Plex ecosystem.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/overseerr.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/overseerr"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-overseerr"}],"containers":[{"name":"overseerr","image":"linuxserver/overseerr","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"5055","description":"Port for Overseerr's web interface."}]}],"_id":"content:apps:overseerr.json","_type":"json","title":"Overseerr","_source":"content","_file":"apps/overseerr.json","_extension":"json"},{"_path":"/apps/papermerge","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"papermerge","name":"papermerge","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an open source document management system (DMS) primarily designed for archiving and retrieving your digital documents. Instead of having piles of paper documents all over your desk, office or drawers - you can quickly scan them and configure your scanner to directly upload to Papermerge DMS.\"\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/papermerge-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/papermerge"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-papermerge"}],"containers":[{"name":"papermerge","image":"linuxserver/papermerge","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"},{"container":"/data","description":"Storage location for all papermerge data files."}],"ports":[{"container":"8000","description":"http gui"}]}],"_id":"content:apps:papermerge.json","_type":"json","title":"Papermerge","_source":"content","_file":"apps/papermerge.json","_extension":"json"},{"_path":"/apps/phpmyadmin","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"phpmyadmin","name":"phpmyadmin","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a free software tool written in PHP, intended to handle the administration of MySQL over the Web. phpMyAdmin supports a wide range of operations on MySQL and MariaDB.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/phpmyadmin-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/phpmyadmin"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-phpmyadmin"}],"containers":[{"name":"phpmyadmin","image":"linuxserver/phpmyadmin","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"80","description":"Port for web frontend"}]}],"_id":"content:apps:phpmyadmin.json","_type":"json","title":"Phpmyadmin","_source":"content","_file":"apps/phpmyadmin.json","_extension":"json"},{"_path":"/apps/pidgin","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"pidgin","name":"pidgin","description":"[Pidgin]({{ project_url }}) is a chat program which lets you log into accounts on multiple chat networks simultaneously. This means that you can be chatting with friends on XMPP and sitting in an IRC channel at the same time.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pidgin-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/pidgin"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-pidgin"}],"containers":[{"name":"pidgin","image":"linuxserver/pidgin","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores local files and settings","key":"config"}],"ports":[{"container":"3000","description":"Pidgin desktop gui."}]}],"_id":"content:apps:pidgin.json","_type":"json","title":"Pidgin","_source":"content","_file":"apps/pidgin.json","_extension":"json"},{"_path":"/apps/piwigo","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"piwigo","name":"piwigo","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a photo gallery software for the web that comes with powerful features to publish and manage your collection of pictures.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/piwigo-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/piwigo"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-piwigo"}],"containers":[{"name":"piwigo","image":"linuxserver/piwigo","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configuration files.","key":"config"},{"container":"/gallery","description":"Image storage for Piwigo"}],"ports":[{"container":"80","description":"Application WebUI"}]}],"_id":"content:apps:piwigo.json","_type":"json","title":"Piwigo","_source":"content","_file":"apps/piwigo.json","_extension":"json"},{"_path":"/apps/plex-meta-manager","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"plex-meta-manager","name":"plex-meta-manager","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a Python 3 script that can be continuously run using YAML configuration files to update on a schedule the metadata of the movies, shows, and collections in your libraries as well as automatically build collections based on various methods all detailed in the wiki.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/plex-meta-manager-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/plex-meta-manager"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-plex-meta-manager"}],"containers":[{"name":"plex-meta-manager","image":"linuxserver/plex-meta-manager","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Local path for plex-meta-manager config files.","key":"config"}]}],"_id":"content:apps:plex-meta-manager.json","_type":"json","title":"Plex Meta Manager","_source":"content","_file":"apps/plex-meta-manager.json","_extension":"json"},{"_path":"/apps/plex","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"plex","name":"plex","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/plex"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-plex"}],"containers":[{"name":"plex","image":"linuxserver/plex","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}]}],"_id":"content:apps:plex.json","_type":"json","title":"Plex","_source":"content","_file":"apps/plex.json","_extension":"json"},{"_path":"/apps/projectsend","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"projectsend","name":"projectsend","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a self-hosted application that lets you upload files and assign them to specific clients that you create yourself. Secure, private and easy. No more depending on external services or e-mail to send those files.","icon":"http://www.projectsend.org/wp-content/themes/projectsend/img/screenshots.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/projectsend"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-projectsend"}],"containers":[{"name":"projectsend","image":"linuxserver/projectsend","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where to store projectsend config files.","key":"config"},{"container":"/data","description":"Where to store files to share."}],"ports":[{"container":"80","description":"WebUI"}]}],"_id":"content:apps:projectsend.json","_type":"json","title":"Projectsend","_source":"content","_file":"apps/projectsend.json","_extension":"json"},{"_path":"/apps/prowlarr","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"prowlarr","name":"prowlarr","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a indexer manager/proxy built on the popular arr .net/reactjs base stack to integrate with your various PVR apps. Prowlarr supports both Torrent Trackers and Usenet Indexers. It integrates seamlessly with Sonarr, Radarr, Lidarr, and Readarr offering complete management of your indexers with no per app Indexer setup required (we do it all).\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/prowlarr-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/prowlarr"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-prowlarr"}],"containers":[{"name":"prowlarr","image":"linuxserver/prowlarr","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Database and Prowlarr configs","key":"config"}],"ports":[{"container":"9696","description":"The port for the Prowlarr webinterface"}]}],"_id":"content:apps:prowlarr.json","_type":"json","title":"Prowlarr","_source":"content","_file":"apps/prowlarr.json","_extension":"json"},{"_path":"/apps/pwndrop","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"pwndrop","name":"pwndrop","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a self-deployable file hosting service for sending out red teaming payloads or securely sharing your private files over HTTP and WebDAV.","icon":"https://raw.githubusercontent.com/kgretzky/pwndrop/master/media/pwndrop-logo-512.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/pwndrop"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-pwndrop"}],"containers":[{"name":"pwndrop","image":"linuxserver/pwndrop","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration and data.","key":"config"}],"ports":[{"container":"8080","description":"web gui"}]}],"_id":"content:apps:pwndrop.json","_type":"json","title":"Pwndrop","_source":"content","_file":"apps/pwndrop.json","_extension":"json"},{"_path":"/apps/pydio-cells","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"pydio-cells","name":"pydio-cells","description":"[{{ project_name|capitalize }}]({{ project_url }}) is the nextgen file sharing platform for organizations. It is a full rewrite of the Pydio project using the Go language following a micro-service architecture.","icon":"https://raw.githubusercontent.com/wiki/pydio/cells/images/PydioCellsColor.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/pydio-cells"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-pydio-cells"}],"containers":[{"name":"pydio-cells","image":"linuxserver/pydio-cells","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"All the config files reside here.","key":"config"}],"ports":[{"container":"8080","description":"Http port"}]}],"_id":"content:apps:pydio-cells.json","_type":"json","title":"Pydio Cells","_source":"content","_file":"apps/pydio-cells.json","_extension":"json"},{"_path":"/apps/pyload-ng","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"pyload-ng","name":"pyload-ng","description":"[pyLoad]({{ project_url }}) is a Free and Open Source download manager written in Python and designed to be extremely lightweight, easily extensible and fully manageable via web.","icon":"https://pyload.net/img/banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/pyload-ng"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-pyload-ng"}],"containers":[{"name":"pyload-ng","image":"linuxserver/pyload-ng","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"pyLoad Configuration and files database","key":"config"},{"container":"/downloads","description":"Destination of pyLoad downloads"}],"ports":[{"container":"8000","description":"Allows HTTP access to the application"}]}],"_id":"content:apps:pyload-ng.json","_type":"json","title":"Pyload Ng","_source":"content","_file":"apps/pyload-ng.json","_extension":"json"},{"_path":"/apps/pylon","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"pylon","name":"pylon","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a web based integrated development environment built with Node.js as a backend and with a supercharged JavaScript/HTML5 frontend, licensed under GPL version 3. This project originates from Cloud9 v2 project.\n","icon":"https://raw.githubusercontent.com/pylonide/pylon/master/doc/screenshot02.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/pylon"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-pylon"}],"containers":[{"name":"pylon","image":"linuxserver/pylon","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"ports":[{"container":"3131","description":"The port for the Pylon web interface"}]}],"_id":"content:apps:pylon.json","_type":"json","title":"Pylon","_source":"content","_file":"apps/pylon.json","_extension":"json"},{"_path":"/apps/qbittorrent","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"qbittorrent","name":"qbittorrent","description":"The [{{ project_name|capitalize }}]({{ project_url }}) project aims to provide an open-source software alternative to µTorrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.","icon":"https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/qbittorrent-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/qbittorrent"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-qbittorrent"}],"containers":[{"name":"qbittorrent","image":"linuxserver/qbittorrent","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"},{"container":"/downloads","description":"Location of downloads on disk."}],"ports":[{"container":"8080","description":"WebUI"},{"container":"6881","description":"tcp connection port"},{"container":"6881/udp","description":"udp connection port"}]}],"_id":"content:apps:qbittorrent.json","_type":"json","title":"Qbittorrent","_source":"content","_file":"apps/qbittorrent.json","_extension":"json"},{"_path":"/apps/qdirstat","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"qdirstat","name":"qdirstat","description":"[QDirStat]({{ project_url }}) Qt-based directory statistics: KDirStat without any KDE -- from the author of the original KDirStat.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/qdirstat-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/qdirstat"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-qdirstat"}],"containers":[{"name":"qdirstat","image":"linuxserver/qdirstat","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores qdirstat settings and scans.","key":"config"},{"container":"/data","description":"Data you want to analyze disk usage information of."}],"ports":[{"container":"3000","description":"QdirStat desktop gui."}]}],"_id":"content:apps:qdirstat.json","_type":"json","title":"Qdirstat","_source":"content","_file":"apps/qdirstat.json","_extension":"json"},{"_path":"/apps/quassel-core","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"quassel-core","name":"quassel-core","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a modern, cross-platform, distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core.\n\nThis container handles the IRC connection (quasselcore) and requires a desktop client (quasselclient) to be used and configured. It is designed to be always on and will keep your identity present in IRC even when your clients cannot be online. Backlog (history) is downloaded by your client upon reconnection allowing infinite scrollback through time.\n","icon":"http://icons.iconarchive.com/icons/oxygen-icons.org/oxygen/256/Apps-quassel-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/quassel-core"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-quassel-core"}],"containers":[{"name":"quassel-core","image":"linuxserver/quassel-core","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Database and quassel-core configuration storage.","key":"config"}],"ports":[{"container":"4242","description":"The port quassel-core listens for connections on."}]}],"_id":"content:apps:quassel-core.json","_type":"json","title":"Quassel Core","_source":"content","_file":"apps/quassel-core.json","_extension":"json"},{"_path":"/apps/quassel-web","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"quassel-web","name":"quassel-web","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a web client for Quassel.  Note that a Quassel-Core instance is required, we have a container available [here.](https://hub.docker.com/r/linuxserver/quassel-core/) \n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/quassel-web-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/quassel-web"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-quassel-web"}],"containers":[{"name":"quassel-web","image":"linuxserver/quassel-web","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"this will store config on the docker host","key":"config"}],"ports":[{"container":"64443","description":"Quassel-web https webui"}]}],"_id":"content:apps:quassel-web.json","_type":"json","title":"Quassel Web","_source":"content","_file":"apps/quassel-web.json","_extension":"json"},{"_path":"/apps/radarr","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"radarr","name":"radarr","description":"[{{ project_name|capitalize }}]({{ project_url }}) - A fork of Sonarr to work with movies à la Couchpotato.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/radarr.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/radarr"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-radarr"}],"containers":[{"name":"radarr","image":"linuxserver/radarr","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Database and Radarr configs","key":"config"}],"ports":[{"container":"7878","description":"The port for the Radarr webinterface"}]}],"_id":"content:apps:radarr.json","_type":"json","title":"Radarr","_source":"content","_file":"apps/radarr.json","_extension":"json"},{"_path":"/apps/raneto","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"raneto","name":"raneto","description":"[{{ project_name|capitalize }}]({{ project_url }}) - is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase.","icon":"https://raw.githubusercontent.com/gilbitron/Raneto/master/logo/logo_readme.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/raneto"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-raneto"}],"containers":[{"name":"raneto","image":"linuxserver/raneto","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Raneto config and Markdown files","key":"config"}],"ports":[{"container":"3000","description":"The port for the Raneto web interface"}]}],"_id":"content:apps:raneto.json","_type":"json","title":"Raneto","_source":"content","_file":"apps/raneto.json","_extension":"json"},{"_path":"/apps/rdesktop","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"rdesktop","name":"rdesktop","description":"[{{ project_name|capitalize }}]({{ project_url }}) - Containers containing full desktop environments in many popular flavors for Alpine, Ubuntu, Arch, and Fedora accessible via RDP.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rdesktop.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/rdesktop"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-rdesktop"}],"containers":[{"name":"rdesktop","image":"linuxserver/rdesktop","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"ports":[{"container":"3389","description":"RDP access port"}]}],"_id":"content:apps:rdesktop.json","_type":"json","title":"Rdesktop","_source":"content","_file":"apps/rdesktop.json","_extension":"json"},{"_path":"/apps/readarr","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"readarr","name":"readarr","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/readarr"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-readarr"}],"containers":[{"name":"readarr","image":"linuxserver/readarr","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}]}],"_id":"content:apps:readarr.json","_type":"json","title":"Readarr","_source":"content","_file":"apps/readarr.json","_extension":"json"},{"_path":"/apps/remmina","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"remmina","name":"remmina","description":"[Remmina]({{ project_url }}) is a remote desktop client written in GTK, aiming to be useful for system administrators and travellers, who need to work with lots of remote computers in front of either large or tiny screens. Remmina supports multiple network protocols, in an integrated and consistent user interface. Currently RDP, VNC, SPICE, NX, XDMCP, SSH and EXEC are supported.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/remmina-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/remmina"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-remmina"}],"containers":[{"name":"remmina","image":"linuxserver/remmina","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores program settings.","key":"config"}],"ports":[{"container":"3000","description":"Remmina desktop gui."}]}],"_id":"content:apps:remmina.json","_type":"json","title":"Remmina","_source":"content","_file":"apps/remmina.json","_extension":"json"},{"_path":"/apps/requestrr","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"requestrr","name":"requestrr","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a chatbot used to simplify using services like Sonarr/Radarr/Ombi via the use of chat.","icon":"https://github.com/darkalfx/requestrr/raw/master/Logos/requestrr_discord_Icon_512.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/requestrr"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-requestrr"}],"containers":[{"name":"requestrr","image":"linuxserver/requestrr","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"4545","description":"web gui"}]}],"_id":"content:apps:requestrr.json","_type":"json","title":"Requestrr","_source":"content","_file":"apps/requestrr.json","_extension":"json"},{"_path":"/apps/resilio-sync","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"resilio-sync","name":"resilio-sync","description":"[{{ project_name|capitalize }}]({{ project_url }}) (formerly BitTorrent Sync) uses the BitTorrent protocol to sync files and folders between all of your devices. There are both free and paid versions, this container supports both. There is an official sync image but we created this one as it supports user mapping to simplify permissions for volumes.","icon":"https://www.resilio.com/img/individual/freeproduct.jpg","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/resilio-sync"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-resilio-sync"}],"containers":[{"name":"resilio-sync","image":"linuxserver/resilio-sync","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where resilio-sync should store its config file.","key":"config"},{"container":"/downloads","description":"Folder for downloads/cache."},{"container":"/sync","description":"Sync folders root."}],"ports":[{"container":"8888","description":"WebUI"},{"container":"55555","description":"Sync Port."}]}],"_id":"content:apps:resilio-sync.json","_type":"json","title":"Resilio Sync","_source":"content","_file":"apps/resilio-sync.json","_extension":"json"},{"_path":"/apps/rsnapshot","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"rsnapshot","name":"rsnapshot","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a filesystem snapshot utility based on rsync. rsnapshot makes it easy to make periodic snapshots of local machines, and remote machines over ssh. The code makes extensive use of hard links whenever possible, to greatly reduce the disk space required.\"\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rsnapshot.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/rsnapshot"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-rsnapshot"}],"containers":[{"name":"rsnapshot","image":"linuxserver/rsnapshot","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}]}],"_id":"content:apps:rsnapshot.json","_type":"json","title":"Rsnapshot","_source":"content","_file":"apps/rsnapshot.json","_extension":"json"},{"_path":"/apps/sabnzbd","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"sabnzbd","name":"sabnzbd","description":"[{{ project_name|capitalize }}]({{ project_url }}) makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sabnzbd-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/sabnzbd"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-sabnzbd"}],"containers":[{"name":"sabnzbd","image":"linuxserver/sabnzbd","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Local path for sabnzbd config files.","key":"config"}],"ports":[{"container":"8080","description":"HTTP port for the WebUI."}]}],"_id":"content:apps:sabnzbd.json","_type":"json","title":"Sabnzbd","_source":"content","_file":"apps/sabnzbd.json","_extension":"json"},{"_path":"/apps/sickchill","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"sickchill","name":"sickchill","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic. \n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sickchill-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/sickchill"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-sickchill"}],"containers":[{"name":"sickchill","image":"linuxserver/sickchill","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"this will store config on the docker host","key":"config"},{"container":"/downloads","description":"this will store any downloaded data on the docker host"},{"container":"/tv","description":"this will allow sickchill to view what you already have"}],"ports":[{"container":"8081","description":"will map the container's port 8081 to port 8081 on the host"}]}],"_id":"content:apps:sickchill.json","_type":"json","title":"Sickchill","_source":"content","_file":"apps/sickchill.json","_extension":"json"},{"_path":"/apps/sickgear","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"sickgear","name":"sickgear","description":"[SickGear]({{ project_url }}) provides management of TV shows and/or Anime, it detects new episodes, links downloader apps, and more..\n\nFor more information on SickGear visit their website and check it out: https://github.com/SickGear/SickGear\n","icon":"https://raw.githubusercontent.com/wiki/SickGear/SickGear.Wiki/images/SickGearLogo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/sickgear"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-sickgear"}],"containers":[{"name":"sickgear","image":"linuxserver/sickgear","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"this will store any uploaded data on the docker host","key":"config"},{"container":"/tv","description":"where you store your tv shows"},{"container":"/downloads","description":"your downloads folder for post processing (must not be download in progress)"}],"ports":[{"container":"8081","description":"will map the container's port 8081 to port 8081 on the host"}]}],"_id":"content:apps:sickgear.json","_type":"json","title":"Sickgear","_source":"content","_file":"apps/sickgear.json","_extension":"json"},{"_path":"/apps/smokeping","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"smokeping","name":"smokeping","description":"[{{ project_name|capitalize }}]({{ project_url }}) keeps track of your network latency. For a full example of what this application is capable of visit [UCDavis](http://smokeping.ucdavis.edu/cgi-bin/smokeping.fcgi).","icon":"https://camo.githubusercontent.com/e0694ef783e3fd1d74e6776b28822ced01c7cc17/687474703a2f2f6f73732e6f6574696b65722e63682f736d6f6b6570696e672f696e632f736d6f6b6570696e672d6c6f676f2e706e67","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/smokeping"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-smokeping"}],"containers":[{"name":"smokeping","image":"linuxserver/smokeping","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configure the `Targets` file here","key":"config"},{"container":"/data","description":"Storage location for db and application data (graphs etc)"}],"ports":[{"container":"80","description":"Allows HTTP access to the internal webserver."}]}],"_id":"content:apps:smokeping.json","_type":"json","title":"Smokeping","_source":"content","_file":"apps/smokeping.json","_extension":"json"},{"_path":"/apps/snapdrop","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"snapdrop","name":"snapdrop","description":"[{{ project_name|capitalize }}]({{ project_url }}) A local file sharing in your browser. Inspired by Apple's Airdrop.","icon":"https://raw.githubusercontent.com/RobinLinus/snapdrop/master/client/images/logo_transparent_512x512.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/snapdrop"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-snapdrop"}],"containers":[{"name":"snapdrop","image":"linuxserver/snapdrop","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Persistent configs and logs.","key":"config"}],"ports":[{"container":"80","description":"http gui"},{"container":"443","description":"https gui"}]}],"_id":"content:apps:snapdrop.json","_type":"json","title":"Snapdrop","_source":"content","_file":"apps/snapdrop.json","_extension":"json"},{"_path":"/apps/snipe-it","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"snipe-it","name":"snipe-it","description":"[{{ project_name|capitalize }}]({{ project_url }}) makes asset management easy. It was built by people solving real-world IT and asset management problems, and a solid UX has always been a top priority. Straightforward design and bulk actions mean getting things done faster.","icon":"https://s3-us-west-2.amazonaws.com/linuxserver-docs/images/snipe-it-logo500x500.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/snipe-it"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-snipe-it"}],"containers":[{"name":"snipe-it","image":"linuxserver/snipe-it","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains your config files and data storage for Snipe-IT","key":"config"}],"ports":[{"container":"80","description":"Snipe-IT Web UI"}]}],"_id":"content:apps:snipe-it.json","_type":"json","title":"Snipe It","_source":"content","_file":"apps/snipe-it.json","_extension":"json"},{"_path":"/apps/sonarr","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"sonarr","name":"sonarr","description":"[{{ project_name|capitalize }}]({{ project_url }}) (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sonarr-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/sonarr"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-sonarr"}],"containers":[{"name":"sonarr","image":"linuxserver/sonarr","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Database and sonarr configs","key":"config"}],"ports":[{"container":"8989","description":"The port for the Sonarr webinterface"}]}],"_id":"content:apps:sonarr.json","_type":"json","title":"Sonarr","_source":"content","_file":"apps/sonarr.json","_extension":"json"},{"_path":"/apps/sqlitebrowser","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"sqlitebrowser","name":"sqlitebrowser","description":"[DB Browser for SQLite]({{ project_url }}) is a high quality, visual, open source tool to create, design, and edit database files compatible with SQLite.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sqlitebrowser-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/sqlitebrowser"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-sqlitebrowser"}],"containers":[{"name":"sqlitebrowser","image":"linuxserver/sqlitebrowser","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores program settings and potentially dump files.","key":"config"}],"ports":[{"container":"3000","description":"Sqlitebrowser desktop gui."}]}],"_id":"content:apps:sqlitebrowser.json","_type":"json","title":"Sqlitebrowser","_source":"content","_file":"apps/sqlitebrowser.json","_extension":"json"},{"_path":"/apps/swag","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"swag","name":"swag","description":"SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt™) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.","icon":"https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/swag.gif","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/swag"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-swag"}],"containers":[{"name":"swag","image":"linuxserver/swag","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"All the config files including the webroot reside here.","key":"config"}],"ports":[{"container":"443","description":"Https port"}]}],"_id":"content:apps:swag.json","_type":"json","title":"Swag","_source":"content","_file":"apps/swag.json","_extension":"json"},{"_path":"/apps/synclounge","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"synclounge","name":"synclounge","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a third party tool that allows you to watch Plex in sync with your friends/family, wherever you are.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/synclounge-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/synclounge"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-synclounge"}],"containers":[{"name":"synclounge","image":"linuxserver/synclounge","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"ports":[{"container":"8088","description":"Web app and server port"}]}],"_id":"content:apps:synclounge.json","_type":"json","title":"Synclounge","_source":"content","_file":"apps/synclounge.json","_extension":"json"},{"_path":"/apps/syncthing","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"syncthing","name":"syncthing","description":"[{{ project_name|capitalize }}]({{ project_url }}) replaces proprietary sync and cloud services with something open, trustworthy and decentralized. Your data is your data alone and you deserve to choose where it is stored, if it is shared with some third party and how it's transmitted over the Internet.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/syncthing-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/syncthing"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-syncthing"}],"containers":[{"name":"syncthing","image":"linuxserver/syncthing","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configuration files.","key":"config"},{"container":"/data1","description":"Data1"},{"container":"/data2","description":"Data2"}],"ports":[{"container":"8384","description":"Application WebUI"},{"container":"22000/tcp","description":"Listening port (TCP)"},{"container":"22000/udp","description":"Listening port (UDP)"},{"container":"21027/udp","description":"Protocol discovery"}]}],"_id":"content:apps:syncthing.json","_type":"json","title":"Syncthing","_source":"content","_file":"apps/syncthing.json","_extension":"json"},{"_path":"/apps/syslog-ng","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"syslog-ng","name":"syslog-ng","description":"[syslog-ng]({{ project_url }}) allows you to flexibly collect, parse, classify, rewrite and correlate logs from across your infrastructure and store or route them to log analysis tools.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/syslog-ng-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/syslog-ng"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-syslog-ng"}],"containers":[{"name":"syslog-ng","image":"linuxserver/syslog-ng","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Stores config and application files","key":"config"}],"ports":[{"container":"5514/udp","description":"Syslog UDP"},{"container":"6601/tcp","description":"Syslog TCP"},{"container":"6514/tcp","description":"Syslog TLS"}]}],"_id":"content:apps:syslog-ng.json","_type":"json","title":"Syslog Ng","_source":"content","_file":"apps/syslog-ng.json","_extension":"json"},{"_path":"/apps/tautulli","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"tautulli","name":"tautulli","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a python based web application for monitoring, analytics and notifications for Plex Media Server.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/tautulli-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/tautulli"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-tautulli"}],"containers":[{"name":"tautulli","image":"linuxserver/tautulli","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains tautulli config and database.","key":"config"}],"ports":[{"container":"8181","description":"WebUI"}]}],"_id":"content:apps:tautulli.json","_type":"json","title":"Tautulli","_source":"content","_file":"apps/tautulli.json","_extension":"json"},{"_path":"/apps/thelounge","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"thelounge","name":"thelounge","description":"[{{ project_name|capitalize }}]({{ project_url }}) (a fork of shoutIRC) is a web IRC client that you host on your own server.","icon":"https://raw.githubusercontent.com/thelounge/thelounge/master/client/img/logo-vertical-transparent-bg.svg?sanitize=true","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/thelounge"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-thelounge"}],"containers":[{"name":"thelounge","image":"linuxserver/thelounge","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Configuration files.","key":"config"}],"ports":[{"container":"9000","description":"Application WebUI"}]}],"_id":"content:apps:thelounge.json","_type":"json","title":"Thelounge","_source":"content","_file":"apps/thelounge.json","_extension":"json"},{"_path":"/apps/transmission","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"transmission","name":"transmission","description":"[{{ project_name|capitalize }}]({{ project_url }}) is designed for easy, powerful use. Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, µTP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/transmission.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/transmission"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-transmission"}],"containers":[{"name":"transmission","image":"linuxserver/transmission","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where transmission should store config files and logs.","key":"config"},{"container":"/downloads","description":"Local path for downloads."},{"container":"/watch","description":"Watch folder for torrent files."}],"ports":[{"container":"9091","description":"WebUI"},{"container":"51413","description":"Torrent Port TCP"},{"container":"51413/udp","description":"Torrent Port UDP"}]}],"_id":"content:apps:transmission.json","_type":"json","title":"Transmission","_source":"content","_file":"apps/transmission.json","_extension":"json"},{"_path":"/apps/tvheadend","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"tvheadend","name":"tvheadend","description":"[{{ project_name|capitalize }}]({{ project_url }}) works as a proxy server: is a TV streaming server and recorder for Linux, FreeBSD and Android supporting DVB-S, DVB-S2, DVB-C, DVB-T, ATSC, ISDB-T, IPTV, SAT>IP and HDHomeRun as input sources.\nTvheadend offers the HTTP (VLC, MPlayer), HTSP (Kodi, Movian) and SAT>IP streaming.\nMultiple EPG sources are supported (over-the-air DVB and ATSC including OpenTV DVB extensions, XMLTV, PyXML).\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/tvheadend-big.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/tvheadend"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-tvheadend"}],"containers":[{"name":"tvheadend","image":"linuxserver/tvheadend","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where TVHeadend show store it's config files.","key":"config"},{"container":"/recordings","description":"Where you want the PVR to store recordings."}],"ports":[{"container":"9981","description":"WebUI"},{"container":"9982","description":"HTSP server port."}]}],"_id":"content:apps:tvheadend.json","_type":"json","title":"Tvheadend","_source":"content","_file":"apps/tvheadend.json","_extension":"json"},{"_path":"/apps/ubooquity","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"ubooquity","name":"ubooquity","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a free, lightweight and easy-to-use home server for your comics and ebooks. Use it to access your files from anywhere, with a tablet, an e-reader, a phone or a computer.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ubooquity-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/ubooquity"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-ubooquity"}],"containers":[{"name":"ubooquity","image":"linuxserver/ubooquity","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Config files and database for ubooquity.","key":"config"},{"container":"/books","description":"Location of books."},{"container":"/comics","description":"Location of comics."},{"container":"/files","description":"Location of raw files."}],"ports":[{"container":"2202","description":"The library port."},{"container":"2203","description":"The admin port."}]}],"_id":"content:apps:ubooquity.json","_type":"json","title":"Ubooquity","_source":"content","_file":"apps/ubooquity.json","_extension":"json"},{"_path":"/apps/unifi-controller","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"unifi-controller","name":"unifi-controller","description":"The [{{ project_name|capitalize }}]({{ project_url }}) software is a powerful, enterprise wireless software engine ideal for high-density client deployments requiring low latency and high uptime performance.","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/unifi-banner.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/unifi-controller"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-unifi-controller"}],"containers":[{"name":"unifi-controller","image":"linuxserver/unifi-controller","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"All Unifi data stored here","key":"config"}],"ports":[{"container":"8443","description":"Unifi web admin port"},{"container":"3478/udp","description":"Unifi STUN port"},{"container":"10001/udp","description":"Required for AP discovery"},{"container":"8080","description":"Required for device communication"}]}],"_id":"content:apps:unifi-controller.json","_type":"json","title":"Unifi Controller","_source":"content","_file":"apps/unifi-controller.json","_extension":"json"},{"_path":"/apps/vikunja","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"vikunja","name":"Vikunja","icon":"https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/vikunja.png","containers":[{"name":"api","image":"vikunja/api","env":[{"id":"VIKUNJA_DATABASE_HOST","default":"db"},{"id":"VIKUNJA_DATABASE_PASSWORD","default":"secret"},{"id":"VIKUNJA_DATABASE_TYPE","default":"mysql"},{"id":"VIKUNJA_DATABASE_USER","default":"vikunja"},{"id":"VIKUNJA_DATABASE_DATABASE","default":"vikunja"},{"id":"VIKUNJA_SERVICE_JWTSECRET","default":"<random>"},{"id":"VIKUNJA_SERVICE_FRONTENDURL","default":"http://localhost:8888"}],"volumes":[{"container":"/app/vikunja/files","description":"Path to your Config","key":"config"}],"ports":[{"key":"api","container":3456,"description":"API","protocol":"tcp","web":true}]},{"name":"frontend","image":"vikunja/frontend","env":[{"id":"VIKUNJA_API_URL","default":"http://<your-ip-here>:3456/api/v1"}],"ports":[{"key":"webui","container":80,"description":"WebUI","protocol":"tcp","web":true}]}],"_id":"content:apps:vikunja.json","_type":"json","title":"Vikunja","_source":"content","_file":"apps/vikunja.json","_extension":"json"},{"_path":"/apps/webgrabplus","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"webgrabplus","name":"webgrabplus","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a multi-site incremental xmltv epg grabber. It collects tv-program guide data from selected tvguide sites for your favourite channels.","icon":"http://www.webgrabplus.com/sites/default/themes/WgTheme/images/slideshows/EPG_fading.jpg","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/webgrabplus"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-webgrabplus"}],"containers":[{"name":"webgrabplus","image":"linuxserver/webgrabplus","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where webgrabplus should store it's config files.","key":"config"},{"container":"/data","description":"Where webgrabplus should store it's data files."}]}],"_id":"content:apps:webgrabplus.json","_type":"json","title":"Webgrabplus","_source":"content","_file":"apps/webgrabplus.json","_extension":"json"},{"_path":"/apps/webtop","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"webtop","name":"webtop","description":"[{{ project_name|capitalize }}]({{ project_url }}) - Alpine, Ubuntu, Fedora, and Arch based containers containing full desktop environments in officially supported flavors accessible via any modern web browser.\n","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/webtop-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/webtop"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-webtop"}],"containers":[{"name":"webtop","image":"linuxserver/webtop","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"abc users home directory","key":"config"}],"ports":[{"container":"3000","description":"Web Desktop GUI"}]}],"_id":"content:apps:webtop.json","_type":"json","title":"Webtop","_source":"content","_file":"apps/webtop.json","_extension":"json"},{"_path":"/apps/wikijs","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"wikijs","name":"wikijs","description":"[{{ project_name|capitalize }}]({{ project_url }}) A modern, lightweight and powerful wiki app built on NodeJS.","icon":"https://static.requarks.io/logo/wikijs-full.svg","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/wikijs"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-wikijs"}],"containers":[{"name":"wikijs","image":"linuxserver/wikijs","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where Wiki.js config is stored.","key":"config"},{"container":"/data","description":"Where Wiki.js data is stored."}],"ports":[{"container":"3000","description":"Port for Wiki.js's web interface."}]}],"_id":"content:apps:wikijs.json","_type":"json","title":"Wikijs","_source":"content","_file":"apps/wikijs.json","_extension":"json"},{"_path":"/apps/wireguard","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"wireguard","name":"wireguard","description":"[WireGuard®]({{ project_url }}) is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPsec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. WireGuard is designed as a general purpose VPN for running on embedded interfaces and super computers alike, fit for many different circumstances. Initially released for the Linux kernel, it is now cross-platform (Windows, macOS, BSD, iOS, Android) and widely deployable. It is currently under heavy development, but already it might be regarded as the most secure, easiest to use, and simplest VPN solution in the industry.","icon":"https://www.wireguard.com/img/wireguard.svg","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/wireguard"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-wireguard"}],"containers":[{"name":"wireguard","image":"linuxserver/wireguard","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Contains all relevant configuration files.","key":"config"}],"ports":[{"container":"51820/udp","description":"wireguard port"}]}],"_id":"content:apps:wireguard.json","_type":"json","title":"Wireguard","_source":"content","_file":"apps/wireguard.json","_extension":"json"},{"_path":"/apps/wireshark","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"wireshark","name":"wireshark","description":"[Wireshark]({{ project_url }}) is the world’s foremost and widely-used network protocol analyzer. It lets you see what’s happening on your network at a microscopic level and is the de facto (and often de jure) standard across many commercial and non-profit enterprises, government agencies, and educational institutions. Wireshark development thrives thanks to the volunteer contributions of networking experts around the globe and is the continuation of a project started by Gerald Combs in 1998. ","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/wireshark-icon.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/wireshark"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-wireshark"}],"containers":[{"name":"wireshark","image":"linuxserver/wireshark","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores program settings and potentially dump files.","key":"config"}]}],"_id":"content:apps:wireshark.json","_type":"json","title":"Wireshark","_source":"content","_file":"apps/wireshark.json","_extension":"json"},{"_path":"/apps/xbackbone","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"xbackbone","name":"xbackbone","description":"[{{ project_name|capitalize }}]({{ project_url }}) is a simple, self-hosted, lightweight PHP file manager that support the instant sharing tool ShareX and *NIX systems. It supports uploading and displaying images, GIF, video, code, formatted text, and file downloading and uploading. Also have a web UI with multi user management, past uploads history and search support.\n","icon":"https://raw.githubusercontent.com/SergiX44/XBackBone/master/docs/img/xbackbone.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/xbackbone"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-xbackbone"}],"containers":[{"name":"xbackbone","image":"linuxserver/xbackbone","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"config directory volume mapping","key":"config"}],"ports":[{"container":"80","description":"http gui"},{"container":"443","description":"https gui"}]}],"_id":"content:apps:xbackbone.json","_type":"json","title":"Xbackbone","_source":"content","_file":"apps/xbackbone.json","_extension":"json"},{"_path":"/apps/yq","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"yq","name":"yq","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/yq"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-yq"}],"containers":[{"name":"yq","image":"linuxserver/yq","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}]}],"_id":"content:apps:yq.json","_type":"json","title":"Yq","_source":"content","_file":"apps/yq.json","_extension":"json"},{"_path":"/apps/znc","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"znc","name":"znc","description":"[{{ project_name|capitalize }}]({{ project_url }}) is an IRC network bouncer or BNC. It can detach the client from the actual IRC server, and also from selected channels. Multiple clients from different locations can connect to a single ZNC account simultaneously and therefore appear under the same nickname on IRC.","icon":"http://wiki.znc.in/resources/assets/wiki.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/znc"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-znc"}],"containers":[{"name":"znc","image":"linuxserver/znc","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","key":"TZ","description":"Timezone","default":"America/New_York"}],"volumes":[{"container":"/config","description":"Where local ZNC data is stored.","key":"config"}],"ports":[{"container":"6501","description":"Port ZNC listens on."}]}],"_id":"content:apps:znc.json","_type":"json","title":"Znc","_source":"content","_file":"apps/znc.json","_extension":"json"}],"navigation":[{"title":"All","_path":"/all"},{"title":"Apps","_path":"/apps","children":[{"title":"Adguardhome Sync","_path":"/apps/adguardhome-sync"},{"title":"Airsonic Advanced","_path":"/apps/airsonic-advanced"},{"title":"Apprise Api","_path":"/apps/apprise-api"},{"title":"Audacity","_path":"/apps/audacity"},{"title":"Audiobookshelf","_path":"/apps/audiobookshelf"},{"title":"Babybuddy","_path":"/apps/babybuddy"},{"title":"Bazarr","_path":"/apps/bazarr"},{"title":"Beets","_path":"/apps/beets"},{"title":"Blender","_path":"/apps/blender"},{"title":"Boinc","_path":"/apps/boinc"},{"title":"Booksonic Air","_path":"/apps/booksonic-air"},{"title":"Bookstack","_path":"/apps/bookstack"},{"title":"Budge","_path":"/apps/budge"},{"title":"Calibre Web","_path":"/apps/calibre-web"},{"title":"Calibre","_path":"/apps/calibre"},{"title":"ChangedetectionIo","_path":"/apps/changedetection.io"},{"title":"Code Server","_path":"/apps/code-server"},{"title":"Cops","_path":"/apps/cops"},{"title":"Daapd","_path":"/apps/daapd"},{"title":"Darktable","_path":"/apps/darktable"},{"title":"Davos","_path":"/apps/davos"},{"title":"Ddclient","_path":"/apps/ddclient"},{"title":"Deluge","_path":"/apps/deluge"},{"title":"Digikam","_path":"/apps/digikam"},{"title":"Dillinger","_path":"/apps/dillinger"},{"title":"Diskover","_path":"/apps/diskover"},{"title":"Docker Compose","_path":"/apps/docker-compose"},{"title":"Dokuwiki","_path":"/apps/dokuwiki"},{"title":"Domoticz","_path":"/apps/domoticz"},{"title":"Doplarr","_path":"/apps/doplarr"},{"title":"Doublecommander","_path":"/apps/doublecommander"},{"title":"Duckdns","_path":"/apps/duckdns"},{"title":"Duplicati","_path":"/apps/duplicati"},{"title":"Emby","_path":"/apps/emby"},{"title":"Embystat","_path":"/apps/embystat"},{"title":"Emulatorjs","_path":"/apps/emulatorjs"},{"title":"Endlessh","_path":"/apps/endlessh"},{"title":"Fail2ban","_path":"/apps/fail2ban"},{"title":"Feed2toot","_path":"/apps/feed2toot"},{"title":"Ffmpeg","_path":"/apps/ffmpeg"},{"title":"Filezilla","_path":"/apps/filezilla"},{"title":"Firefox","_path":"/apps/firefox"},{"title":"Fleet","_path":"/apps/fleet"},{"title":"Foldingathome","_path":"/apps/foldingathome"},{"title":"Freshrss","_path":"/apps/freshrss"},{"title":"Grav","_path":"/apps/grav"},{"title":"Grocy","_path":"/apps/grocy"},{"title":"Guacd","_path":"/apps/guacd"},{"title":"Habridge","_path":"/apps/habridge"},{"title":"Headphones","_path":"/apps/headphones"},{"title":"Healthchecks","_path":"/apps/healthchecks"},{"title":"Hedgedoc","_path":"/apps/hedgedoc"},{"title":"Heimdall","_path":"/apps/heimdall"},{"title":"Homeassistant","_path":"/apps/homeassistant"},{"title":"Homer","_path":"/apps/homer"},{"title":"Htpcmanager","_path":"/apps/htpcmanager"},{"title":"Ipfs","_path":"/apps/ipfs"},{"title":"Jackett","_path":"/apps/jackett"},{"title":"Jellyfin","_path":"/apps/jellyfin"},{"title":"Jenkins Builder","_path":"/apps/jenkins-builder"},{"title":"Kasm","_path":"/apps/kasm"},{"title":"Kdenlive","_path":"/apps/kdenlive"},{"title":"Lazylibrarian","_path":"/apps/lazylibrarian"},{"title":"Ldap Auth","_path":"/apps/ldap-auth"},{"title":"Libreoffice","_path":"/apps/libreoffice"},{"title":"Librespeed","_path":"/apps/librespeed"},{"title":"Lidarr","_path":"/apps/lidarr"},{"title":"Limnoria","_path":"/apps/limnoria"},{"title":"Lychee","_path":"/apps/lychee"},{"title":"Mariadb","_path":"/apps/mariadb"},{"title":"Mastodon","_path":"/apps/mastodon"},{"title":"Medusa","_path":"/apps/medusa"},{"title":"Minetest","_path":"/apps/minetest"},{"title":"Minisatip","_path":"/apps/minisatip"},{"title":"Mods","_path":"/apps/mods"},{"title":"Mstream","_path":"/apps/mstream"},{"title":"Mylar3","_path":"/apps/mylar3"},{"title":"Mysql Workbench","_path":"/apps/mysql-workbench"},{"title":"Nano Wallet","_path":"/apps/nano-wallet"},{"title":"Nano","_path":"/apps/nano"},{"title":"Netbootxyz","_path":"/apps/netbootxyz"},{"title":"Netbox","_path":"/apps/netbox"},{"title":"Nextcloud","_path":"/apps/nextcloud"},{"title":"Nginx","_path":"/apps/nginx"},{"title":"Ngircd","_path":"/apps/ngircd"},{"title":"Nntp2nntp","_path":"/apps/nntp2nntp"},{"title":"Nzbget","_path":"/apps/nzbget"},{"title":"Nzbhydra2","_path":"/apps/nzbhydra2"},{"title":"Ombi","_path":"/apps/ombi"},{"title":"Openssh Server","_path":"/apps/openssh-server"},{"title":"Openvscode Server","_path":"/apps/openvscode-server"},{"title":"Oscam","_path":"/apps/oscam"},{"title":"Overseerr","_path":"/apps/overseerr"},{"title":"Papermerge","_path":"/apps/papermerge"},{"title":"Phpmyadmin","_path":"/apps/phpmyadmin"},{"title":"Pidgin","_path":"/apps/pidgin"},{"title":"Piwigo","_path":"/apps/piwigo"},{"title":"Plex Meta Manager","_path":"/apps/plex-meta-manager"},{"title":"Plex","_path":"/apps/plex"},{"title":"Projectsend","_path":"/apps/projectsend"},{"title":"Prowlarr","_path":"/apps/prowlarr"},{"title":"Pwndrop","_path":"/apps/pwndrop"},{"title":"Pydio Cells","_path":"/apps/pydio-cells"},{"title":"Pyload Ng","_path":"/apps/pyload-ng"},{"title":"Pylon","_path":"/apps/pylon"},{"title":"Qbittorrent","_path":"/apps/qbittorrent"},{"title":"Qdirstat","_path":"/apps/qdirstat"},{"title":"Quassel Core","_path":"/apps/quassel-core"},{"title":"Quassel Web","_path":"/apps/quassel-web"},{"title":"Radarr","_path":"/apps/radarr"},{"title":"Raneto","_path":"/apps/raneto"},{"title":"Rdesktop","_path":"/apps/rdesktop"},{"title":"Readarr","_path":"/apps/readarr"},{"title":"Remmina","_path":"/apps/remmina"},{"title":"Requestrr","_path":"/apps/requestrr"},{"title":"Resilio Sync","_path":"/apps/resilio-sync"},{"title":"Rsnapshot","_path":"/apps/rsnapshot"},{"title":"Sabnzbd","_path":"/apps/sabnzbd"},{"title":"Sickchill","_path":"/apps/sickchill"},{"title":"Sickgear","_path":"/apps/sickgear"},{"title":"Smokeping","_path":"/apps/smokeping"},{"title":"Snapdrop","_path":"/apps/snapdrop"},{"title":"Snipe It","_path":"/apps/snipe-it"},{"title":"Sonarr","_path":"/apps/sonarr"},{"title":"Sqlitebrowser","_path":"/apps/sqlitebrowser"},{"title":"Swag","_path":"/apps/swag"},{"title":"Synclounge","_path":"/apps/synclounge"},{"title":"Syncthing","_path":"/apps/syncthing"},{"title":"Syslog Ng","_path":"/apps/syslog-ng"},{"title":"Tautulli","_path":"/apps/tautulli"},{"title":"Thelounge","_path":"/apps/thelounge"},{"title":"Transmission","_path":"/apps/transmission"},{"title":"Tvheadend","_path":"/apps/tvheadend"},{"title":"Ubooquity","_path":"/apps/ubooquity"},{"title":"Unifi Controller","_path":"/apps/unifi-controller"},{"title":"Vikunja","_path":"/apps/vikunja"},{"title":"Webgrabplus","_path":"/apps/webgrabplus"},{"title":"Webtop","_path":"/apps/webtop"},{"title":"Wikijs","_path":"/apps/wikijs"},{"title":"Wireguard","_path":"/apps/wireguard"},{"title":"Wireshark","_path":"/apps/wireshark"},{"title":"Xbackbone","_path":"/apps/xbackbone"},{"title":"Yq","_path":"/apps/yq"},{"title":"Znc","_path":"/apps/znc"}]}]}