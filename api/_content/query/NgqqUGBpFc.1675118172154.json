{"_path":"/apps/blender","_dir":"apps","_draft":false,"_partial":false,"_locale":"en","id":"blender","name":"blender","description":"[Blender]({{ project_url }}) is a free and open-source 3D computer graphics software toolset used for creating animated films, visual effects, art, 3D printed models, motion graphics, interactive 3D applications, virtual reality, and computer games. **This image does not support GPU rendering out of the box only accelerated workspace experience**","icon":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/blender-logo.png","links":[{"type":"docker","url":"https://hub.docker.com/r/linuxserver/blender"},{"type":"docs","url":"https://docs.linuxserver.io/images/docker-blender"}],"containers":[{"name":"blender","image":"linuxserver/blender","env":[{"id":"PUID","key":"PUID","description":"User ID","default":"100"},{"id":"PGID","key":"PGID","description":"Group ID","default":"100"},{"id":"TZ","default":"Europe/London","description":"Specify a timezone to use EG Europe/London"},{"id":"SUBFOLDER","default":"/","description":"Specify a subfolder to use with reverse proxies, IE `/subfolder/`"},{"id":"KEYBOARD","default":"en-us-qwerty","description":"See the keyboard layouts section for more information and options."}],"volumes":[{"container":"/config","description":"Users home directory in the container, stores local files and settings","key":"config"}],"ports":[{"container":"3000","description":"Blender desktop gui","protocol":"tcp","web":false}]}],"meta":{"readme-vars":{"project_name":"blender","project_url":"https://www.blender.org/","project_logo":"https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/blender-logo.png","project_blurb":"[Blender]({{ project_url }}) is a free and open-source 3D computer graphics software toolset used for creating animated films, visual effects, art, 3D printed models, motion graphics, interactive 3D applications, virtual reality, and computer games. **This image does not support GPU rendering out of the box only accelerated workspace experience**","project_lsio_github_repo_url":"https://github.com/linuxserver/docker-{{ project_name }}","project_blurb_optional_extras_enabled":false,"available_architectures":[{"arch":"{{ arch_x86_64 }}","tag":"latest"},{"arch":"{{ arch_arm64 }}","tag":"arm64v8-latest"},{"arch":"{{ arch_armhf }}","tag":"arm32v7-latest"}],"development_versions":false,"common_param_env_vars_enabled":true,"param_container_name":"{{ project_name }}","param_usage_include_env":true,"param_env_vars":[{"env_var":"TZ","env_value":"Europe/London","desc":"Specify a timezone to use EG Europe/London"}],"param_usage_include_vols":true,"param_volumes":[{"vol_path":"/config","vol_host_path":"/path/to/config","desc":"Users home directory in the container, stores local files and settings"}],"param_usage_include_ports":true,"param_ports":[{"external_port":"3000","internal_port":"3000","port_desc":"Blender desktop gui"}],"opt_param_usage_include_env":true,"opt_param_env_vars":[{"env_var":"SUBFOLDER","env_value":"/","desc":"Specify a subfolder to use with reverse proxies, IE `/subfolder/`"},{"env_var":"KEYBOARD","env_value":"en-us-qwerty","desc":"See the keyboard layouts section for more information and options."}],"opt_param_device_map":true,"opt_param_devices":[{"device_path":"/dev/dri","device_host_path":"/dev/dri","desc":"Add this for hardware acceleration (Linux hosts only)"}],"opt_security_opt_param":true,"opt_security_opt_param_vars":[{"run_var":"seccomp=unconfined","compose_var":"seccomp:unconfined","desc":"For Docker Engine only, this may be required depending on your Docker and storage configuration."}],"app_setup_block_enabled":true,"app_setup_block":"The application can be accessed at:\n* http://yourhost:3000/\n\nBy default the user/pass is abc/abc, if you change your password or want to login manually to the GUI session for any reason use the following link:\n\n* http://yourhost:3000/?login=true\n\nYou can also force login on the '/' path without this parameter by passing the environment variable `-e AUTO_LOGIN=false`.\n\n## Hardware Acceleration\n\nThis only applies to your desktop experience, this container is capable of supporting accelerated rendering with /dev/dri mounted in, but the AMD HIP and Nvidia CUDA runtimes are massive which are not installed by default in this container.\n\n### Intel/ATI/AMD\n\nTo leverage hardware acceleration you will need to mount /dev/dri video device inside of the conainer.\n```\n--device=/dev/dri:/dev/dri\n```\nWe will automatically ensure the abc user inside of the container has the proper permissions to access this device.\n\n### Nvidia\n\nHardware acceleration users for Nvidia will need to install the container runtime provided by Nvidia on their host, instructions can be found here:\nhttps://github.com/NVIDIA/nvidia-docker\n\nWe automatically add the necessary environment variable that will utilise all the features available on a GPU on the host. Once nvidia-docker is installed on your host you will need to re/create the docker container with the nvidia container runtime `--runtime=nvidia` and add an environment variable `-e NVIDIA_VISIBLE_DEVICES=all` (can also be set to a specific gpu's UUID, this can be discovered by running `nvidia-smi --query-gpu=gpu_name,gpu_uuid --format=csv` ). NVIDIA automatically mounts the GPU and drivers from your host into the container.\n\n### Arm Devices\n\nArm devices can run this image, but generally should not mount in /dev/dri. The OpenGL ES version is not high enough to run Blender. The program can run on these platforms though, leveraging CPU LLVMPipe rendering.\n\nDue to lack of arm32/64 binaries from the upstream project, our arm32/64 images install the latest version from the ubuntu repo, which is usually behind and thus the version the image is tagged with does not match the version contained.\n\n#### Keyboard Layouts\n\nThis should match the layout on the computer you are accessing the container from.\nThe keyboard layouts available for use are:\n* da-dk-qwerty- Danish keyboard\n* de-ch-qwertz- Swiss German keyboard (qwertz)\n* de-de-qwertz- German keyboard (qwertz) - **OSK available**\n* en-gb-qwerty- English (UK) keyboard\n* en-us-qwerty- English (US) keyboard - **OSK available** **DEFAULT**\n* es-es-qwerty- Spanish keyboard - **OSK available**\n* fr-ch-qwertz- Swiss French keyboard (qwertz)\n* fr-fr-azerty- French keyboard (azerty) - **OSK available**\n* it-it-qwerty- Italian keyboard - **OSK available**\n* ja-jp-qwerty- Japanese keyboard\n* pt-br-qwerty- Portuguese Brazilian keyboard\n* sv-se-qwerty- Swedish keyboard\n* tr-tr-qwerty- Turkish-Q keyboard\n","changelogs":[{"date":"13.12.22:","desc":"Rebase to Jammy, migrate to s6v3."},{"date":"06.05.22:","desc":"Use the full semver version in image tags. Arm32/64 version tags are inaccurate due to installing from ubuntu repo, which is usually behind."},{"date":"12.03.22:","desc":"Initial Release."}]}},"setup":"The application can be accessed at:\n* http://yourhost:3000/\n\nBy default the user/pass is abc/abc, if you change your password or want to login manually to the GUI session for any reason use the following link:\n\n* http://yourhost:3000/?login=true\n\nYou can also force login on the '/' path without this parameter by passing the environment variable `-e AUTO_LOGIN=false`.\n\n## Hardware Acceleration\n\nThis only applies to your desktop experience, this container is capable of supporting accelerated rendering with /dev/dri mounted in, but the AMD HIP and Nvidia CUDA runtimes are massive which are not installed by default in this container.\n\n### Intel/ATI/AMD\n\nTo leverage hardware acceleration you will need to mount /dev/dri video device inside of the conainer.\n```\n--device=/dev/dri:/dev/dri\n```\nWe will automatically ensure the abc user inside of the container has the proper permissions to access this device.\n\n### Nvidia\n\nHardware acceleration users for Nvidia will need to install the container runtime provided by Nvidia on their host, instructions can be found here:\nhttps://github.com/NVIDIA/nvidia-docker\n\nWe automatically add the necessary environment variable that will utilise all the features available on a GPU on the host. Once nvidia-docker is installed on your host you will need to re/create the docker container with the nvidia container runtime `--runtime=nvidia` and add an environment variable `-e NVIDIA_VISIBLE_DEVICES=all` (can also be set to a specific gpu's UUID, this can be discovered by running `nvidia-smi --query-gpu=gpu_name,gpu_uuid --format=csv` ). NVIDIA automatically mounts the GPU and drivers from your host into the container.\n\n### Arm Devices\n\nArm devices can run this image, but generally should not mount in /dev/dri. The OpenGL ES version is not high enough to run Blender. The program can run on these platforms though, leveraging CPU LLVMPipe rendering.\n\nDue to lack of arm32/64 binaries from the upstream project, our arm32/64 images install the latest version from the ubuntu repo, which is usually behind and thus the version the image is tagged with does not match the version contained.\n\n#### Keyboard Layouts\n\nThis should match the layout on the computer you are accessing the container from.\nThe keyboard layouts available for use are:\n* da-dk-qwerty- Danish keyboard\n* de-ch-qwertz- Swiss German keyboard (qwertz)\n* de-de-qwertz- German keyboard (qwertz) - **OSK available**\n* en-gb-qwerty- English (UK) keyboard\n* en-us-qwerty- English (US) keyboard - **OSK available** **DEFAULT**\n* es-es-qwerty- Spanish keyboard - **OSK available**\n* fr-ch-qwertz- Swiss French keyboard (qwertz)\n* fr-fr-azerty- French keyboard (azerty) - **OSK available**\n* it-it-qwerty- Italian keyboard - **OSK available**\n* ja-jp-qwerty- Japanese keyboard\n* pt-br-qwerty- Portuguese Brazilian keyboard\n* sv-se-qwerty- Swedish keyboard\n* tr-tr-qwerty- Turkish-Q keyboard\n","_id":"content:apps:blender.json","_type":"json","title":"Blender","_source":"content","_file":"apps/blender.json","_extension":"json"}