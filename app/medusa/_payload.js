export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u){return {data:{medusa:{_path:"\u002Fapps\u002Fmedusa",_dir:"apps",_draft:c,_partial:c,_locale:"en",id:a,name:a,description:e,icon:f,links:[{type:"docker",url:"https:\u002F\u002Fhub.docker.com\u002Fr\u002Flinuxserver\u002Fmedusa"},{type:"docs",url:"https:\u002F\u002Fdocs.linuxserver.io\u002Fimages\u002Fdocker-medusa"}],containers:[{name:a,image:"linuxserver\u002Fmedusa",env:[{id:g,key:g,description:"User ID",default:h},{id:i,key:i,description:"Group ID",default:h},{id:j,default:k,description:l}],volumes:[{container:m,description:n,key:"config"},{container:o,description:p},{container:q,description:r}],ports:[{container:d,description:s,protocol:"tcp",web:c}]}],meta:{"readme-vars":{project_name:a,project_url:"https:\u002F\u002Fpymedusa.com\u002F",project_logo:f,project_blurb:e,project_lsio_github_repo_url:"https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Fdocker-{{ project_name }}",available_architectures:[{arch:"{{ arch_x86_64 }}",tag:"amd64-latest"},{arch:"{{ arch_arm64 }}",tag:"arm64v8-latest"},{arch:"{{ arch_armhf }}",tag:"arm32v7-latest"}],param_container_name:"{{ project_name }}",param_usage_include_vols:b,param_volumes:[{vol_path:m,vol_host_path:"\u003Cpath to data\u003E",desc:n},{vol_path:o,vol_host_path:"\u003Cpath to downloads\u003E",desc:p},{vol_path:q,vol_host_path:"\u003Cpath to tv shows\u003E",desc:r}],param_usage_include_ports:b,param_ports:[{external_port:d,internal_port:d,port_desc:s}],param_usage_include_env:b,param_env_vars:[{env_var:j,env_value:k,desc:l}],app_setup_block_enabled:b,app_setup_block:t,changelogs:[{date:"12.09.22:",desc:"Install ffmpeg for postprocessing."},{date:"12.08.22:",desc:"Bump unrar to 6.1.7."},{date:"28.02.22:",desc:"Install python3 requirements for app."},{date:"19.01.22:",desc:"Rebasing to alpine 3.15."},{date:"01.06.20:",desc:"Rebasing to alpine 3.12."},{date:"19.12.19:",desc:"Rebasing to alpine 3.11."},{date:"22.09.19:",desc:"Switch to python3."},{date:"28.06.19:",desc:"Rebasing to alpine 3.10."},{date:"23.03.19:",desc:"Switching to new Base images, shift to arm32v7 tag."},{date:"22.02.19:",desc:"Rebasing to alpine 3.9."},{date:"14.01.19:",desc:"Adding multi arch and pipeline logic"},{date:"16.08.18:",desc:"Rebase to alpine 3.8"},{date:"08.12.17:",desc:"Rebase to alpine 3.7"},{date:"29.11.17:",desc:"Add py-gdbm for subtitles support"},{date:"26.10.17:",desc:"Mediainfo moved from testing to community repo"},{date:"10.10.17:",desc:"Use repo version of mediainfo to shorten build time"},{date:"05.08.17:",desc:"Internal git pull instead of at runtime"},{date:"25.05.17:",desc:"Rebase to alpine 3.6"},{date:"07.02.17:",desc:"Rebase to alpine 3.5"},{date:"02.01.17:",desc:"Initial Release"}]}},setup:t,_id:"content:apps:medusa.json",_type:u,title:"Medusa",_source:"content",_file:"apps\u002Fmedusa.json",_extension:u}},prerenderedAt:1676483555478}}("medusa",true,false,"8081","[{{ project_name|capitalize }}]({{ project_url }}) is an automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.\n","https:\u002F\u002Fraw.githubusercontent.com\u002Flinuxserver\u002Fdocker-templates\u002Fmaster\u002Flinuxserver.io\u002Fimg\u002Fmedusa-icon.png","PUID","100","PGID","TZ","Europe\u002FLondon","Specify a timezone to use e.g. Europe\u002FLondon","\u002Fconfig","Medusa config","\u002Fdownloads","Download location","\u002Ftv","TV Shows location","The port for the Medusa webui","Web interface is at `\u003Cyour ip\u003E:8081`. \n\nSet paths for downloads, tv-shows to match docker mappings via the webui, for more information check out [{{ project_name|capitalize }}]({{ project_url }}).\n","json"))