export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT){return {data:{mastodon:{_path:"\u002Fapps\u002Fmastodon",_dir:"apps",_draft:e,_partial:e,_locale:"en",id:b,name:b,description:k,icon:l,links:[{type:"docker",url:"https:\u002F\u002Fhub.docker.com\u002Fr\u002Flinuxserver\u002Fmastodon"},{type:"docs",url:"https:\u002F\u002Fdocs.linuxserver.io\u002Fimages\u002Fdocker-mastodon"}],containers:[{name:b,image:"linuxserver\u002Fmastodon",env:[{id:m,key:m,description:"User ID",default:n},{id:o,key:o,description:"Group ID",default:n},{id:p,default:q,description:r},{id:s,default:t,description:u},{id:v,default:w,description:x},{id:y,default:z,description:A},{id:B,default:C,description:D},{id:E,default:b,description:F},{id:G,default:b,description:H},{id:I,default:b,description:J},{id:K,default:L,description:M},{id:N,default:c,description:O},{id:P,default:a,description:Q},{id:R,default:a,description:S},{id:T,default:a,description:U},{id:V,default:a,description:W},{id:X,default:Y,description:Z},{id:_,default:$,description:aa},{id:ab,default:a,description:ac},{id:ad,default:a,description:ae},{id:af,default:ag,description:ah},{id:ai,default:c,description:aj},{id:ak,default:al,description:am},{id:an,default:ao,description:ap},{id:aq,default:ar,description:as},{id:at,default:f,description:au},{id:av,default:f,description:aw},{id:ax,default:a,description:ay},{id:az,default:a,description:aA},{id:aB,default:a,description:aC},{id:aD,default:a,description:aE},{id:aF,default:c,description:aG},{id:aH,default:a,description:aI},{id:aJ,default:c,description:aK},{id:aL,default:g,description:aM},{id:aN,default:g,description:aO}],volumes:[{container:aP,description:aQ,key:"config"}],ports:[{container:i,description:h,protocol:aR,web:e},{container:j,description:h,protocol:aR,web:e}]}],meta:{"readme-vars":{project_name:b,project_url:"https:\u002F\u002Fgithub.com\u002Fmastodon\u002Fmastodon\u002F",project_logo:l,project_blurb:k,project_lsio_github_repo_url:"https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Fdocker-{{ project_name }}",available_architectures:[{arch:"{{ arch_x86_64 }}",tag:"amd64-latest"},{arch:"{{ arch_arm64 }}",tag:"arm64v8-latest"}],development_versions:d,development_versions_items:[{tag:"latest",desc:"Stable releases."},{tag:"develop",desc:"Pre-releases *only*."}],common_param_env_vars_enabled:d,param_container_name:"{{ project_name }}",param_usage_include_env:d,param_env_vars:[{env_var:p,env_value:q,desc:r},{env_var:s,env_value:t,desc:u},{env_var:v,env_value:w,desc:x},{env_var:y,env_value:z,desc:A},{env_var:B,env_value:C,desc:D},{env_var:E,env_value:b,desc:F},{env_var:G,env_value:b,desc:H},{env_var:I,env_value:b,desc:J},{env_var:K,env_value:L,desc:M},{env_var:N,env_value:c,desc:O},{env_var:P,env_value:a,desc:Q},{env_var:R,env_value:a,desc:S},{env_var:T,env_value:a,desc:U},{env_var:V,env_value:a,desc:W},{env_var:X,env_value:Y,desc:Z},{env_var:_,env_value:$,desc:aa},{env_var:ab,env_value:a,desc:ac},{env_var:ad,env_value:a,desc:ae},{env_var:af,env_value:ag,desc:ah},{env_var:ai,env_value:c,desc:aj}],opt_param_usage_include_env:d,opt_param_env_vars:[{env_var:ak,env_value:al,desc:am},{env_var:an,env_value:ao,desc:ap},{env_var:aq,env_value:ar,desc:as},{env_var:at,env_value:f,desc:au},{env_var:av,env_value:f,desc:aw},{env_var:ax,env_value:a,desc:ay},{env_var:az,env_value:a,desc:aA},{env_var:aB,env_value:a,desc:aC},{env_var:aD,env_value:a,desc:aE},{env_var:aF,env_value:c,desc:aG},{env_var:aH,env_value:a,desc:aI},{env_var:aJ,env_value:c,desc:aK},{env_var:aL,env_value:g,desc:aM},{env_var:aN,env_value:g,desc:aO}],param_usage_include_ports:d,param_ports:[{external_port:i,internal_port:i,port_desc:h},{external_port:j,internal_port:j,port_desc:h}],param_usage_include_vols:d,param_volumes:[{vol_path:aP,vol_host_path:"\u002Fpath\u002Fto\u002Fappdata\u002Fconfig",desc:aQ}],app_setup_block_enabled:d,app_setup_block:aS,changelogs:[{date:"09.01.23:",desc:"Updated nginx conf to fix bring inline with Mastodon configuration (fixes Elk integration)."},{date:"19.12.22:",desc:"Support separate sidekiq queue instances."},{date:"05.11.22:",desc:"Initial Release."}]}},setup:aS,_id:"content:apps:mastodon.json",_type:aT,title:"Mastodon",_source:"content",_file:"apps\u002Fmastodon.json",_extension:aT}},prerenderedAt:1675118189687}}("","mastodon","false",true,false,"elastic","5","Port for web frontend","80","443","[{{ project_name|capitalize }}]({{ project_url }}) is a free, open-source social network server based on ActivityPub where users can follow friends and discover new ones..\n","https:\u002F\u002Fraw.githubusercontent.com\u002Flinuxserver\u002Fdocker-templates\u002Fmaster\u002Flinuxserver.io\u002Fimg\u002Fmastodon-banner.png","PUID","100","PGID","TZ","America\u002FNew_York","Specify a timezone to use EG America\u002FNew_York","LOCAL_DOMAIN","example.com","This is the unique identifier of your server in the network. It cannot be safely changed later.","REDIS_HOST","redis","Redis server hostname","REDIS_PORT","6379","Redis port","DB_HOST","db","Postgres database hostname","DB_USER","Postgres username","DB_NAME","Postgres db name","DB_PASS","Postgres password","DB_PORT","5432","Portgres port","ES_ENABLED","Enable or disable Elasticsearch (requires a separate ES instance)","SECRET_KEY_BASE","Browser session secret. Changing it will break all active browser sessions.","OTP_SECRET","MFA secret. Changing it will break two-factor authentication.","VAPID_PRIVATE_KEY","Push notification private key. Changing it will break push notifications.","VAPID_PUBLIC_KEY","Push notification public key. Changing it will break push notifications.","SMTP_SERVER","mail.example.com","SMTP server for email notifications","SMTP_PORT","25","SMTP server port","SMTP_LOGIN","SMTP username","SMTP_PASSWORD","SMTP password","SMTP_FROM_ADDRESS","notifications@example.com","From address for emails send from Mastodon","S3_ENABLED","Enable or disable S3 storage of uploaded files","WEB_DOMAIN","mastodon.example.com","This can be set if you want your server identifier to be different to the subdomain hosting Mastodon. See [https:\u002F\u002Fdocs.joinmastodon.org\u002Fadmin\u002Fconfig\u002F#basic](https:\u002F\u002Fdocs.joinmastodon.org\u002Fadmin\u002Fconfig\u002F#basic)","ES_HOST","es","Elasticsearch server hostname","ES_PORT","9200","Elasticsearch port","ES_USER","Elasticsearch username","ES_PASS","Elasticsearch password","S3_BUCKET","S3 bucket hostname","AWS_ACCESS_KEY_ID","S3 bucket access key ID","AWS_SECRET_ACCESS_KEY","S3 bucket secret access key","S3_ALIAS_HOST","Alternate hostname for object fetching if you are front the S3 connections.","SIDEKIQ_ONLY","Only run the sidekiq service in this container instance. For large scale instances that need better queue handling.","SIDEKIQ_QUEUE","The name of the sidekiq queue to run in this container. See [notes](https:\u002F\u002Fdocs.joinmastodon.org\u002Fadmin\u002Fscaling\u002F#sidekiq-queues).","SIDEKIQ_DEFAULT","Set to `true` on the main container if you're running additional sidekiq instances. It will run the `default` queue.","SIDEKIQ_THREADS","The number of threads for sidekiq to use. See [notes](https:\u002F\u002Fdocs.joinmastodon.org\u002Fadmin\u002Fscaling\u002F#sidekiq-threads).","DB_POOL","The size of the DB connection pool, must be *at least* the same as `SIDEKIQ_THREADS`. See [notes](https:\u002F\u002Fdocs.joinmastodon.org\u002Fadmin\u002Fscaling\u002F#sidekiq-threads).","\u002Fconfig","Contains all relevant configuration files.","tcp","We provide aliases for the common commands that execute in the correct context so that environment variables from secrets are available to them:\n\n* To generate keys for `SECRET_KEY_BASE` & `OTP_SECRET` run `docker run --rm -it --entrypoint \u002Fbin\u002Fbash lscr.io\u002Flinuxserver\u002Fmastodon generate-secret` once for each.\n\n* To generate keys for `VAPID_PRIVATE_KEY` & `VAPID_PUBLIC_KEY` run `docker run --rm -it --entrypoint \u002Fbin\u002Fbash lscr.io\u002Flinuxserver\u002Fmastodon generate-vapid`\n\nBoth of the secret generation aliases above can be run without any other setup having been carried out.\n\n* To use `tootctl` you can run something like `docker exec -it lscr.io\u002Flinuxserver\u002Fmastodon \u002Ftootctl \u003Ccommand\u003E`\n\nUsing `tootctl` requires you to complete the initial Mastodon configuration first.\n\nThis container *requires* separate postgres and redis instances to run.\n\nWe support all of the official [environment variables](https:\u002F\u002Fdocs.joinmastodon.org\u002Fadmin\u002Fconfig) for configuration. In place of adding them all to your run\u002Fcompose you can use an env file such as [this example](https:\u002F\u002Fgithub.com\u002Fmastodon\u002Fmastodon\u002Fblob\u002Fmain\u002F.env.production.sample) from the upstream project.\n\nFor more information check out the [mastodon documentation](https:\u002F\u002Fdocs.joinmastodon.org\u002F).\n\n### Running separate sidekiq instances\n\nIt is currently only supported to run a single queue per container instance *or* all queues in a single container instance.\n\nAll containers must share the same `\u002Fconfig`` mount and be on a common docker network.\n\n### Strict reverse proxies\n\nThis image automatically redirects to https with a self-signed certificate. If you are using a reverse proxy which validates certificates, you need to [disable this check for the container](https:\u002F\u002Fdocs.linuxserver.io\u002Ffaq#strict-proxy).\n","json"))