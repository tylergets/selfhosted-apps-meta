export default (function(a,b,c,d,e,f){return {data:{ffmpeg:{_path:"\u002Fapps\u002Fffmpeg",_dir:"apps",_draft:b,_partial:b,_locale:"en",id:a,name:a,icon:"https:\u002F\u002Fraw.githubusercontent.com\u002Fwalkxcode\u002Fdashboard-icons\u002Fmain\u002Fpng\u002Fffmpeg.png",links:[{type:"docker",url:"https:\u002F\u002Fhub.docker.com\u002Fr\u002Flinuxserver\u002Fffmpeg"},{type:"docs",url:"https:\u002F\u002Fdocs.linuxserver.io\u002Fimages\u002Fdocker-ffmpeg"}],containers:[{name:a,image:"linuxserver\u002Fffmpeg",env:[{id:c,key:c,description:"User ID",default:d},{id:e,key:e,description:"Group ID",default:d}]}],meta:{"readme-vars":{project_name:a,full_custom_readme:"{% raw -%}\n[![linuxserver.io](https:\u002F\u002Fraw.githubusercontent.com\u002Flinuxserver\u002Fdocker-templates\u002Fmaster\u002Flinuxserver.io\u002Fimg\u002Flinuxserver_medium.png)](https:\u002F\u002Flinuxserver.io)\n\n[![Blog](https:\u002F\u002Fimg.shields.io\u002Fstatic\u002Fv1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=Blog)](https:\u002F\u002Fblog.linuxserver.io \"all the things you can do with our containers including How-To guides, opinions and much more!\")\n[![Discord](https:\u002F\u002Fimg.shields.io\u002Fdiscord\u002F354974912613449730.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=Discord&logo=discord)](https:\u002F\u002Fdiscord.gg\u002FYWrKVTn \"realtime support \u002F chat with the community and the team.\")\n[![Discourse](https:\u002F\u002Fimg.shields.io\u002Fdiscourse\u002Fhttps\u002Fdiscourse.linuxserver.io\u002Ftopics.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&logo=discourse)](https:\u002F\u002Fdiscourse.linuxserver.io \"post on our community forum.\")\n[![Fleet](https:\u002F\u002Fimg.shields.io\u002Fstatic\u002Fv1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=Fleet)](https:\u002F\u002Ffleet.linuxserver.io \"an online web interface which displays all of our maintained images.\")\n[![GitHub](https:\u002F\u002Fimg.shields.io\u002Fstatic\u002Fv1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=GitHub&logo=github)](https:\u002F\u002Fgithub.com\u002Flinuxserver \"view the source for all of our repositories.\")\n[![Open Collective](https:\u002F\u002Fimg.shields.io\u002Fopencollective\u002Fall\u002Flinuxserver.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=Supporters&logo=open%20collective)](https:\u002F\u002Fopencollective.com\u002Flinuxserver \"please consider helping us by either donating or contributing to our budget\")\n\nThe [LinuxServer.io](https:\u002F\u002Flinuxserver.io) team brings you another container release featuring :-\n\n * regular and timely application updates\n * easy user mappings (PGID, PUID)\n * custom base image with s6 overlay\n * weekly base OS updates with common layers across the entire LinuxServer.io ecosystem to minimise space usage, down time and bandwidth\n * regular security updates\n\nFind us at:\n* [Blog](https:\u002F\u002Fblog.linuxserver.io) - all the things you can do with our containers including How-To guides, opinions and much more!\n* [Discord](https:\u002F\u002Fdiscord.gg\u002FYWrKVTn) - realtime support \u002F chat with the community and the team.\n* [Discourse](https:\u002F\u002Fdiscourse.linuxserver.io) - post on our community forum.\n* [Fleet](https:\u002F\u002Ffleet.linuxserver.io) - an online web interface which displays all of our maintained images.\n* [Podcast](https:\u002F\u002Fanchor.fm\u002Flinuxserverio) - on hiatus. Coming back soon (late 2018).\n* [Open Collective](https:\u002F\u002Fopencollective.com\u002Flinuxserver) - please consider helping us by either donating or contributing to our budget\n\n[![Scarf.io pulls](https:\u002F\u002Fscarf.sh\u002Finstalls-badge\u002Flinuxserver-ci\u002Flinuxserver%2Fffmpeg?color=94398d&label-color=555555&logo-color=ffffff&style=for-the-badge&package-type=docker)](https:\u002F\u002Fscarf.sh\u002Fgateway\u002Flinuxserver-ci\u002Fdocker\u002Flinuxserver%2Fffmpeg)\n[![GitHub Stars](https:\u002F\u002Fimg.shields.io\u002Fgithub\u002Fstars\u002Flinuxserver\u002Fdocker-ffmpeg.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&logo=github)](https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Fdocker-ffmpeg)\n[![GitHub Release](https:\u002F\u002Fimg.shields.io\u002Fgithub\u002Frelease\u002Flinuxserver\u002Fdocker-ffmpeg.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&logo=github)](https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Fdocker-ffmpeg\u002Freleases)\n[![GitHub Package Repository](https:\u002F\u002Fimg.shields.io\u002Fstatic\u002Fv1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=GitHub%20Package&logo=github)](https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Fdocker-ffmpeg\u002Fpackages)\n[![GitLab Container Registry](https:\u002F\u002Fimg.shields.io\u002Fstatic\u002Fv1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=GitLab%20Registry&logo=gitlab)](https:\u002F\u002Fgitlab.com\u002Flinuxserver.io\u002Fdocker-ffmpeg\u002Fcontainer_registry)\n[![Quay.io](https:\u002F\u002Fimg.shields.io\u002Fstatic\u002Fv1.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=linuxserver.io&message=Quay.io)](https:\u002F\u002Fquay.io\u002Frepository\u002Flinuxserver.io\u002Fffmpeg)\n[![Docker Pulls](https:\u002F\u002Fimg.shields.io\u002Fdocker\u002Fpulls\u002Flinuxserver\u002Fffmpeg.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=pulls&logo=docker)](https:\u002F\u002Fhub.docker.com\u002Fr\u002Flinuxserver\u002Fffmpeg)\n[![Docker Stars](https:\u002F\u002Fimg.shields.io\u002Fdocker\u002Fstars\u002Flinuxserver\u002Fffmpeg.svg?color=94398d&labelColor=555555&logoColor=ffffff&style=for-the-badge&label=stars&logo=docker)](https:\u002F\u002Fhub.docker.com\u002Fr\u002Flinuxserver\u002Fffmpeg)\n[![Jenkins Build](https:\u002F\u002Fimg.shields.io\u002Fjenkins\u002Fbuild?labelColor=555555&logoColor=ffffff&style=for-the-badge&jobUrl=https%3A%2F%2Fci.linuxserver.io%2Fjob%2FDocker-Pipeline-Builders%2Fjob%2Fdocker-ffmpeg%2Fjob%2Fmaster%2F&logo=jenkins)](https:\u002F\u002Fci.linuxserver.io\u002Fjob\u002FDocker-Pipeline-Builders\u002Fjob\u002Fdocker-ffmpeg\u002Fjob\u002Fmaster\u002F)\n\n[FFmpeg](https:\u002F\u002Fffmpeg.org) - A complete, cross-platform solution to record, convert and stream audio and video.\n\n\n[![ffmpeg](https:\u002F\u002Fraw.githubusercontent.com\u002Flinuxserver\u002Fdocker-templates\u002Fmaster\u002Flinuxserver.io\u002Fimg\u002Fffmpeg.png)](https:\u002F\u002Fffmpeg.org)\n\n## Supported Architectures\n\nWe utilise the docker manifest for multi-platform awareness. More information is available from docker [here](https:\u002F\u002Fgithub.com\u002Fdocker\u002Fdistribution\u002Fblob\u002Fmaster\u002Fdocs\u002Fspec\u002Fmanifest-v2-2.md#manifest-list) and our announcement [here](https:\u002F\u002Fblog.linuxserver.io\u002F2019\u002F02\u002F21\u002Fthe-lsio-pipeline-project\u002F).\n\nSimply pulling `lscr.io\u002Flinuxserver\u002Fffmpeg:latest` should retrieve the correct image for your arch, but you can also pull specific arch images via tags.\n\nThe architectures supported by this image are:\n\n| Architecture | Available | Tag |\n| :----: | :----: | ---- |\n| x86-64 | ✅ | amd64-\\\u003Cversion tag\\\u003E |\n| arm64 | ✅ | arm64v8-\\\u003Cversion tag\\\u003E |\n| armhf| ✅ | arm32v7-\\\u003Cversion tag\\\u003E |\n\n## Usage\n\nUnlike most of our container library this image is meant to be run ephemerally from the command line parsing user input for a custom FFmpeg command. You will need to understand some Docker basics to use this image and be familiar with how to construct an FFmpeg command. In the commands below we will be bind mounting our current working directory from the CLI to \u002Fconfig, the assumption is that input.mkv is in your current working directory.\n\nIf an input file is detected we will run FFmpeg as that user\u002Fgroup so the output file will match it's permissions.\nThe image supports Hardware acceleration on x86 pay close attention to the variables for the examples below.\n\n### Basic Transcode\n\n```\ndocker run --rm -it \\\n  -v $(pwd):\u002Fconfig \\\n  linuxserver\u002Fffmpeg \\\n  -i \u002Fconfig\u002Finput.mkv \\\n  -c:v libx264 \\\n  -b:v 4M \\\n  -vf scale=1280:720 \\\n  -c:a copy \\\n  \u002Fconfig\u002Foutput.mkv\n```\n\n### Hardware accelerated (VAAPI)\n\n```\ndocker run --rm -it \\\n  --device=\u002Fdev\u002Fdri:\u002Fdev\u002Fdri \\\n  -v $(pwd):\u002Fconfig \\\n  linuxserver\u002Fffmpeg \\\n  -vaapi_device \u002Fdev\u002Fdri\u002FrenderD128 \\\n  -i \u002Fconfig\u002Finput.mkv \\\n  -c:v h264_vaapi \\\n  -b:v 4M \\\n  -vf 'format=nv12|vaapi,hwupload,scale_vaapi=w=1280:h=720' \\\n  -c:a copy \\\n  \u002Fconfig\u002Foutput.mkv\n```\n\n### Nvidia Hardware accelerated\n\n```\ndocker run --rm -it \\\n  --runtime=nvidia \\\n  -v $(pwd):\u002Fconfig \\\n  linuxserver\u002Fffmpeg \\\n  -hwaccel nvdec \\\n  -i \u002Fconfig\u002Finput.mkv \\\n  -c:v h264_nvenc \\\n  -b:v 4M \\\n  -vf scale=1280:720 \\\n  -c:a copy \\\n  \u002Fconfig\u002Foutput.mkv\n```\n\n## Building locally\n\nIf you want to make local modifications to these images for development purposes or just to customize the logic:\n```\ngit clone https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Fdocker-ffmpeg.git\ncd docker-ffmpeg\ndocker build \\\n  --no-cache \\\n  --pull \\\n  -t linuxserver\u002Fffmpeg:latest .\n```\n\nThe ARM variants can be built on x86_64 hardware using `multiarch\u002Fqemu-user-static`\n```\ndocker run --rm --privileged multiarch\u002Fqemu-user-static:register --reset\n```\n\nOnce registered you can define the dockerfile to use with `-f Dockerfile.aarch64`.\n\n## Versions\n\n* **14.12.22:** - Rebase to Jammy, bump to 5.1.2.\n* **19.06.22:** - Rebase to Focal.\n* **26.08.21:** - Add support for libOpenCL.\n* **01.07.21:** - Bump to 4.4.\n* **17.06.20:** - Bump to 4.3.\n* **16.06.20:** - Add support for libvmaf.\n* **01.08.19:** - Initial release.\n{%- endraw %}\n"}},_id:"content:apps:ffmpeg.json",_type:f,title:"Ffmpeg",_source:"content",_file:"apps\u002Fffmpeg.json",_extension:f}},prerenderedAt:1676483555161}}("ffmpeg",false,"PUID","100","PGID","json"))