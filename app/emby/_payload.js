export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C){return {data:{emby:{_path:"\u002Fapps\u002Femby",_dir:"apps",_draft:b,_partial:b,_locale:"en",id:c,name:c,description:h,icon:i,links:[{type:"docker",url:"https:\u002F\u002Fhub.docker.com\u002Fr\u002Flinuxserver\u002Femby"},{type:"docs",url:"https:\u002F\u002Fdocs.linuxserver.io\u002Fimages\u002Fdocker-emby"}],containers:[{name:c,image:"linuxserver\u002Femby",env:[{id:j,key:j,description:"User ID",default:k},{id:l,key:l,description:"Group ID",default:k},{id:m,default:n,description:o}],volumes:[{container:e,description:p},{container:q,description:r,key:"config"},{container:s,description:d},{container:t,description:d}],ports:[{container:f,description:u,protocol:"tcp",web:b}]}],meta:{"readme-vars":{project_name:c,project_url:"https:\u002F\u002Femby.media\u002F",project_logo:i,project_lsio_github_repo_url:"https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Fdocker-{{ project_name }}",project_blurb:h,available_architectures:[{arch:"{{ arch_x86_64 }}",tag:"amd64-latest"},{arch:"{{ arch_arm64 }}",tag:"arm64v8-latest"},{arch:"{{ arch_armhf }}",tag:"arm32v7-latest"}],development_versions:a,development_versions_items:[{tag:"latest",desc:"Stable emby releases"},{tag:"beta",desc:"Beta emby releases"}],common_param_env_vars_enabled:a,param_container_name:"{{ project_name }}",param_usage_include_vols:a,param_volumes:[{vol_path:q,vol_host_path:"\u002Fpath\u002Fto\u002Flibrary",desc:r},{vol_path:s,vol_host_path:"\u002Fpath\u002Fto\u002Ftvshows",desc:d},{vol_path:t,vol_host_path:"\u002Fpath\u002Fto\u002Fmovies",desc:d}],param_usage_include_ports:a,param_ports:[{external_port:f,internal_port:f,port_desc:u}],param_usage_include_env:a,param_env_vars:[{env_var:m,env_value:n,desc:o}],opt_param_usage_include_env:b,opt_param_env_vars:null,opt_param_usage_include_vols:a,opt_param_volumes:[{vol_path:e,vol_host_path:e,desc:p}],opt_param_device_map:a,opt_param_devices:[{device_path:v,device_host_path:v,desc:"Only needed if you want to use your Intel or AMD GPU for hardware accelerated video encoding (vaapi)."},{device_path:w,device_host_path:w,desc:"Only needed if you want to use your Raspberry Pi OpenMax video encoding (Bellagio)."},{device_path:x,device_host_path:x,desc:g},{device_path:y,device_host_path:y,desc:g},{device_path:z,device_host_path:z,desc:g}],opt_param_usage_include_ports:a,opt_param_ports:[{external_port:A,internal_port:A,port_desc:"Https webUI (you need to setup your own certificate)."}],unraid_template_sync:b,app_setup_block_enabled:a,app_setup_block:B,changelogs:[{date:"26.09.22:",desc:"Update chown behavior."},{date:"18.09.22:",desc:"Migrate to s6v3, rebase to Ubuntu Jammy."},{date:"19.05.21:",desc:"Structural changes upstream."},{date:"17.01.21:",desc:"Deprecate `UMASK_SET` in favor of UMASK in baseimage, see above for more information. Remove no longer used mapping for \u002Ftranscode."},{date:"21.12.20:",desc:"Rebase to Focal, see [here](https:\u002F\u002Fdocs.linuxserver.io\u002Ffaq#my-host-is-incompatible-with-images-based-on-ubuntu-focal) for troubleshooting armhf."},{date:"03.11.20:",desc:"Fix issue with missing samba folder."},{date:"13.11.20:",desc:"Fix issue with samba and ffmpeg."},{date:"03.07.20:",desc:"Add support for amd vaapi hw transcode."},{date:"29.02.20:",desc:"Add v4l2 support on Raspberry Pi."},{date:"26.02.20:",desc:"Add openmax support on Raspberry Pi."},{date:"15.02.20:",desc:"Allow restarting emby from the gui (also allows for auto restarts after addon updates)."},{date:"02.10.19:",desc:"Improve permission fixing for render and dvb devices."},{date:"13.08.19:",desc:"Add umask environment variable."},{date:"24.06.19:",desc:"Fix typos in readme."},{date:"30.05.19:",desc:"Initial release."}]}},setup:B,_id:"content:apps:emby.json",_type:C,title:"Emby",_source:"content",_file:"apps\u002Femby.json",_extension:C}},prerenderedAt:1675118189354}}(true,false,"emby","Media goes here. Add as many as needed e.g. `\u002Fdata\u002Fmovies`, `\u002Fdata\u002Ftv`, etc.","\u002Fopt\u002Fvc\u002Flib","8096","Only needed if you want to use your Raspberry Pi V4L2 video encoding.","[{{ project_name|capitalize }}]({{ project_url }}) organizes video, music, live TV, and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone emby Media Server.","https:\u002F\u002Fraw.githubusercontent.com\u002Flinuxserver\u002Fdocker-templates\u002Fmaster\u002Flinuxserver.io\u002Fimg\u002Femby-logo.png","PUID","100","PGID","TZ","Europe\u002FLondon","Specify a timezone to use EG Europe\u002FLondon","Path for Raspberry Pi OpenMAX libs *optional*.","\u002Fconfig","Emby data storage location. *This can grow very large, 50gb+ is likely for a large collection.*","\u002Fdata\u002Ftvshows","\u002Fdata\u002Fmovies","Http webUI.","\u002Fdev\u002Fdri","\u002Fdev\u002Fvchiq","\u002Fdev\u002Fvideo10","\u002Fdev\u002Fvideo11","\u002Fdev\u002Fvideo12","8920","Webui can be found at `http:\u002F\u002F\u003Cyour-ip\u003E:8096`\n\nEmby has very complete and verbose documentation located [here](https:\u002F\u002Fgithub.com\u002FMediaBrowser\u002FWiki\u002Fwiki) .\n\nHardware acceleration users for Intel Quicksync and AMD VAAPI will need to mount their \u002Fdev\u002Fdri video device inside of the container by passing the following command when running or creating the container:\n\n```--device=\u002Fdev\u002Fdri:\u002Fdev\u002Fdri```\n\nWe will automatically ensure the abc user inside of the container has the proper permissions to access this device.\n\nHardware acceleration users for Nvidia will need to install the container runtime provided by Nvidia on their host, instructions can be found here:\n\nhttps:\u002F\u002Fgithub.com\u002FNVIDIA\u002Fnvidia-docker\n\nWe automatically add the necessary environment variable that will utilise all the features available on a GPU on the host. Once nvidia-docker is installed on your host you will need to re\u002Fcreate the docker container with the nvidia container runtime `--runtime=nvidia` and add an environment variable `-e NVIDIA_VISIBLE_DEVICES=all` (can also be set to a specific gpu's UUID, this can be discovered by running `nvidia-smi --query-gpu=gpu_name,gpu_uuid --format=csv` ). NVIDIA automatically mounts the GPU and drivers from your host into the emby docker.\n\n### OpenMAX (Raspberry Pi)\n\nHardware acceleration users for Raspberry Pi OpenMAX will need to mount their \u002Fdev\u002Fvchiq video device inside of the container and their system OpenMax libs by passing the following options when running or creating the container:\n```\n--device=\u002Fdev\u002Fvchiq:\u002Fdev\u002Fvchiq\n-v \u002Fopt\u002Fvc\u002Flib:\u002Fopt\u002Fvc\u002Flib\n```\n\n### V4L2 (Raspberry Pi)\n\nHardware acceleration users for Raspberry Pi V4L2 will need to mount their \u002Fdev\u002Fvideo1X devices inside of the container by passing the following options when running or creating the container:\n```\n--device=\u002Fdev\u002Fvideo10:\u002Fdev\u002Fvideo10\n--device=\u002Fdev\u002Fvideo11:\u002Fdev\u002Fvideo11\n--device=\u002Fdev\u002Fvideo12:\u002Fdev\u002Fvideo12\n```\n","json"))