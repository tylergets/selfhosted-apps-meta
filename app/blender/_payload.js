export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x){return {data:{blender:{_path:"\u002Fapps\u002Fblender",_dir:"apps",_draft:b,_partial:b,_locale:"en",id:c,name:c,description:e,icon:f,links:[{type:"docker",url:"https:\u002F\u002Fhub.docker.com\u002Fr\u002Flinuxserver\u002Fblender"},{type:"docs",url:"https:\u002F\u002Fdocs.linuxserver.io\u002Fimages\u002Fdocker-blender"}],containers:[{name:c,image:"linuxserver\u002Fblender",env:[{id:g,key:g,description:"User ID",default:h},{id:i,key:i,description:"Group ID",default:h},{id:j,default:k,description:l},{id:m,default:n,description:o},{id:p,default:q,description:r}],volumes:[{container:s,description:t,key:"config"}],ports:[{container:d,description:u,protocol:"tcp",web:b}]}],meta:{"readme-vars":{project_name:c,project_url:"https:\u002F\u002Fwww.blender.org\u002F",project_logo:f,project_blurb:e,project_lsio_github_repo_url:"https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Fdocker-{{ project_name }}",project_blurb_optional_extras_enabled:b,available_architectures:[{arch:"{{ arch_x86_64 }}",tag:"latest"},{arch:"{{ arch_arm64 }}",tag:"arm64v8-latest"},{arch:"{{ arch_armhf }}",tag:"arm32v7-latest"}],development_versions:b,common_param_env_vars_enabled:a,param_container_name:"{{ project_name }}",param_usage_include_env:a,param_env_vars:[{env_var:j,env_value:k,desc:l}],param_usage_include_vols:a,param_volumes:[{vol_path:s,vol_host_path:"\u002Fpath\u002Fto\u002Fconfig",desc:t}],param_usage_include_ports:a,param_ports:[{external_port:d,internal_port:d,port_desc:u}],opt_param_usage_include_env:a,opt_param_env_vars:[{env_var:m,env_value:n,desc:o},{env_var:p,env_value:q,desc:r}],opt_param_device_map:a,opt_param_devices:[{device_path:v,device_host_path:v,desc:"Add this for hardware acceleration (Linux hosts only)"}],opt_security_opt_param:a,opt_security_opt_param_vars:[{run_var:"seccomp=unconfined",compose_var:"seccomp:unconfined",desc:"For Docker Engine only, this may be required depending on your Docker and storage configuration."}],app_setup_block_enabled:a,app_setup_block:w,changelogs:[{date:"13.12.22:",desc:"Rebase to Jammy, migrate to s6v3."},{date:"06.05.22:",desc:"Use the full semver version in image tags. Arm32\u002F64 version tags are inaccurate due to installing from ubuntu repo, which is usually behind."},{date:"12.03.22:",desc:"Initial Release."}]}},setup:w,_id:"content:apps:blender.json",_type:x,title:"Blender",_source:"content",_file:"apps\u002Fblender.json",_extension:x}},prerenderedAt:1675118189133}}(true,false,"blender","3000","[Blender]({{ project_url }}) is a free and open-source 3D computer graphics software toolset used for creating animated films, visual effects, art, 3D printed models, motion graphics, interactive 3D applications, virtual reality, and computer games. **This image does not support GPU rendering out of the box only accelerated workspace experience**","https:\u002F\u002Fraw.githubusercontent.com\u002Flinuxserver\u002Fdocker-templates\u002Fmaster\u002Flinuxserver.io\u002Fimg\u002Fblender-logo.png","PUID","100","PGID","TZ","Europe\u002FLondon","Specify a timezone to use EG Europe\u002FLondon","SUBFOLDER","\u002F","Specify a subfolder to use with reverse proxies, IE `\u002Fsubfolder\u002F`","KEYBOARD","en-us-qwerty","See the keyboard layouts section for more information and options.","\u002Fconfig","Users home directory in the container, stores local files and settings","Blender desktop gui","\u002Fdev\u002Fdri","The application can be accessed at:\n* http:\u002F\u002Fyourhost:3000\u002F\n\nBy default the user\u002Fpass is abc\u002Fabc, if you change your password or want to login manually to the GUI session for any reason use the following link:\n\n* http:\u002F\u002Fyourhost:3000\u002F?login=true\n\nYou can also force login on the '\u002F' path without this parameter by passing the environment variable `-e AUTO_LOGIN=false`.\n\n## Hardware Acceleration\n\nThis only applies to your desktop experience, this container is capable of supporting accelerated rendering with \u002Fdev\u002Fdri mounted in, but the AMD HIP and Nvidia CUDA runtimes are massive which are not installed by default in this container.\n\n### Intel\u002FATI\u002FAMD\n\nTo leverage hardware acceleration you will need to mount \u002Fdev\u002Fdri video device inside of the conainer.\n```\n--device=\u002Fdev\u002Fdri:\u002Fdev\u002Fdri\n```\nWe will automatically ensure the abc user inside of the container has the proper permissions to access this device.\n\n### Nvidia\n\nHardware acceleration users for Nvidia will need to install the container runtime provided by Nvidia on their host, instructions can be found here:\nhttps:\u002F\u002Fgithub.com\u002FNVIDIA\u002Fnvidia-docker\n\nWe automatically add the necessary environment variable that will utilise all the features available on a GPU on the host. Once nvidia-docker is installed on your host you will need to re\u002Fcreate the docker container with the nvidia container runtime `--runtime=nvidia` and add an environment variable `-e NVIDIA_VISIBLE_DEVICES=all` (can also be set to a specific gpu's UUID, this can be discovered by running `nvidia-smi --query-gpu=gpu_name,gpu_uuid --format=csv` ). NVIDIA automatically mounts the GPU and drivers from your host into the container.\n\n### Arm Devices\n\nArm devices can run this image, but generally should not mount in \u002Fdev\u002Fdri. The OpenGL ES version is not high enough to run Blender. The program can run on these platforms though, leveraging CPU LLVMPipe rendering.\n\nDue to lack of arm32\u002F64 binaries from the upstream project, our arm32\u002F64 images install the latest version from the ubuntu repo, which is usually behind and thus the version the image is tagged with does not match the version contained.\n\n#### Keyboard Layouts\n\nThis should match the layout on the computer you are accessing the container from.\nThe keyboard layouts available for use are:\n* da-dk-qwerty- Danish keyboard\n* de-ch-qwertz- Swiss German keyboard (qwertz)\n* de-de-qwertz- German keyboard (qwertz) - **OSK available**\n* en-gb-qwerty- English (UK) keyboard\n* en-us-qwerty- English (US) keyboard - **OSK available** **DEFAULT**\n* es-es-qwerty- Spanish keyboard - **OSK available**\n* fr-ch-qwertz- Swiss French keyboard (qwertz)\n* fr-fr-azerty- French keyboard (azerty) - **OSK available**\n* it-it-qwerty- Italian keyboard - **OSK available**\n* ja-jp-qwerty- Japanese keyboard\n* pt-br-qwerty- Portuguese Brazilian keyboard\n* sv-se-qwerty- Swedish keyboard\n* tr-tr-qwerty- Turkish-Q keyboard\n","json"))