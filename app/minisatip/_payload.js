export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H){return {data:{minisatip:{_path:"\u002Fapps\u002Fminisatip",_dir:"apps",_draft:a,_partial:a,_locale:"en",id:c,name:c,description:h,icon:i,links:[{type:"docker",url:"https:\u002F\u002Fhub.docker.com\u002Fr\u002Flinuxserver\u002Fminisatip"},{type:"docs",url:"https:\u002F\u002Fdocs.linuxserver.io\u002Fimages\u002Fdocker-minisatip"}],containers:[{name:c,image:"linuxserver\u002Fminisatip",env:[{id:j,key:j,description:"User ID",default:k},{id:l,key:l,description:"Group ID",default:k},{id:m,default:n,description:o},{id:p,default:q,description:r},{id:s,default:t,description:u}],volumes:[{container:d,description:v,key:w},{container:d,description:x,key:w}],ports:[{container:e,description:y,protocol:f,web:a},{container:g,description:z,protocol:f,web:a},{container:A,description:B,protocol:f,web:a}]}],meta:{"readme-vars":{project_name:c,project_url:"https:\u002F\u002Fgithub.com\u002Fcatalinii\u002Fminisatip",project_logo:i,project_blurb:h,project_lsio_github_repo_url:"https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Fdocker-{{ project_name }}",project_blurb_optional_extras_enabled:a,available_architectures:[{arch:"{{ arch_x86_64 }}",tag:"amd64-latest"},{arch:"{{ arch_arm64 }}",tag:"arm64v8-latest"},{arch:"{{ arch_armhf }}",tag:"arm32v7-latest"}],development_versions:a,common_param_env_vars_enabled:b,param_container_name:"{{ project_name }}",param_usage_include_net:a,param_usage_include_env:b,param_env_vars:[{env_var:m,env_value:n,desc:o},{env_var:p,env_value:q,desc:r}],param_usage_include_vols:b,param_volumes:[{vol_path:d,vol_host_path:C,desc:x}],param_usage_include_ports:b,param_ports:[{external_port:e,internal_port:e,port_desc:y},{external_port:g,internal_port:g,port_desc:z},{external_port:"1900",internal_port:A,port_desc:B}],param_device_map:b,param_devices:[{device_path:D,device_host_path:D,desc:"For passing through Tv-cards"}],cap_add_param:a,opt_param_usage_include_env:a,opt_param_env_vars:[{env_var:s,env_value:t,desc:u}],opt_param_usage_include_vols:a,opt_param_volumes:[{vol_path:d,vol_host_path:C,desc:v}],opt_param_usage_include_ports:a,opt_param_ports:[{external_port:E,internal_port:E,port_desc:"Application WebUI"}],opt_param_device_map:a,opt_param_devices:[{device_path:F,device_host_path:F,desc:"For hardware transcoding"}],opt_cap_add_param:a,optional_block_1:b,optional_block_1_items:["### Additional runtime parameters\n\nIn some cases it might be necessary to start minisatip with additional parameters, for example to configure a unicable LNB. Add the parameters you need and restart the container. Be sure to have the right parameters set as adding the wrong once might lead to the container not starting correctly.\nFor a list of minisatip parameters visit [{{ project_name|capitalize }}]({{ project_url }}) page.\n"],app_setup_block_enabled:b,app_setup_block:G,changelogs:[{date:"12.11.22:",desc:"Rebasing to alpine 3.137, upgrading to s6v3."},{date:"23.01.21:",desc:"Rebasing to alpine 3.13."},{date:"01.06.20:",desc:"Rebasing to alpine 3.12."},{date:"19.12.19:",desc:"Rebasing to alpine 3.11."},{date:"28.06.19:",desc:"Rebasing to alpine 3.10."},{date:"23.03.19:",desc:"Switching to new Base images, shift to arm32v7 tag."},{date:"22.02.19:",desc:"Rebasing to alpine 3.9."},{date:"20.02.19:",desc:"Fix run options."},{date:"11.02.19:",desc:"Add pipeline logic and multi arch."},{date:"28.08.18:",desc:"Rebase to Alpine 3.8."},{date:"13.12.17:",desc:"Rebase to Alpine 3.7."},{date:"28.05.17:",desc:"Rebase to Alpine 3.6."},{date:"08.02.17:",desc:"Rebase to Alpine 3.5 and only compile libs in dvb-apps."},{date:"14.10.16:",desc:"Add version layer information."},{date:"18.09.16:",desc:"Add support for Common Interface."},{date:"11.09.16:",desc:"Add layer badges to README."},{date:"28.08.16:",desc:"Add badges to README."},{date:"15.08.16:",desc:"Initial Release."}]}},setup:G,_id:"content:apps:minisatip.json",_type:H,title:"Minisatip",_source:"content",_file:"apps\u002Fminisatip.json",_extension:H}},prerenderedAt:1675118189712}}(false,true,"minisatip","\u002Fconfig","8875","tcp","554","[{{ project_name|capitalize }}]({{ project_url }}) is a multi-threaded satip server version 1.2 that runs under Linux and it was tested with DVB-S, DVB-S2, DVB-T, DVB-T2, DVB-C, DVB-C2, ATSC and ISDB-T cards.","https:\u002F\u002Fraw.githubusercontent.com\u002Flinuxserver\u002Fdocker-templates\u002Fmaster\u002Flinuxserver.io\u002Fimg\u002Fminisatip-icon.png","PUID","100","PGID","TZ","Europe\u002FLondon","Specify a timezone to use EG Europe\u002FLondon.","RUN_OPTS","","Specify specific run params for minisatip","VERSION","latest","Supported values are LATEST, PLEXPASS or a specific version number.","Configuration files.","config","Configuration files and minisatip data","Status Page WebUI","RTSP Port","1900\u002Fudp","App Discovery","\u002Fpath\u002Fto\u002Fappdata\u002Fconfig","\u002Fdev\u002Fdvb","80","\u002Fdev\u002Fdri","Best used in conjunction with [tvheadend](https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Fdocker-tvheadend)\n\nThere is no setup per se, other than adding your cards for passthrough.\n\nYou can then use your cards as DVB inputs in apps such as tvheadend.\n","json"))