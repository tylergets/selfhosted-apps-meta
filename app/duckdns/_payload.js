export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x){return {data:{duckdns:{_path:"\u002Fapps\u002Fduckdns",_dir:"apps",_draft:a,_partial:a,_locale:"en",id:c,name:c,description:e,icon:f,links:[{type:"docker",url:"https:\u002F\u002Fhub.docker.com\u002Fr\u002Flinuxserver\u002Fduckdns"},{type:"docs",url:"https:\u002F\u002Fdocs.linuxserver.io\u002Fimages\u002Fdocker-duckdns"}],containers:[{name:c,image:"linuxserver\u002Fduckdns",env:[{id:g,key:g,description:"User ID",default:h},{id:i,key:i,description:"Group ID",default:h},{id:j,default:k,description:l},{id:m,default:n,description:o},{id:p,default:q,description:r},{id:s,default:t,description:u}]}],meta:{"readme-vars":{project_name:c,project_url:"https:\u002F\u002Fduckdns.org\u002F",project_logo:f,project_blurb:e,project_lsio_github_repo_url:"https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Fdocker-{{ project_name }}",available_architectures:[{arch:"{{ arch_x86_64 }}",tag:"amd64-latest"},{arch:"{{ arch_arm64 }}",tag:"arm64v8-latest"},{arch:"{{ arch_armhf }}",tag:"arm32v7-latest"}],development_versions:a,development_versions_items:b,common_param_env_vars_enabled:"optional",param_container_name:"{{ project_name }}",param_usage_include_net:a,param_net:b,param_net_desc:b,param_usage_include_env:d,param_env_vars:[{env_var:j,env_value:k,desc:l},{env_var:m,env_value:n,desc:o},{env_var:p,env_value:q,desc:r}],param_usage_include_vols:a,param_volumes:b,param_usage_include_ports:a,param_ports:b,param_device_map:a,param_devices:b,cap_add_param:a,cap_add_param_vars:b,opt_param_usage_include_env:d,opt_param_env_vars:[{env_var:s,env_value:t,desc:u}],opt_param_usage_include_vols:d,opt_param_volumes:[{vol_path:"\u002Fconfig",vol_host_path:"\u002Fpath\u002Fto\u002Fappdata\u002Fconfig",desc:"Used in conjunction with logging to file."}],opt_param_usage_include_ports:a,opt_param_ports:b,opt_param_device_map:a,opt_param_devices:b,opt_cap_add_param:a,opt_cap_add_param_vars:b,optional_block_1:a,optional_block_1_items:b,app_setup_block_enabled:d,app_setup_block:v,changelogs:[{date:"23.09.22:",desc:"Rebase to alpine 3.16 and s6v3."},{date:"19.09.22:",desc:"Rebase to alpine 3.15."},{date:w,desc:"Don't allow insecure connections and add timeout."},{date:w,desc:"Add random jitter to update time."},{date:"23.02.22:",desc:"Append to log file instead of overwriting every time."},{date:"03.05.21:",desc:"Re-adjust cron timings to prevent peak times, update code formatting."},{date:"23.01.21:",desc:"Rebasing to alpine 3.13."},{date:"01.06.20:",desc:"Rebasing to alpine 3.12."},{date:"13.04.20:",desc:"Add donation links for DuckDNS."},{date:"19.12.19:",desc:"Rebasing to alpine 3.11."},{date:"24.09.19:",desc:"Fix perms on github and remove chmod that can stall the container."},{date:"28.06.19:",desc:"Rebasing to alpine 3.10."},{date:"23.03.19:",desc:"Switching to new Base images, shift to arm32v7 tag."},{date:"22.02.19:",desc:"Rebasing to alpine 3.9."},{date:"08.02.19:",desc:"Update readme with optional parameters."},{date:"10.12.18:",desc:"Fix docker compose example."},{date:"15.10.18:",desc:"Multi-arch image."},{date:"22.08.18:",desc:"Rebase to alpine 3.8."},{date:"08.12.17:",desc:"Rebase to alpine 3.7."},{date:"28.05.17:",desc:"Rebase to alpine 3.6."},{date:"09.02.17:",desc:"Rebase to alpine 3.5."},{date:"17.11.16:",desc:"Initial release."}]}},setup:v,_id:"content:apps:duckdns.json",_type:x,title:"Duckdns",_source:"content",_file:"apps\u002Fduckdns.json",_extension:x}},prerenderedAt:1676483555085}}(false,"","duckdns",true,"[{{ project_name|capitalize }}]({{ project_url }}) is a free service which will point a DNS (sub domains of duckdns.org) to an IP of your choice. The service is completely free, and doesn't require reactivation or forum posts to maintain its existence.","https:\u002F\u002Fraw.githubusercontent.com\u002Flinuxserver\u002Fdocker-templates\u002Fmaster\u002Flinuxserver.io\u002Fimg\u002Fduckdns.png","PUID","100","PGID","TZ","Europe\u002FLondon","Specify a timezone to use EG Europe\u002FLondon","SUBDOMAINS","subdomain1,subdomain2","multiple subdomains allowed, comma separated, no spaces","TOKEN","token","DuckDNS token","LOG_FILE","false","Set to `true` to log to file (also need to map \u002Fconfig).","- Go to the [duckdns website]({{project_url}}), register your subdomain(s) and retrieve your token\n- Create a container with your subdomain(s) and token\n- It will update your IP with the DuckDNS service every 5 minutes (with a random jitter)\n","17.05.22:","json"))