export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u){return {data:{boinc:{_path:"\u002Fapps\u002Fboinc",_dir:"apps",_draft:a,_partial:a,_locale:"en",id:c,name:c,description:f,icon:g,links:[{type:"docker",url:"https:\u002F\u002Fhub.docker.com\u002Fr\u002Flinuxserver\u002Fboinc"},{type:"docs",url:"https:\u002F\u002Fdocs.linuxserver.io\u002Fimages\u002Fdocker-boinc"}],containers:[{name:c,image:"linuxserver\u002Fboinc",env:[{id:h,key:h,description:"User ID",default:i},{id:j,key:j,description:"Group ID",default:i},{id:k,default:l,description:m},{id:n,default:d,description:o}],volumes:[{container:p,description:q,key:"config"}],ports:[{container:e,description:r,protocol:"tcp",web:a}]}],meta:{"readme-vars":{project_name:c,project_url:"https:\u002F\u002Fboinc.berkeley.edu\u002F",project_logo:g,project_blurb:f,project_lsio_github_repo_url:"https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Fdocker-{{ project_name }}",project_blurb_optional_extras_enabled:a,available_architectures:[{arch:"{{ arch_x86_64 }}",tag:"latest"},{arch:"{{ arch_arm64 }}",tag:"arm64v8-latest"},{arch:"{{ arch_armhf }}",tag:"arm32v7-latest"}],development_versions:a,common_param_env_vars_enabled:b,param_container_name:"{{ project_name }}",param_usage_include_net:a,param_usage_include_env:b,param_env_vars:[{env_var:k,env_value:l,desc:m}],param_usage_include_vols:b,param_volumes:[{vol_path:p,vol_host_path:"\u002Fpath\u002Fto\u002Fdata",desc:q}],param_usage_include_ports:b,param_ports:[{external_port:e,internal_port:e,port_desc:r}],param_device_map:a,cap_add_param:a,cap_add_param_vars:d,opt_param_usage_include_env:b,opt_param_env_vars:[{env_var:n,env_value:d,desc:o}],opt_param_usage_include_vols:a,opt_param_usage_include_ports:a,opt_param_device_map:b,opt_param_devices:[{device_path:s,device_host_path:s,desc:"Only needed if you want to use your Intel GPU (vaapi)."}],opt_cap_add_param:a,optional_block_1:a,opt_security_opt_param:b,opt_security_opt_param_vars:[{run_var:"seccomp=unconfined",compose_var:"seccomp:unconfined",desc:"For Docker Engine only, many modern gui apps need this to function as syscalls are unkown to Docker."}],app_setup_block_enabled:b,app_setup_block:t,changelogs:[{date:"14.11.22:",desc:"Fix opencl driver."},{date:"18.09.22:",desc:"Rebase to jammy."},{date:"24.02.22:",desc:"Rebase to focal."},{date:"31.01.22:",desc:"Improve device permissions setting verbosity."},{date:"23.03.21:",desc:"Rebase to rdesktop-web baseimage. Deprecate `GUAC_USER` and `GUAC_PASS` env vars. Existing users can set the new var `PASSWORD` for the user `abc`."},{date:"01.04.20:",desc:"Install boinc from ppa."},{date:"17.03.20:",desc:"Add armhf and aarch64 builds and switch to multi-arch image."},{date:"16.03.20:",desc:"Clean up old pid files."},{date:"15.03.20:",desc:"Initial release."}]}},setup:t,_id:"content:apps:boinc.json",_type:u,title:"Boinc",_source:"content",_file:"apps\u002Fboinc.json",_extension:u}},prerenderedAt:1675118189145}}(false,true,"boinc","","8080","[BOINC]({{ project_url }}) is a platform for high-throughput computing on a large scale (thousands or millions of computers). It can be used for volunteer computing (using consumer devices) or grid computing (using organizational resources). It supports virtualized, parallel, and GPU-based applications.","https:\u002F\u002Fraw.githubusercontent.com\u002FBOINC\u002Fboinc\u002Fmaster\u002Fdoc\u002Flogo\u002Fboinc_logo_black.jpg","PUID","100","PGID","TZ","Europe\u002FLondon","Specify a timezone to use EG Europe\u002FLondon.","PASSWORD","Optionally set a password for the gui.","\u002Fconfig","Where BOINC should store its database and config.","Boinc desktop gui.","\u002Fdev\u002Fdri","This image sets up the BOINC client and manager and makes its interface available via Guacamole server in the browser. The interface is available at `http:\u002F\u002Fyour-ip:8080`.\n\nBy default, there is no password set for the main gui. Optional environment variable `PASSWORD` will allow setting a password for the user `abc`.\n\nYou can access advanced features of the Guacamole remote desktop using `ctrl`+`alt`+`shift` enabling you to use remote copy\u002Fpaste and different languages.\n\nIt is recommended to switch to `Advanced View` in the top menu, because the `Computing Preferences` don't seem to be displayed in `Simple View`.\n\nSometimes, the pop-up windows may open in a tiny box in the upper left corner of the screen. When that happens, you can find the corner and resize them.\n\n## GPU Hardware Acceleration\n\n### Intel\n\nHardware acceleration users for Intel Quicksync will need to mount their \u002Fdev\u002Fdri video device inside of the container by passing the following command when running or creating the container:\n```--device=\u002Fdev\u002Fdri:\u002Fdev\u002Fdri```\nWe will automatically ensure the abc user inside of the container has the proper permissions to access this device.\n\n### Nvidia\n\nHardware acceleration users for Nvidia will need to install the container runtime provided by Nvidia on their host, instructions can be found here:\nhttps:\u002F\u002Fgithub.com\u002FNVIDIA\u002Fnvidia-docker\nWe automatically add the necessary environment variable that will utilise all the features available on a GPU on the host. Once nvidia-docker is installed on your host you will need to re\u002Fcreate the docker container with the nvidia container runtime `--runtime=nvidia` and add an environment variable `-e NVIDIA_VISIBLE_DEVICES=all` (can also be set to a specific gpu's UUID, this can be discovered by running `nvidia-smi --query-gpu=gpu_name,gpu_uuid --format=csv` ). NVIDIA automatically mounts the GPU and drivers from your host into the BOINC docker container.\n","json"))