export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S){return {data:{transmission:{_path:"\u002Fapps\u002Ftransmission",_dir:"apps",_draft:a,_partial:a,_locale:"en",id:c,name:c,description:g,icon:h,links:[{type:"docker",url:"https:\u002F\u002Fhub.docker.com\u002Fr\u002Flinuxserver\u002Ftransmission"},{type:"docs",url:"https:\u002F\u002Fdocs.linuxserver.io\u002Fimages\u002Fdocker-transmission"}],containers:[{name:c,image:"linuxserver\u002Ftransmission",env:[{id:i,key:i,description:"User ID",default:j},{id:k,key:k,description:"Group ID",default:j},{id:l,default:m,description:n},{id:o,default:p,description:q},{id:r,default:s,description:t},{id:u,default:v,description:w},{id:x,default:y,description:z},{id:A,default:B,description:C},{id:D,default:E,description:F}],volumes:[{container:G,description:H,key:"config"},{container:I,description:J},{container:K,description:L}],ports:[{container:e,description:M,protocol:f,web:a},{container:d,description:N,protocol:f,web:a},{container:O,description:P,protocol:f,web:a}]}],meta:{"readme-vars":{project_name:c,project_url:"https:\u002F\u002Fwww.transmissionbt.com\u002F",project_logo:h,project_blurb:g,project_lsio_github_repo_url:"https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Fdocker-{{ project_name }}",project_blurb_optional_extras_enabled:a,available_architectures:[{arch:"{{ arch_x86_64 }}",tag:"amd64-latest"},{arch:"{{ arch_arm64 }}",tag:"arm64v8-latest"},{arch:"{{ arch_armhf }}",tag:"arm32v7-latest"}],development_versions:a,common_param_env_vars_enabled:b,param_container_name:"{{ project_name }}",param_usage_include_net:a,param_usage_include_env:b,param_env_vars:[{env_var:l,env_value:m,desc:n}],param_usage_include_vols:b,param_volumes:[{vol_path:G,vol_host_path:"\u002Fpath\u002Fto\u002Fdata",desc:H},{vol_path:I,vol_host_path:"\u002Fpath\u002Fto\u002Fdownloads",desc:J},{vol_path:K,vol_host_path:"\u002Fpath\u002Fto\u002Fwatch\u002Ffolder",desc:L}],param_usage_include_ports:b,param_ports:[{external_port:e,internal_port:e,port_desc:M},{external_port:d,internal_port:d,port_desc:N},{external_port:d,internal_port:O,port_desc:P}],param_device_map:a,cap_add_param:a,opt_param_usage_include_env:b,opt_param_env_vars:[{env_var:o,env_value:p,desc:q},{env_var:r,env_value:s,desc:t},{env_var:u,env_value:v,desc:w},{env_var:x,env_value:y,desc:z},{env_var:A,env_value:B,desc:C},{env_var:D,env_value:E,desc:F}],opt_param_usage_include_vols:a,opt_param_usage_include_ports:a,opt_param_device_map:a,opt_cap_add_param:a,optional_block_1:a,app_setup_block_enabled:b,app_setup_block:Q,changelogs:[{date:"05.01.23:",desc:"Rebase to Alpine 3.17, restore GNU findutils package."},{date:"02.11.22:",desc:"Rebase to Alpine 3.16, migrate to s6v3."},{date:"12.08.22:",desc:"Bump unrar to 6.1.7."},{date:"03.04.22:",desc:"Add Transmissionic as a UI option."},{date:"21.02.22:",desc:"Build unrar from source, rebase to Alpine 3.15, add symlinks neeeded for TWC. Credit @alexbelgium"},{date:"09.07.21:",desc:"Wait for the transmission-daemon termination after a caught sigterm."},{date:"06.03.21:",desc:"Add Flood for Transmission as a UI option."},{date:"23.01.21:",desc:"Rebasing to alpine 3.13."},{date:"02.11.20:",desc:"Add ca-certificates package to allow connecting to https trackers."},{date:"02.06.20:",desc:"Rebase to alpine 3.12, update to transmission 3.0, remove python2, add python3."},{date:"11.05.20:",desc:"Remove unnecessary chmod (remnant of previous change)."},{date:"28.04.20:",desc:"Use transmission-remote to update blocklist."},{date:"30.03.20:",desc:"Internalize blocklist-update.sh."},{date:"29.03.20:",desc:"Update auth info in readme."},{date:"19.12.19:",desc:"Rebasing to alpine 3.11."},{date:"04.10.19:",desc:"Update package label."},{date:"21.08.19:",desc:"Add optional user\u002Fpass environment variables, fix transmission shut down if user\u002Fpass are set."},{date:"19.07.19:",desc:"Send SIGTERM in blocklist update to properly close pid."},{date:"28.06.19:",desc:"Rebasing to alpine 3.10."},{date:"23.03.19:",desc:"Switching to new Base images, shift to arm32v7 tag."},{date:R,desc:"Rebase to Alpine 3.9, add themes to baseimage, add python and findutils."},{date:R,desc:"Catch term and clean exit."},{date:"07.02.19:",desc:"Add pipeline logic and multi arch."},{date:"15.08.18:",desc:"Rebase to alpine linux 3.8."},{date:"12.02.18:",desc:"Pull transmission from edge repo."},{date:"10.01.18:",desc:"Rebase to alpine linux 3.7."},{date:"25.07.17:",desc:"Add rsync package."},{date:"27.05.17:",desc:"Rebase to alpine linux 3.6."},{date:"06.02.17:",desc:"Rebase to alpine linux 3.5."},{date:"15.01.17:",desc:"Add p7zip, tar, unrar, and unzip packages."},{date:"16.10.16:",desc:"Blocklist autoupdate with optional authentication."},{date:"14.10.16:",desc:"Add version layer informationE."},{date:"23.09.16:",desc:"Add information about securing the webui to README."},{date:"21.09.16:",desc:"Add curl package."},{date:"09.09.16:",desc:"Add layer badges to README."},{date:"28.08.16:",desc:"Add badges to README."},{date:"09.08.16:",desc:"Rebase to alpine linux."},{date:"06.12.15:",desc:"Separate mapping for watch folder."},{date:"16.11.15:",desc:"Initial Release."}]}},setup:Q,_id:"content:apps:transmission.json",_type:S,title:"Transmission",_source:"content",_file:"apps\u002Ftransmission.json",_extension:S}},prerenderedAt:1676483556160}}(false,true,"transmission","51413","9091","tcp","[{{ project_name|capitalize }}]({{ project_url }}) is designed for easy, powerful use. Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, ÂµTP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more.","https:\u002F\u002Fraw.githubusercontent.com\u002Flinuxserver\u002Fdocker-templates\u002Fmaster\u002Flinuxserver.io\u002Fimg\u002Ftransmission.png","PUID","100","PGID","TZ","Europe\u002FLondon","Specify a timezone to use EG Europe\u002FLondon.","TRANSMISSION_WEB_HOME","\u002Fcombustion-release\u002F","Specify an alternative UI options are [`\u002Fcombustion-release\u002F`](https:\u002F\u002Fgithub.com\u002FSecretmapper\u002Fcombustion), [`\u002Ftransmission-web-control\u002F`](https:\u002F\u002Fgithub.com\u002Fronggang\u002Ftransmission-web-control), [`\u002Fkettu\u002F`](https:\u002F\u002Fgithub.com\u002Fendor\u002Fkettu), [`\u002Fflood-for-transmission\u002F`](https:\u002F\u002Fgithub.com\u002Fjohman10\u002Fflood-for-transmission), and [`\u002Ftransmissionic\u002F`](https:\u002F\u002Fgithub.com\u002F6c65726f79\u002FTransmissionic).","USER","username","Specify an optional username for the interface","PASS","password","Specify an optional password for the interface","WHITELIST","iplist","Specify an optional list of comma separated ip whitelist. Fills rpc-whitelist setting.","PEERPORT","peerport","Specify an optional port for torrent TCP\u002FUDP connections. Fills peer-port setting.","HOST_WHITELIST","dnsname list","Specify an optional list of comma separated dns name whitelist. Fills rpc-host-whitelist setting.","\u002Fconfig","Where transmission should store config files and logs.","\u002Fdownloads","Local path for downloads.","\u002Fwatch","Watch folder for torrent files.","WebUI","Torrent Port TCP","51413\u002Fudp","Torrent Port UDP","Webui is on port 9091, the settings.json file in \u002Fconfig has extra settings not available in the webui. Stop the container before editing it or any changes won't be saved.\n\nIf you choose to use transmission-web-control as your default UI, just note that the origional Web UI will not be available to you despite the button being present.\n\n## Securing the webui with a username\u002Fpassword.\n\nUse the `USER` and `PASS` variables in docker run\u002Fcreate\u002Fcompose to set authentication. Do not manually edit the `settings.json` to input user\u002Fpass, otherwise transmission cannot be stopped cleanly by the s6 supervisor.\n\n## Updating Blocklists Automatically\n\nThis requires `\"blocklist-enabled\": true,` to be set. By setting this to true, it is assumed you have also populated `blocklist-url` with a valid block list.\n\nThe automatic update is a shell script that downloads a blocklist from the url stored in the settings.json, gunzips it, and restarts the transmission daemon.\n\nThe automatic update will run once a day at 3am local server time.\n\n## Using whitelist\n\nUse `WHITELIST` to enable a list of ip as whitelist. This enable support for `rpc-whitelist`. When `WHITELIST` is empty support for whitelist is disabled.\n\nUse `HOST_WHITELIST` to enable an list of dns names as host-whitelist. This enable support for `rpc-host-whitelist`. When `HOST_WHITELIST` is empty support for host-whitelist is disabled.\n\n## Use alternative Transmission torrent ports\n\nUse `PEERPORT` to specify the port(s) Transmission should listen on.  This disables random port selection.  This should be the same as the port mapped in your docker configuration.\n","22.02.19:","json"))