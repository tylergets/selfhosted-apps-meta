export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q){return {data:{hedgedoc:{_path:"\u002Fapps\u002Fhedgedoc",_dir:"apps",_draft:e,_partial:e,_locale:"en",id:a,name:a,description:f,icon:g,links:[{type:"docker",url:"https:\u002F\u002Fhub.docker.com\u002Fr\u002Flinuxserver\u002Fhedgedoc"},{type:"docs",url:"https:\u002F\u002Fdocs.linuxserver.io\u002Fimages\u002Fdocker-hedgedoc"}],containers:[{name:a,image:"linuxserver\u002Fhedgedoc",env:[{id:h,key:h,description:"User ID",default:i},{id:j,key:j,description:"Group ID",default:i},{id:k,default:l,description:m},{id:n,default:o,description:p},{id:q,default:a,description:r},{id:s,default:t,description:u},{id:v,default:a,description:w},{id:x,default:y,description:z},{id:A,default:B,description:C},{id:D,default:d,description:E},{id:F,default:d,description:G},{id:H,default:c,description:I},{id:J,default:K,description:L}],volumes:[{container:M,description:N,key:"config"}],ports:[{container:c,description:O,protocol:"tcp",web:e}]}],meta:{"readme-vars":{project_name:a,project_url:"https:\u002F\u002Fhedgedoc.org\u002F",project_logo:g,project_blurb:f,project_lsio_github_repo_url:"https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Fdocker-{{ project_name }}",available_architectures:[{arch:"{{ arch_x86_64 }}",tag:"amd64-latest"},{arch:"{{ arch_arm64 }}",tag:"arm64v8-latest"},{arch:"{{ arch_armhf }}",tag:"arm32v7-latest"}],common_param_env_vars_enabled:b,param_container_name:"{{ project_name }}",param_usage_include_env:b,param_env_vars:[{env_var:k,env_value:l,desc:m},{env_var:n,env_value:o,desc:p},{env_var:q,env_value:a,desc:r},{env_var:s,env_value:t,desc:u},{env_var:v,env_value:a,desc:w},{env_var:x,env_value:y,desc:z},{env_var:A,env_value:B,desc:C}],opt_param_usage_include_env:b,opt_param_env_vars:[{env_var:D,env_value:d,desc:E},{env_var:F,env_value:d,desc:G},{env_var:H,env_value:c,desc:I},{env_var:J,env_value:K,desc:L}],param_usage_include_vols:b,param_volumes:[{vol_path:M,vol_host_path:"\u002Fpath\u002Fto\u002Fappdata",desc:N}],param_usage_include_ports:b,param_ports:[{external_port:c,internal_port:c,port_desc:O}],app_setup_block_enabled:b,app_setup_block:P,changelogs:[{date:"02.11.22:",desc:"Rebase to Alpine 3.16, migrate to s6v3."},{date:"10.04.22:",desc:"Use python3 to build node sqlite3."},{date:"10.02.22:",desc:"Rebase to Alpine 3.15."},{date:"09.02.22:",desc:"Add optional var `CMD_PORT` that is needed for accessing at port other than 80, 443 and 3000."},{date:"09.12.21:",desc:"Add optional var `CMD_PROTOCOL_USESSL` that is needed for reverse proxy."},{date:"07.12.21:",desc:"Rebase to ubuntu focal. Update to node 16. Make sure uploads are persistent."},{date:"15.10.21:",desc:"Add required env var `CMD_DOMAIN`."},{date:"05.05.21:",desc:"Remove symlinking some folders from config to \u002Fopt\u002Fhedgedoc\u002Fpublic."},{date:"03.05.21:",desc:"Remove deprecated sequalizerc step."},{date:"22.12.20:",desc:"Initial release"}]}},setup:P,_id:"content:apps:hedgedoc.json",_type:Q,title:"Hedgedoc",_source:"content",_file:"apps\u002Fhedgedoc.json",_extension:Q}},prerenderedAt:1675118189519}}("hedgedoc",true,"3000","false",false,"[HedgeDoc]({{ project_url }}) gives you access to all your files wherever you are.\n\nHedgeDoc is a real-time, multi-platform collaborative markdown note editor.  This means that you can write notes with other people on your desktop, tablet or even on the phone.  You can sign-in via multiple auth providers like Facebook, Twitter, GitHub and many more on the homepage.\n","https:\u002F\u002Fraw.githubusercontent.com\u002Flinuxserver\u002Fdocker-templates\u002Fmaster\u002Flinuxserver.io\u002Fimg\u002Fhedgedoc-banner.png","PUID","100","PGID","DB_HOST","\u003Chostname or ip\u003E","Host address of mysql database","DB_PORT","3306","Port to access mysql database default is 3306","DB_USER","Database user","DB_PASS","\u003Csecret password\u003E","Database password","DB_NAME","Database name","TZ","Europe\u002FLondon","Specify a timezone to use EG Europe\u002FLondon.","CMD_DOMAIN","localhost","The address the gui will be accessed at (ie. `192.168.1.1` or `hedgedoc.domain.com`).","CMD_URL_ADDPORT","Set to `true` if using a port other than `80` or `443`.","CMD_PROTOCOL_USESSL","Set to `true` if accessing over https via reverse proxy.","CMD_PORT","If you wish to access hedgedoc at a port different than 80, 443 or 3000, you need to set this to that port (ie. `CMD_PORT=5000`) and change the port mapping accordingly (5000:5000).","CMD_ALLOW_ORIGIN","['localhost']","Comma-separated list of allowed hostnames","\u002Fconfig","HedgeDoc config and configurable files","Web gui port (internal port also needs to be changed if accessing at port other than 80, 443 and 3000).","HedgeDoc web interface can be accessed `http:\u002F\u002F${IP}:3000\u002F`, if you want to use a custom domain or anything besides port 3000 you will need to leverage their env settings for callbacks: (specifically for CMD_DOMAIN, CMD_PORT and CMD_URL_ADDPORT)\n\n[Full list of HedgeDoc options](https:\u002F\u002Fdocs.hedgedoc.org\u002Fconfiguration\u002F)\n\nFor convience we provide a working example using Mysql as a backend in this document, if you do not wish to use our custom environment values or a Mysql database backend feel free to leverage any of the settings laid out in the link above.\n\nTo run behind a reverse proxy we have a [preconfigured config](https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Freverse-proxy-confs\u002Fblob\u002Fmaster\u002Fhedgedoc.subdomain.conf.sample) using docker networking included in our [SWAG](https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Fdocker-swag) image and you can read how to use this in the [Reverse Proxy Confs repository](https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Freverse-proxy-confs\u002F#how-to-use-these-reverse-proxy-configs)\n","json"))