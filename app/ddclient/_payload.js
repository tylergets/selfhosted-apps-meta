export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){return {data:{ddclient:{_path:"\u002Fapps\u002Fddclient",_dir:"apps",_draft:a,_partial:a,_locale:"en",id:b,name:b,description:d,icon:e,links:[{type:"docker",url:"https:\u002F\u002Fhub.docker.com\u002Fr\u002Flinuxserver\u002Fddclient"},{type:"docs",url:"https:\u002F\u002Fdocs.linuxserver.io\u002Fimages\u002Fdocker-ddclient"}],containers:[{name:b,image:"linuxserver\u002Fddclient",env:[{id:f,key:f,description:"User ID",default:g},{id:h,key:h,description:"Group ID",default:g},{id:i,default:j,description:k}],volumes:[{container:l,description:m,key:"config"}]}],meta:{"readme-vars":{project_name:b,project_url:"https:\u002F\u002Fgithub.com\u002Fddclient\u002Fddclient",project_logo:e,project_lsio_github_repo_url:"https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Fdocker-{{ project_name }}",project_blurb:d,project_blurb_optional_extras_enabled:a,available_architectures:[{arch:"{{ arch_x86_64 }}",tag:"amd64-latest"},{arch:"{{ arch_arm64 }}",tag:"arm64v8-latest"},{arch:"{{ arch_armhf }}",tag:"arm32v7-latest"}],development_versions:a,common_param_env_vars_enabled:c,param_container_name:"{{ project_name }}",param_usage_include_net:a,param_usage_include_env:c,param_env_vars:[{env_var:i,env_value:j,desc:k}],param_usage_include_vols:c,param_volumes:[{vol_path:l,vol_host_path:"\u003Cpath to data\u003E",desc:m}],param_usage_include_ports:a,param_device_map:a,cap_add_param:a,opt_param_usage_include_env:a,opt_param_usage_include_vols:a,opt_param_usage_include_ports:a,opt_param_device_map:a,opt_cap_add_param:a,optional_block_1:a,app_setup_block_enabled:c,app_setup_block:n,changelogs:[{date:"20.10.22:",desc:"Update build instructions for 3.10.0. Update default `ddclient.conf`."},{date:"15.01.22:",desc:"Rebase to Alpine 3.15"},{date:"15.05.21:",desc:"Distribute script 'sample-get-ip-from-fritzbox' from ddclient repo"},{date:"08.03.21:",desc:"Added bind-tools to provide nsupdate"},{date:"01.06.20:",desc:"Rebasing to alpine 3.12."},{date:"08.02.20:",desc:"Ingest from Github."},{date:"06.02.19:",desc:"Fix permissions."},{date:"19.12.19:",desc:"Rebasing to alpine 3.11."},{date:"28.06.19:",desc:"Rebasing to alpine 3.10."},{date:"23.03.19:",desc:"Switching to new Base images, shift to arm32v7 tag."},{date:"10.03.19:",desc:"Add perl-io-socket-inet6 for ipv6 support."},{date:"22.02.19:",desc:"Rebasing to alpine 3.9."},{date:"11.02.19:",desc:"Add pipeline logic and multi arch."},{date:"22.08.18:",desc:"Rebase to alpine 3.8."},{date:"10.08.18:",desc:"Update to ddclient v3.9.0. For Cloudflare users, please ensure you remove the line `server=www.cloudflare.com` from your `ddclient.conf`."},{date:"07.12.17:",desc:"Rebase to alpine 3.7."},{date:"28.05.17:",desc:"Rebase to alpine 3.6."},{date:"10.02.17:",desc:"Rebase to alpine 3.5."},{date:"26.11.16:",desc:"Update README to new standard and add icon and other small details."},{date:"29.08.16:",desc:"Initial release."}]}},setup:n,_id:"content:apps:ddclient.json",_type:o,title:"Ddclient",_source:"content",_file:"apps\u002Fddclient.json",_extension:o}},prerenderedAt:1675118189249}}(false,"ddclient",true,"[{{ project_name|capitalize }}]({{ project_url }}) is a Perl client used to update dynamic DNS entries for accounts on Dynamic DNS Network Service Provider. It was originally written by Paul Burry and is now mostly by wimpunk. It has the capability to update more than just dyndns and it can fetch your WAN-ipaddress in a few different ways.","https:\u002F\u002Fraw.githubusercontent.com\u002Flinuxserver\u002Fdocker-templates\u002Fmaster\u002Flinuxserver.io\u002Fimg\u002Fddclient-logo.png","PUID","100","PGID","TZ","Europe\u002FLondon","Specify a timezone to use EG Europe\u002FLondon.","\u002Fconfig","Where ddclient should store its config files.","Edit the `ddclient.conf` file found in your `\u002Fconfig` volume (also see official [ddclient documentation](https:\u002F\u002Fddclient.net)). This config file has many providers to choose from and you basically just have to uncomment your provider and add username\u002Fpassword where requested. If you modify ddclient.conf, ddclient will automaticcaly restart and read the config.\n\n### Get dynamic IP from Fritz.Box\nIf ddclient shall fetch the dynamic (public) IP-address from a fritz.box (AVM) add the following line to `\u002Fconfig\u002Fddclient.conf`:\n````\nuse=cmd, cmd=\u002Fetc\u002Fddclient\u002Fget-ip-from-fritzbox\n````\n","json"))