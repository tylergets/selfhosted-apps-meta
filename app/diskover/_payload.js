export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E){return {data:{diskover:{_path:"\u002Fapps\u002Fdiskover",_dir:"apps",_draft:c,_partial:c,_locale:"en",id:b,name:b,description:e,icon:f,links:[{type:"docker",url:"https:\u002F\u002Fhub.docker.com\u002Fr\u002Flinuxserver\u002Fdiskover"},{type:"docs",url:"https:\u002F\u002Fdocs.linuxserver.io\u002Fimages\u002Fdocker-diskover"}],containers:[{name:b,image:"linuxserver\u002Fdiskover",env:[{id:g,key:g,description:"User ID",default:h},{id:i,key:i,description:"Group ID",default:h},{id:j,default:k,description:l},{id:m,default:n,description:o},{id:p,default:q,description:r},{id:s,default:t,description:u},{id:v,default:w,description:x}],volumes:[{container:y,description:z,key:"config"},{container:A,description:B}],ports:[{container:d,description:C,protocol:"tcp",web:c}]}],meta:{"readme-vars":{project_name:b,project_url:"https:\u002F\u002Fgithub.com\u002Fdiskoverdata\u002Fdiskover-community",project_logo:f,project_blurb:e,project_lsio_github_repo_url:"https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Fdocker-{{ project_name }}",available_architectures:[{arch:"{{ arch_x86_64 }}",tag:"amd64-latest"},{arch:"{{ arch_arm64 }}",tag:"arm64v8-latest"},{arch:"{{ arch_armhf }}",tag:"arm32v7-latest"}],common_param_env_vars_enabled:a,param_container_name:"{{ project_name }}",param_usage_include_vols:a,param_volumes:[{vol_path:y,vol_host_path:"\u002Fpath\u002Fto\u002F{{ project_name }}\u002Fconfig",desc:z},{vol_path:A,vol_host_path:"\u002Fpath\u002Fto\u002F{{ project_name }}\u002Fdata",desc:B}],param_usage_include_ports:a,param_ports:[{external_port:d,internal_port:d,port_desc:C}],param_usage_include_env:a,param_env_vars:[{env_var:j,env_value:k,desc:l},{env_var:m,env_value:n,desc:o},{env_var:p,env_value:q,desc:r},{env_var:s,env_value:t,desc:u},{env_var:v,env_value:w,desc:x}],custom_compose:"version: '2'\nservices:\n  diskover:\n    image: lscr.io\u002Flinuxserver\u002Fdiskover\n    container_name: diskover\n    environment:\n      - PUID=1000\n      - PGID=1000\n      - TZ=America\u002FNew_York\n      - ES_HOST=elasticsearch\n      - ES_PORT=9200\n    volumes:\n      - \u002Fpath\u002Fto\u002Fdiskover\u002Fconfig:\u002Fconfig\n      - \u002Fpath\u002Fto\u002Fdiskover\u002Fdata:\u002Fdata\n    ports:\n      - 80:80\n    mem_limit: 4096m\n    restart: unless-stopped\n    depends_on:\n      - elasticsearch\n  elasticsearch:\n    container_name: elasticsearch\n    image: docker.elastic.co\u002Felasticsearch\u002Felasticsearch:7.10.2\n    environment:\n      - discovery.type=single-node\n      - xpack.security.enabled=true\n      - bootstrap.memory_lock=true\n      - \"ES_JAVA_OPTS=-Xms1g -Xmx1g\"\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    volumes:\n      - \u002Fpath\u002Fto\u002Fesdata:\u002Fusr\u002Fshare\u002Felasticsearch\u002Fdata\n    ports:\n      - 9200:9200\n    depends_on:\n      - elasticsearch-helper\n    restart: unless-stopped\n  elasticsearch-helper:\n    image: alpine\n    command: sh -c \"sysctl -w vm.max_map_count=262144\"\n    privileged: true\n",app_setup_block_enabled:a,app_setup_block:D,changelogs:[{date:"25.02.22:",desc:"Add php7-sqlite3 to support rc4 release."},{date:"03.11.21:",desc:"Added more support for potential config files."},{date:"31.10.21:",desc:"Added xpack.security variable to ElasticSearch; added instructions to edit Constants.php in diskover; corrected command needed to manually generate an index in diskover"},{date:"11.10.21:",desc:"Updated to diskover-community v2."},{date:"19.11.20:",desc:"Fix pip packages."},{date:"19.12.19:",desc:"Rebasing to alpine 3.11."},{date:"28.06.19:",desc:"Rebasing to alpine 3.10."},{date:"12.04.19:",desc:"Rebase to Alpine 3.9."},{date:"23.03.19:",desc:"Switching to new Base images, shift to arm32v7 tag."},{date:"01.11.18:",desc:"Initial Release."}]}},setup:D,_id:"content:apps:diskover.json",_type:E,title:"Diskover",_source:"content",_file:"apps\u002Fdiskover.json",_extension:E}},prerenderedAt:1676483555021}}(true,"diskover",false,"80","[{{ project_name }}]({{ project_url }}) is an open source file system indexer that uses Elasticsearch to index and manage data across heterogeneous storage systems.","https:\u002F\u002Fraw.githubusercontent.com\u002Fdiskoverdata\u002Fdiskover-community\u002Fmaster\u002Fdiskover-web\u002Fpublic\u002Fimages\u002Fdiskover.png","PUID","100","PGID","TZ","America\u002FNew_York","Specify a timezone to use EG America\u002FNew_York","ES_HOST","elasticsearch","ElasticSearch host (optional)","ES_PORT","9200","ElasticSearch port (optional)","ES_USER","elastic","ElasticSearch username (optional)","ES_PASS","changeme","ElasticSearch password (optional)","\u002Fconfig","Persistent config files","\u002Fdata","Default mount point to crawl","diskover Web UI","This application is dependent on an ElasticSearch instance. Please see the example compose file for additional information.\n\nThe default username is diskover with the password of **darkdata**, access the container at `http:\u002F\u002F\u003Chost-ip\u003E\u002F`. The UI may be unusable until a valid index has been created.\n\nThe default diskover-web Constants.php file located at `\u002Fconfig\u002Fdiskover-web.conf.d\u002FConstants.php` will need to be edited to allow diskover-web to communicate with the ElasticSearch container. The following entries will need to be edited:\n* `const ES_HOST = elasticsearch`\n* `const ES_PORT = 9200`\n\nThe application doesn't start an index by default. A crontab is created inside of the `\u002Fconfig` directory and can be set up to run automated indexes of `\u002Fdata`. Changes to this crontab file require a restart to apply. You can also manually run an index by executing `\u002Fapp\u002Fdiskover\u002Fdiskover.py` either in interactive or detached mode:\n\n* `docker exec -u abc -d diskover python3 \u002Fapp\u002Fdiskover\u002Fdiskover.py -i diskover-my_index_name \u002Fdata` Will run an index in the background\n* `docker exec -u abc -it diskover python3 \u002Fapp\u002Fdiskover\u002Fdiskover.py -i diskover-my_index_name \u002Fdata` Will run an index in the foreground\n","json"))