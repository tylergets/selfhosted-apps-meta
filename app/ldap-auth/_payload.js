export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z){return {data:{"ldap-auth":{_path:"\u002Fapps\u002Fldap-auth",_dir:"apps",_draft:b,_partial:b,_locale:"en",id:c,name:c,description:g,icon:h,links:[{type:"docker",url:"https:\u002F\u002Fhub.docker.com\u002Fr\u002Flinuxserver\u002Fldap-auth"},{type:"docs",url:"https:\u002F\u002Fdocs.linuxserver.io\u002Fimages\u002Fdocker-ldap-auth"}],containers:[{name:c,image:"linuxserver\u002Fldap-auth",env:[{id:i,key:i,description:"User ID",default:j},{id:k,key:k,description:"Group ID",default:j},{id:l,default:m,description:n},{id:o,default:a,description:p},{id:q,default:a,description:r},{id:s,default:a,description:t}],ports:[{container:e,description:u,protocol:v,web:b},{container:f,description:w,protocol:v,web:b}]}],meta:{"readme-vars":{project_name:c,project_url:"https:\u002F\u002Fgithub.com\u002Fnginxinc\u002Fnginx-ldap-auth",project_logo:h,project_blurb:g,project_lsio_github_repo_url:"https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Fdocker-{{ project_name }}",available_architectures:[{arch:"{{ arch_x86_64 }}",tag:"amd64-latest"},{arch:"{{ arch_arm64 }}",tag:"arm64v8-latest"},{arch:"{{ arch_armhf }}",tag:"arm32v7-latest"}],common_param_env_vars_enabled:b,param_container_name:"{{ project_name }}",param_usage_include_vols:b,param_volumes:a,param_usage_include_ports:d,param_ports:[{external_port:e,internal_port:e,port_desc:u},{external_port:f,internal_port:f,port_desc:w}],param_usage_include_env:d,param_env_vars:[{env_var:l,env_value:m,desc:n}],opt_param_usage_include_env:d,opt_param_env_vars:[{env_var:o,env_value:a,desc:p},{env_var:q,env_value:a,desc:r},{env_var:s,env_value:a,desc:t}],app_setup_block_enabled:d,app_setup_block:x,changelogs:[{date:y,desc:"Rebase to alpine 3.17."},{date:y,desc:"Rebase to alpine 3.15."},{date:"14.05.21:",desc:"Add linuxserver wheel index."},{date:"12.02.21:",desc:"Clean up cargo\u002Frust cache."},{date:"10.02.21:",desc:"Rebasing to alpine 3.13."},{date:"08.09.20:",desc:"Set form action correctly."},{date:"30.07.20:",desc:"Fix bug related to unset optional `CERTFILE` and `KEYFILE` vars."},{date:"27.07.20:",desc:"Add support for HTTP over SSL (HTTPS)."},{date:"21.07.20:",desc:"Add support for optional user defined fernet key."},{date:"02.06.20:",desc:"Rebasing to alpine 3.12, serve login page at `\u002Fldaplogin` as well as `\u002Flogin`, to prevent clashes with reverese proxied apps."},{date:"17.05.20:",desc:"Add support for self-signed CA certs."},{date:"20.02.20:",desc:"Switch to python3."},{date:"19.12.19:",desc:"Rebasing to alpine 3.11."},{date:"01.07.19:",desc:"Fall back to base64 encoding when basic http auth is used."},{date:"28.06.19:",desc:"Rebasing to alpine 3.10."},{date:"23.03.19:",desc:"Switching to new Base images, shift to arm32v7 tag."},{date:"22.02.19:",desc:"Rebasing to alpine 3.9."},{date:"18.09.18:",desc:"Update pip"},{date:"14.09.18:",desc:"Add TZ parameter, remove unnecessary PUID\u002FPGID params"},{date:"11.08.18:",desc:"Initial release."}]}},setup:x,_id:"content:apps:ldap-auth.json",_type:z,title:"Ldap Auth",_source:"content",_file:"apps\u002Fldap-auth.json",_extension:z}},prerenderedAt:1675118189623}}("",false,"ldap-auth",true,"8888","9000","[{{ project_name|capitalize }}]({{ project_url }}) software is for authenticating users who request protected resources from servers proxied by nginx. It includes a daemon (ldap-auth) that communicates with an authentication server, and a webserver daemon that generates an authentication cookie based on the userâ€™s credentials. The daemons are written in Python for use with a Lightweight Directory Access Protocol (LDAP) authentication server (OpenLDAP or Microsoft Windows Active Directory 2003 and 2012).","https:\u002F\u002Fjumpcloud.com\u002Fwp-content\u002Fuploads\u002F2016\u002F12\u002FLDAP_Logo-1420591101.jpg","PUID","100","PGID","TZ","Europe\u002FLondon","Specify a timezone to use EG Europe\u002FLondon","FERNETKEY","Optionally define a custom fernet key, has to be base64-encoded 32-byte (only needed if container is frequently recreated, or if using multi-node setups, invalidating previous authentications)","CERTFILE","Point this to a certificate file to enable HTTP over SSL (HTTPS) for the ldap auth daemon","KEYFILE","Point this to the private key file, matching the certificate file referred to in CERTFILE","the port for ldap auth daemon","tcp","the port for ldap login page","- This container itself does not have any settings and it relies on the pertinent information passed through in http headers of incoming requests. Make sure that your webserver is set up with the right config.\n- Here's a sample config: [nginx-ldap-auth.conf](https:\u002F\u002Fgithub.com\u002Fnginxinc\u002Fnginx-ldap-auth\u002Fblob\u002Fmaster\u002Fnginx-ldap-auth.conf).\n- Unlike the upstream project, this image encodes the cookie information with fernet, using a randomly generated key during container creation (or optionally user defined).\n- Also unlike the upstream project, this image serves the login page at `\u002Fldaplogin` (as well as `\u002Flogin`) to prevent clashes with reverse proxied apps that may also use `\u002Flogin` for their internal auth.\n","19.09.22:","json"))