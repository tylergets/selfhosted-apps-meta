export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){return {data:{wireshark:{_path:"\u002Fapps\u002Fwireshark",_dir:"apps",_draft:b,_partial:b,_locale:"en",id:c,name:c,description:d,icon:e,links:[{type:"docker",url:"https:\u002F\u002Fhub.docker.com\u002Fr\u002Flinuxserver\u002Fwireshark"},{type:"docs",url:"https:\u002F\u002Fdocs.linuxserver.io\u002Fimages\u002Fdocker-wireshark"}],containers:[{name:c,image:"linuxserver\u002Fwireshark",env:[{id:f,key:f,description:"User ID",default:g},{id:h,key:h,description:"Group ID",default:g},{id:i,default:j,description:k}],volumes:[{container:l,description:m,key:"config"}]}],meta:{"readme-vars":{project_name:c,project_url:"https:\u002F\u002Fwww.wireshark.org\u002F",project_logo:e,project_blurb:d,project_lsio_github_repo_url:"https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Fdocker-{{ project_name }}",project_blurb_optional_extras_enabled:b,available_architectures:[{arch:"{{ arch_x86_64 }}",tag:"latest"},{arch:"{{ arch_arm64 }}",tag:"arm64v8-latest"},{arch:"{{ arch_armhf }}",tag:"arm32v7-latest"}],development_versions:b,common_param_env_vars_enabled:a,param_container_name:"{{ project_name }}",param_usage_include_env:a,param_usage_include_ports:b,param_usage_include_net:a,param_net:"host",param_net_desc:"Use Host Networking",param_env_vars:[{env_var:i,env_value:j,desc:k}],param_usage_include_vols:a,param_volumes:[{vol_path:l,vol_host_path:"\u002Fpath\u002Fto\u002Fconfig",desc:m}],cap_add_param:a,cap_add_param_vars:[{cap_add_var:"NET_ADMIN"}],opt_param_usage_include_ports:a,opt_param_ports:[{external_port:n,internal_port:n,port_desc:"WireShark desktop gui, only use this if you are not using host mode and sniffing Docker network traffic."}],opt_security_opt_param:a,opt_security_opt_param_vars:[{run_var:"seccomp=unconfined",compose_var:"seccomp:unconfined",desc:"For Docker Engine only, many modern gui apps need this to function on older hosts as syscalls are unknown to Docker."}],app_setup_block_enabled:a,app_setup_block:o,changelogs:[{date:"23.10.22:",desc:"Rebase to Alpine 3.16, migrate to s6v3."},{date:"14.02.22:",desc:"Rebase to Alpine."},{date:"31.03.20:",desc:"Initial release."}]}},setup:o,_id:"content:apps:wireshark.json",_type:p,title:"Wireshark",_source:"content",_file:"apps\u002Fwireshark.json",_extension:p}},prerenderedAt:1676483556251}}(true,false,"wireshark","[Wireshark]({{ project_url }}) is the world’s foremost and widely-used network protocol analyzer. It lets you see what’s happening on your network at a microscopic level and is the de facto (and often de jure) standard across many commercial and non-profit enterprises, government agencies, and educational institutions. Wireshark development thrives thanks to the volunteer contributions of networking experts around the globe and is the continuation of a project started by Gerald Combs in 1998. ","https:\u002F\u002Fraw.githubusercontent.com\u002Flinuxserver\u002Fdocker-templates\u002Fmaster\u002Flinuxserver.io\u002Fimg\u002Fwireshark-icon.png","PUID","100","PGID","TZ","Europe\u002FLondon","Specify a timezone to use EG Europe\u002FLondon.","\u002Fconfig","Users home directory in the container, stores program settings and potentially dump files.","3000","The application can be accessed at:\n\n* http:\u002F\u002Fyourhost:3000\u002F\n\nBy default the user\u002Fpass is abc\u002Fabc, if you change your password or want to login manually to the GUI session for any reason use the following link:\n\n* http:\u002F\u002Fyourhost:3000\u002F?login=true\n\nIn order to dump from an interface you will need to pass `NET_ADMIN` at a minimum, optionally you can use host networking to capture from your host level device or specify a Docker network you want to capture from.\n\nIf you do not specificy host networking you will need to map port 3000 with `-p 3000:3000`.\n","json"))