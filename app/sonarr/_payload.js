export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u){return {data:{sonarr:{_path:"\u002Fapps\u002Fsonarr",_dir:"apps",_draft:b,_partial:b,_locale:"en",id:c,name:c,description:e,icon:f,links:[{type:"docker",url:"https:\u002F\u002Fhub.docker.com\u002Fr\u002Flinuxserver\u002Fsonarr"},{type:"docs",url:"https:\u002F\u002Fdocs.linuxserver.io\u002Fimages\u002Fdocker-sonarr"}],containers:[{name:c,image:"linuxserver\u002Fsonarr",env:[{id:g,key:g,description:"User ID",default:h},{id:i,key:i,description:"Group ID",default:h},{id:j,default:k,description:l}],volumes:[{container:m,description:n},{container:o,description:p},{container:q,description:r,key:"config"}],ports:[{container:d,description:s,protocol:"tcp",web:b}]}],meta:{"readme-vars":{project_name:c,project_url:"https:\u002F\u002Fsonarr.tv\u002F",project_logo:f,project_blurb:e,project_lsio_github_repo_url:"https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Fdocker-{{ project_name }}",available_architectures:[{arch:"{{ arch_x86_64 }}",tag:"amd64-latest"},{arch:"{{ arch_arm64 }}",tag:"arm64v8-latest"}],development_versions:a,development_versions_items:[{tag:"latest",desc:"Stable releases from Sonarr (currently v3)"},{tag:"develop",desc:"Development releases from Sonarr (currently v4)"}],param_container_name:"{{ project_name }}",param_usage_include_vols:a,param_volumes:[{vol_path:q,vol_host_path:"\u002Fpath\u002Fto\u002Fdata",desc:r}],opt_param_usage_include_vols:a,opt_param_volumes:[{vol_path:m,vol_host_path:"\u002Fpath\u002Fto\u002Ftvseries",desc:n},{vol_path:o,vol_host_path:"\u002Fpath\u002Fto\u002Fdownloadclient-downloads",desc:p}],param_usage_include_ports:a,param_ports:[{external_port:d,internal_port:d,port_desc:s}],param_usage_include_env:a,param_env_vars:[{env_var:j,env_value:k,desc:l}],opt_param_usage_include_env:b,app_setup_block_enabled:a,app_setup_block:t,changelogs:[{date:"24.11.22:",desc:"Bump develop branch to v4, rebase to Alpine 3.16."},{date:"03.08.22:",desc:"Deprecate armhf."},{date:"02.08.22:",desc:"Add armhf deprecation warning."},{date:"28.04.22:",desc:"Rebase master branch to mono 6.12 base (focal)."},{date:"20.02.22:",desc:"Rebase develop branch to Alpine, deprecate develop-alpine branch."},{date:"28.12.21:",desc:"Add develop-alpine branch."},{date:"11.05.21:",desc:"Make the paths clearer to the user."},{date:"10.03.21:",desc:"Upgrade to Sonarr v3. Existing users are highly recommended to make a backup prior to update."},{date:"18.01.21:",desc:"Deprecate `UMASK_SET` in favor of UMASK in baseimage, see above for more information."},{date:"05.04.20:",desc:"Move app to \u002Fapp."},{date:"01.08.19:",desc:"Rebase to Linuxserver LTS mono version."},{date:"13.06.19:",desc:"Add env variable for setting umask."},{date:"10.05.19:",desc:"Rebase to Bionic."},{date:"23.03.19:",desc:"Switching to new Base images, shift to arm32v7 tag."},{date:"01.02.19:",desc:"Multi arch images and pipeline build logic"},{date:"15.12.17:",desc:"Fix continuation lines."},{date:"12.07.17:",desc:"Add inspect commands to README, move to jenkins build and push."},{date:"17.04.17:",desc:"Switch to using inhouse mono baseimage, adds python also."},{date:"14.04.17:",desc:"Change to mount \u002Fetc\u002Flocaltime in README, thanks cbgj."},{date:"13.04.17:",desc:"Switch to official mono repository."},{date:"30.09.16:",desc:"Fix umask"},{date:"23.09.16:",desc:"Add cd to \u002Fopt fixes redirects with althub (issue #25), make XDG config environment variable"},{date:"15.09.16:",desc:"Add libcurl3 package."},{date:"09.09.16:",desc:"Add layer badges to README."},{date:"27.08.16:",desc:"Add badges to README."},{date:"20.07.16:",desc:"Rebase to xenial."},{date:"31.08.15:",desc:"Cleanup, changed sources to fetch binarys from. also a new baseimage."}]}},setup:t,_id:"content:apps:sonarr.json",_type:u,title:"Sonarr",_source:"content",_file:"apps\u002Fsonarr.json",_extension:u}},prerenderedAt:1676483555978}}(true,false,"sonarr","8989","[{{ project_name|capitalize }}]({{ project_url }}) (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.\n","https:\u002F\u002Fraw.githubusercontent.com\u002Flinuxserver\u002Fdocker-templates\u002Fmaster\u002Flinuxserver.io\u002Fimg\u002Fsonarr-banner.png","PUID","100","PGID","TZ","Europe\u002FLondon","Specify a timezone to use EG Europe\u002FLondon, this is required for Sonarr","\u002Ftv","Location of TV library on disk (See note in Application setup)","\u002Fdownloads","Location of download managers output directory (See note in Application setup)","\u002Fconfig","Database and sonarr configs","The port for the Sonarr webinterface","Access the webui at `\u003Cyour-ip\u003E:8989`, for more information check out [Sonarr](https:\u002F\u002Fsonarr.tv\u002F).\n\n### Media folders\n\nWe have set `\u002Ftv` and `\u002Fdownloads` as ***optional paths***, this is because it is the easiest way to get started. While easy to use, it has some drawbacks. Mainly losing the ability to hardlink (TL;DR a way for a file to exist in multiple places on the same file system while only consuming one file worth of space), or atomic move (TL;DR instant file moves, rather than copy+delete) files while processing content.\n\nUse the optional paths if you dont understand, or dont want hardlinks\u002Fatomic moves.\n\nThe folks over at servarr.com wrote a good [write-up](https:\u002F\u002Fwiki.servarr.com\u002FDocker_Guide#Consistent_and_well_planned_paths) on how to get started with this.\n","json"))