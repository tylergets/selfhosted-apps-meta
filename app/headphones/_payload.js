export default (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D){return {data:{headphones:{_path:"\u002Fapps\u002Fheadphones",_dir:"apps",_draft:a,_partial:a,_locale:"en",id:b,name:b,description:j,icon:k,links:[{type:"docker",url:"https:\u002F\u002Fhub.docker.com\u002Fr\u002Flinuxserver\u002Fheadphones"},{type:"docs",url:"https:\u002F\u002Fdocs.linuxserver.io\u002Fimages\u002Fdocker-headphones"}],containers:[{name:b,image:"linuxserver\u002Fheadphones",env:[{id:l,key:l,description:"User ID",default:m},{id:n,key:n,description:"Group ID",default:m},{id:o,default:p,description:q},{id:r,default:g,description:s}],volumes:[{container:c,description:d,key:t},{container:c,description:d,key:t},{container:u,description:v},{container:w,description:x}],ports:[{container:h,description:i,protocol:"tcp",web:a}]}],meta:{"readme-vars":{project_name:b,project_url:"https:\u002F\u002Fgithub.com\u002Frembo10\u002Fheadphones",project_logo:k,project_blurb:j,project_lsio_github_repo_url:"https:\u002F\u002Fgithub.com\u002Flinuxserver\u002Fdocker-{{ project_name }}",project_blurb_optional_extras_enabled:a,project_blurb_optional_extras:[],available_architectures:[{arch:"{{ arch_x86_64 }}",tag:"amd64-latest"},{arch:"{{ arch_arm64 }}",tag:"arm64v8-latest"},{arch:"{{ arch_armhf }}",tag:"arm32v7-latest"}],development_versions:a,development_versions_items:[{tag:g,desc:"Stable Ombi releases"},{tag:"development",desc:"Releases from the `develop` branch of Ombi"}],common_param_env_vars_enabled:e,param_container_name:"{{ project_name }}",param_usage_include_net:a,param_net:"host",param_net_desc:"Shares host networking with container.",param_usage_include_env:e,param_env_vars:[{env_var:o,env_value:p,desc:q}],param_usage_include_vols:e,param_volumes:[{vol_path:c,vol_host_path:y,desc:d},{vol_path:u,vol_host_path:"\u003C\u002Fpath\u002Fto\u002Fdownloads\u003E",desc:v},{vol_path:w,vol_host_path:"\u003C\u002Fpath\u002Fto\u002Fmusic\u003E",desc:x}],param_usage_include_ports:e,param_ports:[{external_port:h,internal_port:h,port_desc:i}],param_device_map:a,param_devices:[{device_path:f,device_host_path:f,desc:z}],cap_add_param:a,cap_add_param_vars:[{cap_add_var:A}],opt_param_usage_include_env:a,opt_param_env_vars:[{env_var:r,env_value:g,desc:s}],opt_param_usage_include_vols:a,opt_param_volumes:[{vol_path:c,vol_host_path:y,desc:d}],opt_param_usage_include_ports:a,opt_param_ports:[{external_port:B,internal_port:B,port_desc:i}],opt_param_device_map:a,opt_param_devices:[{device_path:f,device_host_path:f,desc:z}],opt_cap_add_param:a,opt_cap_add_param_vars:[{cap_add_var:A}],optional_block_1:a,optional_block_1_items:[C,"include optional stuff",C],app_setup_block_enabled:a,app_setup_block:"",changelogs:[{date:"02.02.22:",desc:"Rebasing to alpine 3.15. Updating to Python 3."},{date:"19.12.19:",desc:"Rebasing to alpine 3.11."},{date:"28.06.19:",desc:"Rebasing to alpine 3.10."},{date:"09.05.19:",desc:"Add default UTC timezone if user does not set it."},{date:"23.03.19:",desc:"Switching to new Base images, shift to arm32v7 tag."},{date:"22.02.19:",desc:"Rebasing to alpine 3.9."},{date:"16.01.19:",desc:"Add pipeline logic and multi arch."},{date:"18.08.18:",desc:"Rebase to alpine 3.8."},{date:"03.04.18:",desc:"Remove forced port and update README."},{date:"05.01.18:",desc:"Deprecate cpu_core routine lack of scaling."},{date:"12.12.17:",desc:"Rebase to alpine 3.7."},{date:"20.07.17:",desc:"Internal git pull instead of at runtime."},{date:"12.07.17:",desc:"Add inspect commands to README, move to jenkins build and push."},{date:"28.05.17:",desc:"Add flac package to handle FLAC based .cue."},{date:"25.05.17:",desc:"Rebase to alpine 3.6."},{date:"03.05.17:",desc:"Reduce layer, replace broken source for shntool."},{date:"07.02.17:",desc:"Rebase to alpine 3.5."},{date:"23.12.16:",desc:"Fix capitalisation in README."},{date:"09.09.16:",desc:"Add layer badges to README."},{date:"27.08.16:",desc:"Add badges to README, compile shntool."},{date:"08.08.16:",desc:"Rebase to alpine linux."},{date:"18.07.15:",desc:"Inital Release"}]}},_id:"content:apps:headphones.json",_type:D,title:"Headphones",_source:"content",_file:"apps\u002Fheadphones.json",_extension:D}},prerenderedAt:1676483555247}}(false,"headphones","\u002Fconfig","Configuration files.",true,"\u002Fdev\u002Fdri","latest","8181","Application WebUI","[{{ project_name|capitalize }}]({{ project_url }}) is an automated music downloader for NZB and Torrent, written in Python. It supports SABnzbd, NZBget, Transmission, ÂµTorrent and Blackhole.","https:\u002F\u002Fraw.githubusercontent.com\u002Flinuxserver\u002Fdocker-templates\u002Fmaster\u002Flinuxserver.io\u002Fimg\u002Fheadphones-banner.png","PUID","100","PGID","TZ","Europe\u002FLondon","Specify a timezone to use EG Europe\u002FLondon.","VERSION","Supported values are LATEST, PLEXPASS or a specific version number.","config","\u002Fdownloads","ISOs.","\u002Fmusic","Your music directory.","\u003C\u002Fpath\u002Fto\u002Fappdata\u002Fconfig\u003E","For hardware transcoding","NET_ADMIN","80","```","json"))