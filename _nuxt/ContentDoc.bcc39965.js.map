{"version":3,"file":"ContentDoc.bcc39965.js","sources":["../../../../node_modules/@nuxt/content/dist/runtime/composables/head.mjs","../../../../node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue"],"sourcesContent":["import { hasProtocol, joinURL, withTrailingSlash, withoutTrailingSlash } from \"ufo\";\nimport { useRoute, nextTick, useHead, unref, watch, useRuntimeConfig } from \"#imports\";\nexport const useContentHead = (_content, to = useRoute()) => {\n  const content = unref(_content);\n  const config = useRuntimeConfig();\n  const refreshHead = (data = content) => {\n    if (!to.path || !data) {\n      return;\n    }\n    const head = Object.assign({}, data?.head || {});\n    head.meta = [...head.meta || []];\n    head.link = [...head.link || []];\n    const title = head.title || data?.title;\n    if (title) {\n      head.title = title;\n      if (process.server && !head.meta.some((m) => m.property === \"og:title\")) {\n        head.meta.push({\n          name: \"og:title\",\n          content: title\n        });\n      }\n    }\n    const host = config.public.content.host;\n    if (process.server && host) {\n      const _url = joinURL(host ?? \"/\", config.app.baseURL, to.fullPath);\n      const url = config.public.content.trailingSlash ? withTrailingSlash(_url) : withoutTrailingSlash(_url);\n      if (!head.meta.some((m) => m.property === \"og:url\")) {\n        head.meta.push({\n          name: \"og:url\",\n          content: url\n        });\n      }\n      if (!head.link.some((m) => m.rel === \"canonical\")) {\n        head.link.push({\n          rel: \"canonical\",\n          href: url\n        });\n      }\n    }\n    const description = head?.description || data?.description;\n    if (description && head.meta.filter((m) => m.name === \"description\").length === 0) {\n      head.meta.push({\n        name: \"description\",\n        content: description\n      });\n    }\n    if (process.server && description && !head.meta.some((m) => m.property === \"og:description\")) {\n      head.meta.push({\n        name: \"og:description\",\n        content: description\n      });\n    }\n    const image = head?.image || data?.image;\n    if (process.server && image && head.meta.filter((m) => m.property === \"og:image\").length === 0) {\n      if (typeof image === \"string\") {\n        head.meta.push({\n          property: \"og:image\",\n          // @ts-ignore - We expect `head.image` from Nuxt configurations...\n          content: host && !hasProtocol(image) ? new URL(joinURL(config.app.baseURL, image), host).href : image\n        });\n      }\n      if (typeof image === \"object\") {\n        const imageKeys = [\n          \"src\",\n          \"secure_url\",\n          \"type\",\n          \"width\",\n          \"height\",\n          \"alt\"\n        ];\n        for (const key of imageKeys) {\n          if (key === \"src\" && image.src) {\n            const isAbsoluteURL = hasProtocol(image.src);\n            const imageURL = isAbsoluteURL ? image.src : joinURL(config.app.baseURL, image.src ?? \"/\");\n            head.meta.push({\n              property: \"og:image\",\n              content: host && !isAbsoluteURL ? new URL(imageURL, host).href : imageURL\n            });\n          } else if (image[key]) {\n            head.meta.push({\n              property: `og:image:${key}`,\n              content: image[key]\n            });\n          }\n        }\n      }\n    }\n    if (process.client) {\n      nextTick(() => useHead(head));\n    } else {\n      useHead(head);\n    }\n  };\n  watch(() => unref(_content), refreshHead, { immediate: true });\n};\n","<script>\nimport { defineComponent, h, useSlots } from \"vue\";\nimport { withTrailingSlash } from \"ufo\";\nimport ContentRenderer from \"./ContentRenderer\";\nimport ContentQuery from \"./ContentQuery\";\nimport { useRoute, useContentHead } from \"#imports\";\nexport default defineComponent({\n  name: \"ContentDoc\",\n  props: {\n    /**\n     * Renderer props\n     */\n    /**\n     * The tag to use for the renderer element if it is used.\n     * @default 'div'\n     */\n    tag: {\n      type: String,\n      required: false,\n      default: \"div\"\n    },\n    /**\n     * Whether or not to render the excerpt.\n     * @default false\n     */\n    excerpt: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Query props\n     */\n    /**\n     * The path of the content to load from content source.\n     * @default useRoute().path\n     */\n    path: {\n      type: String,\n      required: false,\n      default: void 0\n    },\n    /**\n     * A query builder params object to be passed to <ContentQuery /> component.\n     */\n    query: {\n      type: Object,\n      required: false,\n      default: void 0\n    },\n    /**\n     * Whether or not to map the document data to the `head` property.\n     */\n    head: {\n      type: Boolean,\n      required: false,\n      default: true\n    }\n  },\n  /**\n   * Document empty fallback\n   * @slot empty\n   */\n  /**\n   * Document not found fallback\n   * @slot not-found\n   */\n  render(ctx) {\n    const slots = useSlots();\n    const { tag, excerpt, path, query, head } = ctx;\n    const contentQueryProps = {\n      ...query || {},\n      path: path || query?.path || withTrailingSlash(useRoute().path),\n      find: \"one\"\n    };\n    const emptyNode = (slot, data) => h(\"pre\", null, JSON.stringify({ message: \"You should use slots with <ContentDoc>\", slot, data }, null, 2));\n    return h(\n      ContentQuery,\n      contentQueryProps,\n      {\n        // Default slot\n        default: slots?.default ? ({ data, refresh, isPartial }) => {\n          if (head) {\n            useContentHead(data);\n          }\n          return slots.default?.({ doc: data, refresh, isPartial, excerpt, ...this.$attrs });\n        } : ({ data }) => {\n          if (head) {\n            useContentHead(data);\n          }\n          return h(\n            ContentRenderer,\n            { value: data, excerpt, tag, ...this.$attrs },\n            // Forward local `empty` slots to ContentRenderer if it is used.\n            { empty: (bindings) => slots?.empty ? slots.empty(bindings) : emptyNode(\"default\", data) }\n          );\n        },\n        // Empty slot\n        empty: (bindings) => slots?.empty?.(bindings) || h(\"p\", null, \"Document is empty, overwrite this content with #empty slot in <ContentDoc>.\"),\n        // Not Found slot\n        \"not-found\": (bindings) => slots?.[\"not-found\"]?.(bindings) || h(\"p\", null, \"Document not found, overwrite this content with #not-found slot in <ContentDoc>.\")\n      }\n    );\n  }\n});\n</script>\n"],"names":["useContentHead","_content","to","useRoute","content","unref","config","useRuntimeConfig","watch","data","head","title","description","m","nextTick","useHead","_sfc_main","defineComponent","slots","useSlots","tag","excerpt","path","query","ctx","h","contentQueryProps","_a","refresh","isPartial","ContentRenderer","bindings","emptyNode"],"mappings":"+cAEA,MAAAA,EAAA,CAAAC,EAAAC,EAAAC,EAAA,IAAA,CACA,MAAAC,EAAAC,EAAAJ,CAAA,EACAK,EAAAC,IAyFAC,EAAA,IAAAH,EAAAJ,CAAA,EAxFA,CAAAQ,EAAAL,IAAA,CACA,GAAA,CAAAF,EAAA,MAAA,CAAAO,EACA,OAEA,MAAAC,EAAA,OAAA,OAAA,CAAA,GAAAD,GAAA,YAAAA,EAAA,OAAA,CAAA,CAAA,EACAC,EAAA,KAAA,CAAA,GAAAA,EAAA,MAAA,CAAA,CAAA,EACAA,EAAA,KAAA,CAAA,GAAAA,EAAA,MAAA,CAAA,CAAA,EACA,MAAAC,EAAAD,EAAA,QAAAD,GAAA,YAAAA,EAAA,OACAE,IACAD,EAAA,MAAAC,GAQAL,EAAA,OAAA,QAAA,KAiBA,MAAAM,GAAAF,GAAA,YAAAA,EAAA,eAAAD,GAAA,YAAAA,EAAA,aACAG,GAAAF,EAAA,KAAA,OAAAG,GAAAA,EAAA,OAAA,aAAA,EAAA,SAAA,GACAH,EAAA,KAAA,KAAA,CACA,KAAA,cACA,QAAAE,CACA,CAAA,EAQAF,GAAA,MAAAA,EAAA,QAAAD,GAAA,MAAAA,EAAA,OAoCAK,EAAA,IAAAC,EAAAL,CAAA,CAAA,CAIA,EACA,CAAA,UAAA,EAAA,CAAA,CACA,ECxFAM,EAAAC,EAAA,CACE,KAAA,aACA,MAAA,kBAUI,SAAA,kBAOF,QAAA,4CAaE,SAAA,mBAMF,MAAA,aAEE,SAAA,sCAQA,SAAA,aAEF,aAWA,MAAAC,EAAAC,IACA,CAAA,IAAAC,EAAA,QAAAC,EAAA,KAAAC,EAAA,MAAAC,EAAA,KAAAb,CAAA,EAAAc,2DAIE,KAAA,sHAGF,OAAAC,IAEEC,EACA,qEAGI,OAAAhB,GACEV,EAAAS,CAAA,GAEFkB,EAAAT,EAAA,UAAA,YAAAS,EAAA,KAAAT,EAAA,CAAA,IAAAT,EAAA,QAAAmB,EAAA,UAAAC,EAAA,QAAAR,EAAA,GAAA,KAAA,MAAA,iBAEAX,GACEV,EAAAS,CAAA,EAEFgB,EACEK,EACA,CAAA,MAAArB,EAAA,QAAAY,EAAA,IAAAD,EAAA,GAAA,KAAA,MAAA,EAEA,CAAA,MAAAW,GAAAb,GAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAa,CAAA,EAAAC,EAAA,UAAAvB,CAAA,CAAA,4KAMJ,YAAAsB,UAAA,QAAAJ,EAAAT,GAAA,YAAAA,EAAA,eAAA,YAAAS,EAAA,KAAAT,EAAAa,KAAAN,EAAA,IAAA,KAAA,kFAAA,EACF,EAEJ,CACF,CAAA"}