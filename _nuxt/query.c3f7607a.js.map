{"version":3,"file":"query.c3f7607a.js","sources":["../../../../node_modules/@nuxt/content/dist/runtime/query/match/utils.mjs","../../../../node_modules/@nuxt/content/dist/runtime/query/query.mjs"],"sourcesContent":["export const get = (obj, path) => path.split(\".\").reduce((acc, part) => acc && acc[part], obj);\nconst _pick = (obj, condition) => Object.keys(obj).filter(condition).reduce((newObj, key) => Object.assign(newObj, { [key]: obj[key] }), {});\nexport const pick = (keys) => (obj) => keys && keys.length ? _pick(obj, (key) => keys.includes(key)) : obj;\nexport const omit = (keys) => (obj) => keys && keys.length ? _pick(obj, (key) => !keys.includes(key)) : obj;\nexport const apply = (fn) => (data) => Array.isArray(data) ? data.map((item) => fn(item)) : fn(data);\nexport const detectProperties = (keys) => {\n  const prefixes = [];\n  const properties = [];\n  for (const key of keys) {\n    if ([\"$\", \"_\"].includes(key)) {\n      prefixes.push(key);\n    } else {\n      properties.push(key);\n    }\n  }\n  return { prefixes, properties };\n};\nexport const withoutKeys = (keys = []) => (obj) => {\n  if (keys.length === 0 || !obj) {\n    return obj;\n  }\n  const { prefixes, properties } = detectProperties(keys);\n  return _pick(obj, (key) => !properties.includes(key) && !prefixes.includes(key[0]));\n};\nexport const withKeys = (keys = []) => (obj) => {\n  if (keys.length === 0 || !obj) {\n    return obj;\n  }\n  const { prefixes, properties } = detectProperties(keys);\n  return _pick(obj, (key) => properties.includes(key) || prefixes.includes(key[0]));\n};\nexport const sortList = (data, params) => {\n  const comperable = new Intl.Collator(params.$locale, {\n    numeric: params.$numeric,\n    caseFirst: params.$caseFirst,\n    sensitivity: params.$sensitivity\n  });\n  const keys = Object.keys(params).filter((key) => !key.startsWith(\"$\"));\n  for (const key of keys) {\n    data = data.sort((a, b) => {\n      const values = [get(a, key), get(b, key)].map((value) => {\n        if (value === null) {\n          return void 0;\n        }\n        if (value instanceof Date) {\n          return value.toISOString();\n        }\n        return value;\n      });\n      if (params[key] === -1) {\n        values.reverse();\n      }\n      return comperable.compare(values[0], values[1]);\n    });\n  }\n  return data;\n};\nexport const assertArray = (value, message = \"Expected an array\") => {\n  if (!Array.isArray(value)) {\n    throw new TypeError(message);\n  }\n};\nexport const ensureArray = (value) => Array.isArray(value) ? value : value ? [value] : [];\n","import { ensureArray } from \"./match/utils.mjs\";\nconst arrayParams = [\"sort\", \"where\", \"only\", \"without\"];\nexport const createQuery = (fetcher, intitialParams) => {\n  const queryParams = {\n    ...intitialParams\n  };\n  for (const key of arrayParams) {\n    if (queryParams[key]) {\n      queryParams[key] = ensureArray(queryParams[key]);\n    }\n  }\n  const $set = (key, fn = (v) => v) => {\n    return (...values) => {\n      queryParams[key] = fn(...values);\n      return query;\n    };\n  };\n  const query = {\n    params: () => queryParams,\n    only: $set(\"only\", ensureArray),\n    without: $set(\"without\", ensureArray),\n    where: $set(\"where\", (q) => [...ensureArray(queryParams.where), q]),\n    sort: $set(\"sort\", (sort) => [...ensureArray(queryParams.sort), ...ensureArray(sort)]),\n    limit: $set(\"limit\", (v) => parseInt(String(v), 10)),\n    skip: $set(\"skip\", (v) => parseInt(String(v), 10)),\n    // find\n    find: () => fetcher(query),\n    findOne: () => {\n      queryParams.first = true;\n      return fetcher(query);\n    },\n    findSurround: (surroundQuery, options) => {\n      queryParams.surround = { query: surroundQuery, ...options };\n      return fetcher(query);\n    },\n    // locale\n    locale: (_locale) => query.where({ _locale })\n  };\n  return query;\n};\n"],"names":["get","obj","path","acc","part","_pick","condition","newObj","key","apply","fn","data","item","detectProperties","keys","prefixes","properties","withoutKeys","withKeys","sortList","params","comperable","a","b","values","value","assertArray","message","ensureArray","arrayParams","createQuery","fetcher","intitialParams","queryParams","$set","v","query","q","sort","surroundQuery","options","_locale"],"mappings":"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"}