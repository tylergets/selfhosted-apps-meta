{"version":3,"file":"cookie.c01368a7.js","sources":["../../../../node_modules/cookie-es/dist/index.mjs","../../../../node_modules/nuxt/dist/app/composables/cookie.mjs"],"sourcesContent":["const decode = decodeURIComponent;\nconst encode = encodeURIComponent;\nconst pairSplitRegExp = /; */;\nconst fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\nfunction parse(str, options) {\n  if (typeof str !== \"string\") {\n    throw new TypeError(\"argument str must be a string\");\n  }\n  let obj = {};\n  let opt = options || {};\n  let pairs = str.split(pairSplitRegExp);\n  let dec = opt.decode || decode;\n  for (let i = 0; i < pairs.length; i++) {\n    let pair = pairs[i];\n    let eq_idx = pair.indexOf(\"=\");\n    if (eq_idx < 0) {\n      continue;\n    }\n    let key = pair.substr(0, eq_idx).trim();\n    let val = pair.substr(++eq_idx, pair.length).trim();\n    if (val[0] == '\"') {\n      val = val.slice(1, -1);\n    }\n    if (obj[key] == void 0) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n  return obj;\n}\nfunction serialize(name, value, options) {\n  let opt = options || {};\n  let enc = opt.encode || encode;\n  if (typeof enc !== \"function\") {\n    throw new TypeError(\"option encode is invalid\");\n  }\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError(\"argument name is invalid\");\n  }\n  let encodedValue = enc(value);\n  if (encodedValue && !fieldContentRegExp.test(encodedValue)) {\n    throw new TypeError(\"argument val is invalid\");\n  }\n  let str = name + \"=\" + encodedValue;\n  if (opt.maxAge != null) {\n    let maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError(\"option maxAge is invalid\");\n    }\n    str += \"; Max-Age=\" + Math.floor(maxAge);\n  }\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError(\"option domain is invalid\");\n    }\n    str += \"; Domain=\" + opt.domain;\n  }\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError(\"option path is invalid\");\n    }\n    str += \"; Path=\" + opt.path;\n  }\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== \"function\") {\n      throw new TypeError(\"option expires is invalid\");\n    }\n    str += \"; Expires=\" + opt.expires.toUTCString();\n  }\n  if (opt.httpOnly) {\n    str += \"; HttpOnly\";\n  }\n  if (opt.secure) {\n    str += \"; Secure\";\n  }\n  if (opt.sameSite) {\n    let sameSite = typeof opt.sameSite === \"string\" ? opt.sameSite.toLowerCase() : opt.sameSite;\n    switch (sameSite) {\n      case true:\n        str += \"; SameSite=Strict\";\n        break;\n      case \"lax\":\n        str += \"; SameSite=Lax\";\n        break;\n      case \"strict\":\n        str += \"; SameSite=Strict\";\n        break;\n      case \"none\":\n        str += \"; SameSite=None\";\n        break;\n      default:\n        throw new TypeError(\"option sameSite is invalid\");\n    }\n  }\n  return str;\n}\nfunction tryDecode(str, decode2) {\n  try {\n    return decode2(str);\n  } catch (e) {\n    return str;\n  }\n}\n\nexport { parse, serialize };\n","import { ref, watch } from \"vue\";\nimport { parse, serialize } from \"cookie-es\";\nimport { appendHeader } from \"h3\";\nimport destr from \"destr\";\nimport { isEqual } from \"ohash\";\nimport { useNuxtApp } from \"../nuxt.mjs\";\nimport { useRequestEvent } from \"./ssr.mjs\";\nconst CookieDefaults = {\n  path: \"/\",\n  watch: true,\n  decode: (val) => destr(decodeURIComponent(val)),\n  encode: (val) => encodeURIComponent(typeof val === \"string\" ? val : JSON.stringify(val))\n};\nexport function useCookie(name, _opts) {\n  const opts = { ...CookieDefaults, ..._opts };\n  const cookies = readRawCookies(opts) || {};\n  const cookie = ref(cookies[name] ?? opts.default?.());\n  if (process.client) {\n    const callback = () => {\n      writeClientCookie(name, cookie.value, opts);\n    };\n    if (opts.watch) {\n      watch(cookie, callback, { deep: opts.watch !== \"shallow\" });\n    } else {\n      callback();\n    }\n  } else if (process.server) {\n    const nuxtApp = useNuxtApp();\n    const writeFinalCookieValue = () => {\n      if (!isEqual(cookie.value, cookies[name])) {\n        writeServerCookie(useRequestEvent(nuxtApp), name, cookie.value, opts);\n      }\n    };\n    const unhook = nuxtApp.hooks.hookOnce(\"app:rendered\", writeFinalCookieValue);\n    nuxtApp.hooks.hookOnce(\"app:redirected\", () => {\n      unhook();\n      return writeFinalCookieValue();\n    });\n  }\n  return cookie;\n}\nfunction readRawCookies(opts = {}) {\n  if (process.server) {\n    return parse(useRequestEvent()?.req.headers.cookie || \"\", opts);\n  } else if (process.client) {\n    return parse(document.cookie, opts);\n  }\n}\nfunction serializeCookie(name, value, opts = {}) {\n  if (value === null || value === void 0) {\n    return serialize(name, value, { ...opts, maxAge: -1 });\n  }\n  return serialize(name, value, opts);\n}\nfunction writeClientCookie(name, value, opts = {}) {\n  if (process.client) {\n    document.cookie = serializeCookie(name, value, opts);\n  }\n}\nfunction writeServerCookie(event, name, value, opts = {}) {\n  if (event) {\n    appendHeader(event, \"Set-Cookie\", serializeCookie(name, value, opts));\n  }\n}\n"],"names":["decode","encode","pairSplitRegExp","fieldContentRegExp","parse","str","options","obj","opt","pairs","dec","i","pair","eq_idx","key","val","tryDecode","serialize","name","value","enc","encodedValue","maxAge","decode2","CookieDefaults","destr","useCookie","_opts","opts","cookies","readRawCookies","cookie","ref","_a","callback","writeClientCookie","watch","serializeCookie"],"mappings":"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"}