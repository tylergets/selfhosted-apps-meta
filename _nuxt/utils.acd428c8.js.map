{"version":3,"file":"utils.acd428c8.js","sources":["../../../../node_modules/@nuxt/content/dist/runtime/markdown-parser/utils/node.mjs","../../../../node_modules/@nuxt/content/dist/runtime/composables/utils.mjs"],"sourcesContent":["export const TEXT_TAGS = [\"p\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"li\"];\nexport function isTag(vnode, tag) {\n  if (vnode.type === tag) {\n    return true;\n  }\n  if (typeof vnode.type === \"object\" && vnode.type.tag === tag) {\n    return true;\n  }\n  if (vnode.tag === tag) {\n    return true;\n  }\n  return false;\n}\nexport function isText(vnode) {\n  return isTag(vnode, \"text\") || typeof vnode.children === \"string\";\n}\nexport function nodeChildren(node) {\n  if (Array.isArray(node.children) || typeof node.children === \"string\") {\n    return node.children;\n  }\n  if (typeof node.children.default === \"function\") {\n    return node.children.default();\n  }\n  return [];\n}\nexport function nodeTextContent(node) {\n  if (!node) {\n    return \"\";\n  }\n  if (Array.isArray(node)) {\n    return node.map(nodeTextContent).join(\"\");\n  }\n  if (isText(node)) {\n    return node.children || node.value;\n  }\n  const children = nodeChildren(node);\n  if (Array.isArray(children)) {\n    return children.map(nodeTextContent).join(\"\");\n  }\n  return \"\";\n}\nexport function unwrap(vnode, tags = [\"p\"]) {\n  if (Array.isArray(vnode)) {\n    return vnode.flatMap((node) => unwrap(node, tags));\n  }\n  let result = vnode;\n  if (tags.some((tag) => tag === \"*\" || isTag(vnode, tag))) {\n    result = nodeChildren(vnode) || vnode;\n    if (!Array.isArray(result) && TEXT_TAGS.some((tag) => isTag(vnode, tag))) {\n      result = [result];\n    }\n  }\n  return result;\n}\nexport function flatUnwrap(vnodes, tags = [\"p\"]) {\n  vnodes = Array.isArray(vnodes) ? vnodes : [vnodes];\n  if (!tags.length) {\n    return vnodes;\n  }\n  return vnodes.flatMap((vnode) => flatUnwrap(unwrap(vnode, [tags[0]]), tags.slice(1))).filter((vnode) => !(isText(vnode) && nodeTextContent(vnode).trim() === \"\"));\n}\n","import { withBase } from \"ufo\";\nimport { useRuntimeConfig, useRequestEvent, useCookie, useRoute } from \"#app\";\nimport { unwrap, flatUnwrap } from \"../markdown-parser/utils/node.mjs\";\nexport const withContentBase = (url) => withBase(url, useRuntimeConfig().public.content.api.baseURL);\nexport const useUnwrap = () => ({\n  unwrap,\n  flatUnwrap\n});\nexport const useContentDisabled = () => {\n  console.warn(\"useContent is only accessible when you are using `documentDriven` mode.\");\n  console.warn(\"Learn more by visiting: https://content.nuxtjs.org/guide/writing/document-driven\");\n  throw new Error(\"useContent is only accessible when you are using `documentDriven` mode.\");\n};\nexport const navigationDisabled = () => {\n  console.warn(\"Navigation is only accessible when you enable it in module options.\");\n  console.warn(\"Learn more by visiting: https://content.nuxtjs.org/api/configuration#navigation\");\n  throw new Error(\"Navigation is only accessible when you enable it in module options.\");\n};\nexport const addPrerenderPath = (path) => {\n  const event = useRequestEvent();\n  event.res.setHeader(\n    \"x-nitro-prerender\",\n    [\n      event.res.getHeader(\"x-nitro-prerender\"),\n      path\n    ].filter(Boolean).join(\",\")\n  );\n};\nexport const shouldUseClientDB = () => {\n  const { experimental } = useRuntimeConfig().content;\n  if (!process.client) {\n    return false;\n  }\n  if (experimental.clientDB) {\n    return true;\n  }\n  const query = useRoute().query;\n  if (Object.prototype.hasOwnProperty.call(query, \"preview\") && !query.preview) {\n    return false;\n  }\n  if (query.preview || useCookie(\"previewToken\").value) {\n    return true;\n  }\n  return false;\n};\n"],"names":["TEXT_TAGS","isTag","vnode","tag","isText","nodeChildren","node","nodeTextContent","children","unwrap","tags","result","flatUnwrap","vnodes","withContentBase","url","withBase","useRuntimeConfig","useUnwrap","useContentDisabled","shouldUseClientDB","experimental","query","useRoute","useCookie"],"mappings":"2GAAO,MAAMA,EAAY,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAI,EAChE,SAASC,EAAMC,EAAOC,EAAK,CAOhC,OANID,EAAM,OAASC,GAGf,OAAOD,EAAM,MAAS,UAAYA,EAAM,KAAK,MAAQC,GAGrDD,EAAM,MAAQC,CAIpB,CACO,SAASC,EAAOF,EAAO,CAC5B,OAAOD,EAAMC,EAAO,MAAM,GAAK,OAAOA,EAAM,UAAa,QAC3D,CACO,SAASG,EAAaC,EAAM,CACjC,OAAI,MAAM,QAAQA,EAAK,QAAQ,GAAK,OAAOA,EAAK,UAAa,SACpDA,EAAK,SAEV,OAAOA,EAAK,SAAS,SAAY,WAC5BA,EAAK,SAAS,UAEhB,EACT,CACO,SAASC,EAAgBD,EAAM,CACpC,GAAI,CAACA,EACH,MAAO,GAET,GAAI,MAAM,QAAQA,CAAI,EACpB,OAAOA,EAAK,IAAIC,CAAe,EAAE,KAAK,EAAE,EAE1C,GAAIH,EAAOE,CAAI,EACb,OAAOA,EAAK,UAAYA,EAAK,MAE/B,MAAME,EAAWH,EAAaC,CAAI,EAClC,OAAI,MAAM,QAAQE,CAAQ,EACjBA,EAAS,IAAID,CAAe,EAAE,KAAK,EAAE,EAEvC,EACT,CACO,SAASE,EAAOP,EAAOQ,EAAO,CAAC,GAAG,EAAG,CAC1C,GAAI,MAAM,QAAQR,CAAK,EACrB,OAAOA,EAAM,QAASI,GAASG,EAAOH,EAAMI,CAAI,CAAC,EAEnD,IAAIC,EAAST,EACb,OAAIQ,EAAK,KAAMP,GAAQA,IAAQ,KAAOF,EAAMC,EAAOC,CAAG,CAAC,IACrDQ,EAASN,EAAaH,CAAK,GAAKA,EAC5B,CAAC,MAAM,QAAQS,CAAM,GAAKX,EAAU,KAAMG,GAAQF,EAAMC,EAAOC,CAAG,CAAC,IACrEQ,EAAS,CAACA,CAAM,IAGbA,CACT,CACO,SAASC,EAAWC,EAAQH,EAAO,CAAC,GAAG,EAAG,CAE/C,OADAG,EAAS,MAAM,QAAQA,CAAM,EAAIA,EAAS,CAACA,CAAM,EAC5CH,EAAK,OAGHG,EAAO,QAASX,GAAUU,EAAWH,EAAOP,EAAO,CAACQ,EAAK,CAAC,CAAC,CAAC,EAAGA,EAAK,MAAM,CAAC,CAAC,CAAC,EAAE,OAAQR,GAAU,EAAEE,EAAOF,CAAK,GAAKK,EAAgBL,CAAK,EAAE,KAAI,IAAO,GAAG,EAFvJW,CAGX,CCzDY,MAACC,EAAmBC,GAAQC,EAASD,EAAKE,EAAkB,EAAC,OAAO,QAAQ,IAAI,OAAO,EACtFC,EAAY,KAAO,CAC9B,OAAAT,EACA,WAAAG,CACF,GACaO,EAAqB,IAAM,CACtC,cAAQ,KAAK,yEAAyE,EACtF,QAAQ,KAAK,kFAAkF,EACzF,IAAI,MAAM,yEAAyE,CAC3F,EAgBaC,EAAoB,IAAM,CACrC,KAAM,CAAE,aAAAC,CAAY,EAAKJ,EAAgB,EAAG,QAI5C,GAAII,EAAa,SACf,MAAO,GAET,MAAMC,EAAQC,EAAU,EAAC,MACzB,OAAI,OAAO,UAAU,eAAe,KAAKD,EAAO,SAAS,GAAK,CAACA,EAAM,QAC5D,GAEL,GAAAA,EAAM,SAAWE,EAAU,cAAc,EAAE,MAIjD"}